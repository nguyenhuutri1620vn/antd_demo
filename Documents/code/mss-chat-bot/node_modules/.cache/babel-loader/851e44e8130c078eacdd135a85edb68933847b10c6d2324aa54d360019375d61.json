{"ast":null,"code":"import axios from 'axios';\nimport _ from 'lodash';\nimport Config from '../config';\nimport { localStorage } from '../utils';\nimport Cookies from 'js-cookie';\nimport * as appActions from '../actions';\n// import queryString from 'query-string';\n// import { message } from 'antd';\nexport class Api {\n  getDefaultHeader() {\n    return {\n      'content-type': 'application/json'\n    };\n  }\n  constructor(instance, getDefaultHeader) {\n    this.instance = void 0;\n    if (instance) {\n      this.instance = instance;\n      this.getDefaultHeader = getDefaultHeader;\n    } else {\n      this.instance = axios.create({\n        baseURL: Config.MSS_SERVICES_URL\n      });\n    }\n  }\n  getDefaultOptions(isAuth = true) {\n    // const token = cookie.getItem(cookie.keys.TOKEN) || null;\n    // let auth = isAuth ? { Authorization: 'Bearer ' + token } : {};\n    return {\n      headers: {\n        ...(typeof this.getDefaultHeader === 'function' ? this.getDefaultHeader() : {})\n        // ...auth,\n      }\n    };\n  }\n\n  attachToken(payload = {}) {\n    const token = Cookies.get('_token');\n    //const token = localStorage.getItem('token');\n    const sessionId = localStorage.getItem('sessionId');\n    return {\n      ...payload,\n      Token: token,\n      SessionId: sessionId\n    };\n  }\n  handleError(error) {\n    if (error.message === 'Network Error') {\n      // Toast.error('Network error!');\n    } else if (error.response && error.response.status === 403) {\n      // if (error.response.data) {\n      //   if (error.response.data.message === 'UserRoleInvalid') {\n      //     global.store.dispatch(appActions.setBuildData({\n      //       modalBuild: true,\n      //       typeBuild: false,\n      //     }));\n      //   }\n      // }\n    } else if (error.response && error.response.status === 401) {\n      Cookies.remove('_token');\n      window.location.href = Config.SIGN_IN_URL + '?url_new_insight=' + window.location.href.replaceAll('&', \"and\");\n    }\n  }\n  async createPromise(response) {\n    return new Promise((resolve, reject) => {\n      response.then(result => {\n        if (result.status === 200) {\n          Cookies.set('_token', result.data.Token, {\n            path: \"\"\n          });\n          //localStorage.setItem('token', result.data.Token);\n        }\n\n        if (result.status === 200 && result.data.BuildData === 1) {\n          global.store.dispatch(appActions.setBuildData({\n            modalBuild: true,\n            typeBuild: true\n          }));\n        }\n        if (result.status === 200 && result.data.BuildData === 2) {\n          global.store.dispatch(appActions.setBuildData({\n            modalBuild: true,\n            typeBuild: false\n          }));\n        }\n        resolve(result);\n      }, error => {\n        this.handleError(error);\n        reject(error);\n      });\n    });\n  }\n  fetch(url, options = {}) {\n    return this.createPromise(this.get(url, options, false));\n  }\n  get(url, options = {}, isAuth = true) {\n    const finalOptions = _.merge(this.getDefaultOptions(isAuth), options);\n    return this.createPromise(this.instance.get(url, finalOptions));\n  }\n  put(url, payload = null, options = {}, isAuth = true) {\n    const finalOptions = _.merge(this.getDefaultOptions(isAuth), options);\n    const finalPayload = this.attachToken(payload);\n    return this.createPromise(this.instance.put(url, finalPayload, finalOptions));\n  }\n  post(url, payload = null, options = {}, isAuth = true) {\n    const finalOptions = _.merge(this.getDefaultOptions(isAuth), options);\n    const finalPayload = this.attachToken(payload);\n    return this.createPromise(this.instance.post(url, finalPayload, finalOptions));\n  }\n  delete(url, payload = null, options = {}, isAuth = true) {\n    const finalOptions = _.merge(this.getDefaultOptions(isAuth), options);\n    const finalPayload = this.attachToken(payload);\n    if (finalPayload) {\n      finalOptions.data = finalPayload;\n    }\n    return this.createPromise(this.instance.request({\n      method: 'DELETE',\n      url,\n      ...finalOptions\n    }));\n  }\n}\nexport default new Api();","map":{"version":3,"names":["axios","_","Config","localStorage","Cookies","appActions","Api","getDefaultHeader","constructor","instance","create","baseURL","MSS_SERVICES_URL","getDefaultOptions","isAuth","headers","attachToken","payload","token","get","sessionId","getItem","Token","SessionId","handleError","error","message","response","status","remove","window","location","href","SIGN_IN_URL","replaceAll","createPromise","Promise","resolve","reject","then","result","set","data","path","BuildData","global","store","dispatch","setBuildData","modalBuild","typeBuild","fetch","url","options","finalOptions","merge","put","finalPayload","post","delete","request","method"],"sources":["/home/trinh/Documents/code/mss-showme/src/app/utils/api.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig, AxiosError, AxiosResponse } from 'axios';\nimport _ from 'lodash';\nimport Config from '../config';\nimport { localStorage } from '../utils';\nimport { Object } from '../types';\nimport Cookies from 'js-cookie';\nimport * as appActions from '../actions';\n// import queryString from 'query-string';\n// import { message } from 'antd';\n\ntype optionsType = object | undefined | null;\n\nexport class Api {\n  instance: AxiosInstance;\n  getDefaultHeader?(): Object<any> {\n    return { 'content-type': 'application/json' };\n  }\n\n  constructor(instance?: AxiosInstance, getDefaultHeader?: () => Object<any>) {\n    if (instance) {\n      this.instance = instance;\n      this.getDefaultHeader = getDefaultHeader;\n    } else {\n      this.instance = axios.create({\n        baseURL: Config.MSS_SERVICES_URL,\n      });\n    }\n  }\n\n  getDefaultOptions(isAuth = true) {\n    // const token = cookie.getItem(cookie.keys.TOKEN) || null;\n    // let auth = isAuth ? { Authorization: 'Bearer ' + token } : {};\n    return {\n      headers: {\n        ...(typeof this.getDefaultHeader === 'function' ? this.getDefaultHeader() : {}),\n        // ...auth,\n      },\n    };\n  }\n\n  attachToken(payload: any = {}) {\n    const token = Cookies.get('_token');\n    //const token = localStorage.getItem('token');\n    const sessionId = localStorage.getItem('sessionId');\n    return {\n      ...payload,\n      Token: token,\n      SessionId: sessionId,\n    };\n  }\n\n  handleError(error: AxiosError) {\n    if (error.message === 'Network Error') {\n      // Toast.error('Network error!');\n    } else if (error.response && error.response.status === 403) {\n      // if (error.response.data) {\n      //   if (error.response.data.message === 'UserRoleInvalid') {\n      //     global.store.dispatch(appActions.setBuildData({\n      //       modalBuild: true,\n      //       typeBuild: false,\n      //     }));\n      //   }\n      // }\n\n    } else if (error.response && error.response.status === 401) {\n      Cookies.remove('_token');\n      window.location.href = Config.SIGN_IN_URL + '?url_new_insight=' + window.location.href.replaceAll('&', \"and\");\n    }\n  }\n\n  async createPromise(response: Promise<AxiosResponse>): Promise<AxiosResponse> {\n    return new Promise((resolve, reject) => {\n      response.then(\n        (result: any) => {\n          if (result.status === 200) {\n            Cookies.set('_token', result.data.Token, { path: \"\" })\n            //localStorage.setItem('token', result.data.Token);\n          }\n          if (result.status === 200 && result.data.BuildData === 1) {\n            global.store.dispatch(appActions.setBuildData({\n              modalBuild: true,\n              typeBuild: true,\n            }));\n          }\n          if (result.status === 200 && result.data.BuildData === 2) {\n            global.store.dispatch(appActions.setBuildData({\n              modalBuild: true,\n              typeBuild: false,\n            }));\n          }\n          resolve(result);\n        },\n        error => {\n          this.handleError(error);\n          reject(error);\n        }\n      );\n    });\n  }\n\n  fetch(url: string, options = {}) {\n    return this.createPromise(this.get(url, options, false));\n  }\n\n  get(url: string, options: any = {}, isAuth = true): Promise<AxiosResponse> {\n    const finalOptions = _.merge(this.getDefaultOptions(isAuth), options);\n    return this.createPromise(this.instance.get(url, finalOptions));\n  }\n\n  put(url: string, payload: any = null, options: any = {}, isAuth = true): Promise<AxiosResponse> {\n    const finalOptions = _.merge(this.getDefaultOptions(isAuth), options);\n    const finalPayload = this.attachToken(payload);\n    return this.createPromise(this.instance.put(url, finalPayload, finalOptions));\n  }\n\n  post(url: string, payload: any = null, options: optionsType = {}, isAuth = true): Promise<AxiosResponse> {\n    const finalOptions = _.merge(this.getDefaultOptions(isAuth), options);\n    const finalPayload = this.attachToken(payload);\n    return this.createPromise(this.instance.post(url, finalPayload, finalOptions));\n  }\n\n  delete(url: string, payload: any = null, options: any = {}, isAuth = true): Promise<AxiosResponse> {\n    const finalOptions: AxiosRequestConfig = _.merge(this.getDefaultOptions(isAuth), options);\n    const finalPayload = this.attachToken(payload);\n\n    if (finalPayload) {\n      finalOptions.data = finalPayload;\n    }\n\n    return this.createPromise(this.instance.request({ method: 'DELETE', url, ...finalOptions }));\n  }\n}\n\nexport default new Api();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}