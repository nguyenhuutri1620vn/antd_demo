{"ast":null,"code":"import _objectSpread from\"/home/trinh/Documents/code/mss-showme/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _createClass from\"/home/trinh/Documents/code/mss-showme/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/home/trinh/Documents/code/mss-showme/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _toConsumableArray from\"/home/trinh/Documents/code/mss-showme/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";export var LEVELS={none:0,error:1,warn:2,info:3,debug:4};var _defaultOptions={level:'error',// Default logger level as error only\nshowLevel:false,// default do not show level name\ntimestamp:false// default do not show timestamp\n};var _initializeLogger=function _initializeLogger(logger,output,options){[{level:'error',functionName:'error'},{level:'warn',functionName:'warn'},{level:'info',functionName:'info'},{level:'debug',functionName:'info'}].forEach(function(_ref){var level=_ref.level,functionName=_ref.functionName;var currentLevelNumber=LEVELS[level];var currentLogFunc=function currentLogFunc(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}if(currentLevelNumber<=options.level){if(options.showLevel){args=[\"[\".concat(level,\"]\")].concat(_toConsumableArray(args));}if(options.timestamp){args=[\"[\".concat(new Date().toISOString(),\"]\")].concat(_toConsumableArray(args));}output[functionName].apply(output,args);}};if(options.level===currentLevelNumber){logger.log=currentLogFunc;}logger[level]=currentLogFunc;});};var AppLogger=/*#__PURE__*/_createClass(function AppLogger(output){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,AppLogger);this._output=void 0;this._options=void 0;this.none=function(){};this.error=function(){};this.warn=function(){};this.info=function(){};this.debug=function(){};this._output=output;this._options=_objectSpread(_objectSpread(_objectSpread({},_defaultOptions),options),{},{level:LEVELS[options.level||_defaultOptions.level]||LEVELS['info']});// Initialize logger by options\n_initializeLogger(this,output,this._options);});export default AppLogger;","map":{"version":3,"names":["LEVELS","none","error","warn","info","debug","_defaultOptions","level","showLevel","timestamp","_initializeLogger","logger","output","options","functionName","forEach","_ref","currentLevelNumber","currentLogFunc","_len","arguments","length","args","Array","_key","concat","_toConsumableArray","Date","toISOString","apply","log","AppLogger","_createClass","undefined","_classCallCheck","_output","_options","_objectSpread"],"sources":["/home/trinh/Documents/code/mss-showme/src/app/utils/logger.ts"],"sourcesContent":["export type ILogType = string | 'none' | 'error' | 'warn' | 'info' | 'debug';\n\nexport const LEVELS: {\n  [k in ILogType]: number;\n} = {\n  none: 0,\n  error: 1,\n  warn: 2,\n  info: 3,\n  debug: 4,\n};\n\nconst _defaultOptions = {\n  level: 'error', // Default logger level as error only\n  showLevel: false, // default do not show level name\n  timestamp: false, // default do not show timestamp\n};\n\nconst _initializeLogger = (logger: any, output: any, options: any) => {\n  [\n    {\n      level: 'error',\n      functionName: 'error',\n    },\n    {\n      level: 'warn',\n      functionName: 'warn',\n    },\n    {\n      level: 'info',\n      functionName: 'info',\n    },\n    {\n      level: 'debug',\n      functionName: 'info',\n    },\n  ].forEach(({ level, functionName }: { level: ILogType; functionName: string }) => {\n    const currentLevelNumber: number = LEVELS[level];\n    const currentLogFunc = (...args: any) => {\n      if (currentLevelNumber <= options.level) {\n        if (options.showLevel) {\n          args = [`[${level}]`, ...args];\n        }\n        if (options.timestamp) {\n          args = [`[${new Date().toISOString()}]`, ...args];\n        }\n        output[functionName].apply(output, args);\n      }\n    };\n\n    if (options.level === currentLevelNumber) {\n      logger.log = currentLogFunc;\n    }\n    logger[level] = currentLogFunc;\n  });\n};\n\nclass AppLogger {\n  _output: object;\n  _options: { [key: string]: any };\n\n  none = (...args: any): void | any => { };\n  error = (...args: any): void | any => { };\n  warn = (...args: any): void | any => { };\n  info = (...args: any): void | any => { };\n  debug = (...args: any): void | any => { };\n\n  constructor(output: object, options: { [key: string]: any } = {}) {\n    this._output = output;\n    this._options = {\n      ..._defaultOptions,\n      ...options,\n      level: LEVELS[options.level || _defaultOptions.level] || LEVELS['info'],\n    };\n\n    // Initialize logger by options\n    _initializeLogger(this, output, this._options);\n  }\n}\n\nexport default AppLogger;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}