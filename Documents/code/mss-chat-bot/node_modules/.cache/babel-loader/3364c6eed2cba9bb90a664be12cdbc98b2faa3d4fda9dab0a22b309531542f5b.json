{"ast":null,"code":"var _jsxFileName = \"/home/trinh/Documents/code/mss-showme/src/components/ChatBot/InputMessage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Button, Col, Input, Modal, Row } from 'antd';\nimport { MinusOutlined, SendOutlined } from '@ant-design/icons';\nimport ChatMessage from './ChatMessage';\nimport services from '../../services/InputServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = ({\n  inputRef,\n  isOpen,\n  setIsOpen,\n  submitMessage,\n  setSubmitMessage\n}) => {\n  _s();\n  const [valueMessage, setValueMessage] = useState('');\n  const [isLoadingRespons, setIsLoadingRespons] = useState(false);\n  const input = {\n    valueMessage,\n    isLoadingRespons,\n    setIsOpen,\n    setSubmitMessage,\n    setValueMessage,\n    setIsLoadingRespons\n  };\n  const {\n    sendMessage,\n    handleInput\n  } = useMemo(() => {\n    return services(input);\n  }, [...Object.values(input)]);\n  useEffect(() => {\n    if (isOpen) {\n      setTimeout(() => {\n        var _inputRef$current;\n        return inputRef === null || inputRef === void 0 ? void 0 : (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus({\n          cursor: 'end'\n        });\n      }, 100);\n    }\n  }, [isOpen, inputRef]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Insight Assistant\",\n      width: 600,\n      wrapClassName: \"chatbot-modal\",\n      style: {\n        position: 'absolute',\n        bottom: 0,\n        right: 16,\n        padding: 0\n      },\n      open: isOpen,\n      onCancel: () => setIsOpen(false),\n      closeIcon: /*#__PURE__*/_jsxDEV(MinusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 28\n      }, this),\n      footer: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 22,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter your message...\",\n            style: {\n              borderRadius: 20,\n              background: '#F0F0F0',\n              color: '#262626',\n              height: 40\n            },\n            ref: inputRef,\n            maxLength: 500,\n            showCount: true,\n            onChange: handleInput,\n            value: valueMessage,\n            onKeyUp: e => sendMessage(e, 'key')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 1,\n          style: {\n            marginLeft: '6px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              borderRadius: 100,\n              height: 40\n            },\n            type: \"primary\",\n            onClick: e => sendMessage(e, 'mouse'),\n            disabled: isLoadingRespons,\n            children: /*#__PURE__*/_jsxDEV(SendOutlined, {\n              style: {\n                fontSize: 22,\n                margin: '-7px',\n                paddingTop: '9px',\n                paddingLeft: '3px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(ChatMessage, {\n        isOpen: isOpen,\n        isLoadingRespons: isLoadingRespons,\n        submitMessage: submitMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, \"modal-chatbot\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Chatbot, \"zu3W/XZ6Kfp+XTtRiCf7weeyEfU=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","Button","Col","Input","Modal","Row","MinusOutlined","SendOutlined","ChatMessage","services","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","inputRef","isOpen","setIsOpen","submitMessage","setSubmitMessage","_s","valueMessage","setValueMessage","isLoadingRespons","setIsLoadingRespons","input","sendMessage","handleInput","Object","values","setTimeout","_inputRef$current","current","focus","cursor","children","title","width","wrapClassName","style","position","bottom","right","padding","open","onCancel","closeIcon","fileName","_jsxFileName","lineNumber","columnNumber","footer","span","placeholder","borderRadius","background","color","height","ref","maxLength","showCount","onChange","value","onKeyUp","e","marginLeft","type","onClick","disabled","fontSize","margin","paddingTop","paddingLeft","_c","$RefreshReg$"],"sources":["/home/trinh/Documents/code/mss-showme/src/components/ChatBot/InputMessage.tsx"],"sourcesContent":["import React, { FC, PropsWithChildren, useEffect, useMemo, useState } from 'react';\nimport { Button, Col, Input, Modal, Row } from 'antd';\nimport { MinusOutlined, SendOutlined } from '@ant-design/icons';\nimport ChatMessage from './ChatMessage';\nimport services from '../../services/InputServices';\n\nexport interface IInputProps {\n    submitMessage: any[]\n    inputRef: any\n    isOpen: boolean\n    setIsOpen: (value: boolean) => void;\n    setSubmitMessage: (value: any) => void;\n}\n\nconst Chatbot: FC<PropsWithChildren<IInputProps>> = ({ inputRef, isOpen, setIsOpen, submitMessage, setSubmitMessage }: any) => {\n    const [valueMessage, setValueMessage] = useState<string>('');\n    const [isLoadingRespons, setIsLoadingRespons] = useState<boolean>(false);\n\n    const input = {\n        valueMessage,\n        isLoadingRespons,\n        setIsOpen,\n        setSubmitMessage,\n        setValueMessage,\n        setIsLoadingRespons,\n    }\n\n    const {\n        sendMessage,\n        handleInput\n    } = useMemo(() => {\n        return services(input);\n    }, [...Object.values(input)]);\n\n    useEffect(() => {\n        if (isOpen) {\n            setTimeout(() => inputRef?.current?.focus({\n                cursor: 'end',\n            }), 100);\n        }\n    }, [isOpen, inputRef]);\n\n    return (\n        <>\n            <Modal\n                title=\"Insight Assistant\"\n                key=\"modal-chatbot\"\n                width={600}\n                wrapClassName='chatbot-modal'\n                style={{ position: 'absolute', bottom: 0, right: 16, padding: 0 }}\n                open={isOpen}\n                onCancel={() => setIsOpen(false)}\n                closeIcon={<MinusOutlined />}\n                footer={\n                    <Row>\n                        <Col span={22}>\n                            <Input\n                                placeholder='Enter your message...'\n                                style={{ borderRadius: 20, background: '#F0F0F0', color: '#262626', height: 40 }}\n                                ref={inputRef}\n                                maxLength={500}\n                                showCount\n                                onChange={handleInput}\n                                value={valueMessage}\n                                onKeyUp={(e) => sendMessage(e, 'key')}\n                            />\n                        </Col>\n                        <Col span={1} style={{ marginLeft: '6px' }}>\n                            <Button style={{ borderRadius: 100, height: 40 }} type='primary' onClick={(e) => sendMessage(e, 'mouse')} disabled={isLoadingRespons}>\n                                <SendOutlined style={{ fontSize: 22, margin: '-7px', paddingTop: '9px', paddingLeft: '3px' }} />\n                            </Button>\n                        </Col>\n                    </Row>\n                }>\n                <ChatMessage\n                    isOpen={isOpen}\n                    isLoadingRespons={isLoadingRespons}\n                    submitMessage={submitMessage}\n                />\n            </Modal>\n        </>\n    );\n};\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA2BC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAClF,SAASC,MAAM,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,GAAG,QAAQ,MAAM;AACrD,SAASC,aAAa,EAAEC,YAAY,QAAQ,mBAAmB;AAC/D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAUpD,MAAMC,OAA2C,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,SAAS;EAAEC,aAAa;EAAEC;AAAsB,CAAC,KAAK;EAAAC,EAAA;EAC3H,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAS,EAAE,CAAC;EAC5D,MAAM,CAACuB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxB,QAAQ,CAAU,KAAK,CAAC;EAExE,MAAMyB,KAAK,GAAG;IACVJ,YAAY;IACZE,gBAAgB;IAChBN,SAAS;IACTE,gBAAgB;IAChBG,eAAe;IACfE;EACJ,CAAC;EAED,MAAM;IACFE,WAAW;IACXC;EACJ,CAAC,GAAG5B,OAAO,CAAC,MAAM;IACd,OAAOU,QAAQ,CAACgB,KAAK,CAAC;EAC1B,CAAC,EAAE,CAAC,GAAGG,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAC,CAAC,CAAC;EAE7B3B,SAAS,CAAC,MAAM;IACZ,IAAIkB,MAAM,EAAE;MACRc,UAAU,CAAC;QAAA,IAAAC,iBAAA;QAAA,OAAMhB,QAAQ,aAARA,QAAQ,wBAAAgB,iBAAA,GAARhB,QAAQ,CAAEiB,OAAO,cAAAD,iBAAA,uBAAjBA,iBAAA,CAAmBE,KAAK,CAAC;UACtCC,MAAM,EAAE;QACZ,CAAC,CAAC;MAAA,GAAE,GAAG,CAAC;IACZ;EACJ,CAAC,EAAE,CAAClB,MAAM,EAAED,QAAQ,CAAC,CAAC;EAEtB,oBACIJ,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACIxB,OAAA,CAACP,KAAK;MACFgC,KAAK,EAAC,mBAAmB;MAEzBC,KAAK,EAAE,GAAI;MACXC,aAAa,EAAC,eAAe;MAC7BC,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAE,CAAE;MAClEC,IAAI,EAAE5B,MAAO;MACb6B,QAAQ,EAAEA,CAAA,KAAM5B,SAAS,CAAC,KAAK,CAAE;MACjC6B,SAAS,eAAEnC,OAAA,CAACL,aAAa;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAC7BC,MAAM,eACFxC,OAAA,CAACN,GAAG;QAAA8B,QAAA,gBACAxB,OAAA,CAACT,GAAG;UAACkD,IAAI,EAAE,EAAG;UAAAjB,QAAA,eACVxB,OAAA,CAACR,KAAK;YACFkD,WAAW,EAAC,uBAAuB;YACnCd,KAAK,EAAE;cAAEe,YAAY,EAAE,EAAE;cAAEC,UAAU,EAAE,SAAS;cAAEC,KAAK,EAAE,SAAS;cAAEC,MAAM,EAAE;YAAG,CAAE;YACjFC,GAAG,EAAE3C,QAAS;YACd4C,SAAS,EAAE,GAAI;YACfC,SAAS;YACTC,QAAQ,EAAElC,WAAY;YACtBmC,KAAK,EAAEzC,YAAa;YACpB0C,OAAO,EAAGC,CAAC,IAAKtC,WAAW,CAACsC,CAAC,EAAE,KAAK;UAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNvC,OAAA,CAACT,GAAG;UAACkD,IAAI,EAAE,CAAE;UAACb,KAAK,EAAE;YAAE0B,UAAU,EAAE;UAAM,CAAE;UAAA9B,QAAA,eACvCxB,OAAA,CAACV,MAAM;YAACsC,KAAK,EAAE;cAAEe,YAAY,EAAE,GAAG;cAAEG,MAAM,EAAE;YAAG,CAAE;YAACS,IAAI,EAAC,SAAS;YAACC,OAAO,EAAGH,CAAC,IAAKtC,WAAW,CAACsC,CAAC,EAAE,OAAO,CAAE;YAACI,QAAQ,EAAE7C,gBAAiB;YAAAY,QAAA,eACjIxB,OAAA,CAACJ,YAAY;cAACgC,KAAK,EAAE;gBAAE8B,QAAQ,EAAE,EAAE;gBAAEC,MAAM,EAAE,MAAM;gBAAEC,UAAU,EAAE,KAAK;gBAAEC,WAAW,EAAE;cAAM;YAAE;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5F;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR;MAAAf,QAAA,eACDxB,OAAA,CAACH,WAAW;QACRQ,MAAM,EAAEA,MAAO;QACfO,gBAAgB,EAAEA,gBAAiB;QACnCL,aAAa,EAAEA;MAAc;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC,GAhCE,eAAe;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiChB;EAAC,gBACV,CAAC;AAEX,CAAC;AAAC9B,EAAA,CApEIN,OAA2C;AAAA2D,EAAA,GAA3C3D,OAA2C;AAsEjD,eAAeA,OAAO;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}