{"ast":null,"code":"import _toConsumableArray from\"/home/trinh/Documents/code/mss-showme/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/trinh/Documents/code/mss-showme/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useMemo,useState}from'react';import{Button,Col,Input,Modal,Row}from'antd';import{MinusOutlined,SendOutlined}from'@ant-design/icons';import ChatMessage from'./ChatMessage';import services from'../../services/InputServices';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Chatbot=function Chatbot(_ref){var inputRef=_ref.inputRef,isOpen=_ref.isOpen,isLoadingRespons=_ref.isLoadingRespons,setIsOpen=_ref.setIsOpen,submitMessage=_ref.submitMessage,setSubmitMessage=_ref.setSubmitMessage,setIsLoadingRespons=_ref.setIsLoadingRespons;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),valueMessage=_useState2[0],setValueMessage=_useState2[1];var input={valueMessage:valueMessage,isLoadingRespons:isLoadingRespons,setIsOpen:setIsOpen,setSubmitMessage:setSubmitMessage,setValueMessage:setValueMessage,setIsLoadingRespons:setIsLoadingRespons};var _useMemo=useMemo(function(){return services(input);},_toConsumableArray(Object.values(input))),sendMessage=_useMemo.sendMessage,handleInput=_useMemo.handleInput;useEffect(function(){if(isOpen){setTimeout(function(){var _inputRef$current;return inputRef===null||inputRef===void 0?void 0:(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus({cursor:'end'});},100);}},[isOpen,inputRef]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Modal,{title:\"Insight Assistant\",width:600,wrapClassName:\"chatbot-modal\",style:{position:'absolute',bottom:0,right:16,padding:0},open:isOpen,onCancel:function onCancel(){return setIsOpen(false);},closeIcon:/*#__PURE__*/_jsx(MinusOutlined,{}),footer:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{id:\"showme-input\",span:22,children:/*#__PURE__*/_jsx(Input,{placeholder:\"Enter your message...\",style:{borderRadius:20,background:'#F0F0F0',color:'#262626',height:40},ref:inputRef,maxLength:500,showCount:true,onChange:handleInput,value:valueMessage,onKeyUp:function onKeyUp(e){return sendMessage(e,'key');}})}),/*#__PURE__*/_jsx(Col,{span:1,style:{marginLeft:'6px'},children:/*#__PURE__*/_jsx(Button,{style:{borderRadius:100,height:40},type:\"primary\",onClick:function onClick(e){return sendMessage(e,'mouse');},disabled:isLoadingRespons,children:/*#__PURE__*/_jsx(SendOutlined,{style:{fontSize:22,margin:'-7px',paddingTop:'9px',paddingLeft:'3px'}})})})]}),children:/*#__PURE__*/_jsx(ChatMessage,{isOpen:isOpen,isLoadingRespons:isLoadingRespons,submitMessage:submitMessage})},\"modal-chatbot\")});};export default Chatbot;","map":{"version":3,"names":["React","useEffect","useMemo","useState","Button","Col","Input","Modal","Row","MinusOutlined","SendOutlined","ChatMessage","services","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chatbot","_ref","inputRef","isOpen","isLoadingRespons","setIsOpen","submitMessage","setSubmitMessage","setIsLoadingRespons","_useState","_useState2","_slicedToArray","valueMessage","setValueMessage","input","_useMemo","_toConsumableArray","Object","values","sendMessage","handleInput","setTimeout","_inputRef$current","current","focus","cursor","children","title","width","wrapClassName","style","position","bottom","right","padding","open","onCancel","closeIcon","footer","id","span","placeholder","borderRadius","background","color","height","ref","maxLength","showCount","onChange","value","onKeyUp","e","marginLeft","type","onClick","disabled","fontSize","margin","paddingTop","paddingLeft"],"sources":["/home/trinh/Documents/code/mss-showme/src/components/ChatBot/InputMessage.tsx"],"sourcesContent":["import React, { FC, PropsWithChildren, useEffect, useMemo, useState } from 'react';\nimport { Button, Col, Input, Modal, Row } from 'antd';\nimport { MinusOutlined, SendOutlined } from '@ant-design/icons';\nimport ChatMessage from './ChatMessage';\nimport services from '../../services/InputServices';\n\nexport interface IInputProps {\n    submitMessage: any[]\n    inputRef: any\n    isOpen: boolean\n    isLoadingRespons: boolean,\n    setIsOpen: (value: boolean) => void;\n    setSubmitMessage: (value: any) => void;\n    setIsLoadingRespons: (value: boolean) => void;\n}\n\nconst Chatbot: FC<PropsWithChildren<IInputProps>> = ({ inputRef, isOpen, isLoadingRespons, setIsOpen, submitMessage, setSubmitMessage, setIsLoadingRespons }: any) => {\n    const [valueMessage, setValueMessage] = useState<string>('');\n\n    const input = {\n        valueMessage,\n        isLoadingRespons,\n        setIsOpen,\n        setSubmitMessage,\n        setValueMessage,\n        setIsLoadingRespons,\n    }\n\n    const {\n        sendMessage,\n        handleInput\n    } = useMemo(() => {\n        return services(input);\n    }, [...Object.values(input)]);\n\n    useEffect(() => {\n        if (isOpen) {\n            setTimeout(() => inputRef?.current?.focus({\n                cursor: 'end',\n            }), 100);\n        }\n    }, [isOpen, inputRef]);\n\n    return (\n        <>\n            <Modal\n                title=\"Insight Assistant\"\n                key=\"modal-chatbot\"\n                width={600}\n                wrapClassName='chatbot-modal'\n                style={{ position: 'absolute', bottom: 0, right: 16, padding: 0 }}\n                open={isOpen}\n                onCancel={() => setIsOpen(false)}\n                closeIcon={<MinusOutlined />}\n                footer={\n                    <Row>\n                        <Col id='showme-input' span={22}>\n                            <Input\n                                placeholder='Enter your message...'\n                                style={{ borderRadius: 20, background: '#F0F0F0', color: '#262626', height: 40 }}\n                                ref={inputRef}\n                                maxLength={500}\n                                showCount\n                                onChange={handleInput}\n                                value={valueMessage}\n                                onKeyUp={(e) => sendMessage(e, 'key')}\n                            />\n                        </Col>\n                        <Col span={1} style={{ marginLeft: '6px' }}>\n                            <Button style={{ borderRadius: 100, height: 40 }} type='primary' onClick={(e) => sendMessage(e, 'mouse')} disabled={isLoadingRespons}>\n                                <SendOutlined style={{ fontSize: 22, margin: '-7px', paddingTop: '9px', paddingLeft: '3px' }} />\n                            </Button>\n                        </Col>\n                    </Row>\n                }>\n                <ChatMessage\n                    isOpen={isOpen}\n                    isLoadingRespons={isLoadingRespons}\n                    submitMessage={submitMessage}\n                />\n            </Modal>\n        </>\n    );\n};\n\nexport default Chatbot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}