{"ast":null,"code":"export const LEVELS = {\n  none: 0,\n  error: 1,\n  warn: 2,\n  info: 3,\n  debug: 4\n};\nconst _defaultOptions = {\n  level: 'error',\n  // Default logger level as error only\n  showLevel: false,\n  // default do not show level name\n  timestamp: false // default do not show timestamp\n};\n\nconst _initializeLogger = (logger, output, options) => {\n  [{\n    level: 'error',\n    functionName: 'error'\n  }, {\n    level: 'warn',\n    functionName: 'warn'\n  }, {\n    level: 'info',\n    functionName: 'info'\n  }, {\n    level: 'debug',\n    functionName: 'info'\n  }].forEach(({\n    level,\n    functionName\n  }) => {\n    const currentLevelNumber = LEVELS[level];\n    const currentLogFunc = (...args) => {\n      if (currentLevelNumber <= options.level) {\n        if (options.showLevel) {\n          args = [`[${level}]`, ...args];\n        }\n        if (options.timestamp) {\n          args = [`[${new Date().toISOString()}]`, ...args];\n        }\n        output[functionName].apply(output, args);\n      }\n    };\n    if (options.level === currentLevelNumber) {\n      logger.log = currentLogFunc;\n    }\n    logger[level] = currentLogFunc;\n  });\n};\nclass AppLogger {\n  constructor(output, options = {}) {\n    this._output = void 0;\n    this._options = void 0;\n    this.none = (...args) => {};\n    this.error = (...args) => {};\n    this.warn = (...args) => {};\n    this.info = (...args) => {};\n    this.debug = (...args) => {};\n    this._output = output;\n    this._options = {\n      ..._defaultOptions,\n      ...options,\n      level: LEVELS[options.level || _defaultOptions.level] || LEVELS['info']\n    };\n\n    // Initialize logger by options\n    _initializeLogger(this, output, this._options);\n  }\n}\nexport default AppLogger;","map":{"version":3,"names":["LEVELS","none","error","warn","info","debug","_defaultOptions","level","showLevel","timestamp","_initializeLogger","logger","output","options","functionName","forEach","currentLevelNumber","currentLogFunc","args","Date","toISOString","apply","log","AppLogger","constructor","_output","_options"],"sources":["/home/trinh/Documents/code/mss-showme/src/app/utils/logger.ts"],"sourcesContent":["export type ILogType = string | 'none' | 'error' | 'warn' | 'info' | 'debug';\n\nexport const LEVELS: {\n  [k in ILogType]: number;\n} = {\n  none: 0,\n  error: 1,\n  warn: 2,\n  info: 3,\n  debug: 4,\n};\n\nconst _defaultOptions = {\n  level: 'error', // Default logger level as error only\n  showLevel: false, // default do not show level name\n  timestamp: false, // default do not show timestamp\n};\n\nconst _initializeLogger = (logger: any, output: any, options: any) => {\n  [\n    {\n      level: 'error',\n      functionName: 'error',\n    },\n    {\n      level: 'warn',\n      functionName: 'warn',\n    },\n    {\n      level: 'info',\n      functionName: 'info',\n    },\n    {\n      level: 'debug',\n      functionName: 'info',\n    },\n  ].forEach(({ level, functionName }: { level: ILogType; functionName: string }) => {\n    const currentLevelNumber: number = LEVELS[level];\n    const currentLogFunc = (...args: any) => {\n      if (currentLevelNumber <= options.level) {\n        if (options.showLevel) {\n          args = [`[${level}]`, ...args];\n        }\n        if (options.timestamp) {\n          args = [`[${new Date().toISOString()}]`, ...args];\n        }\n        output[functionName].apply(output, args);\n      }\n    };\n\n    if (options.level === currentLevelNumber) {\n      logger.log = currentLogFunc;\n    }\n    logger[level] = currentLogFunc;\n  });\n};\n\nclass AppLogger {\n  _output: object;\n  _options: { [key: string]: any };\n\n  none = (...args: any): void | any => { };\n  error = (...args: any): void | any => { };\n  warn = (...args: any): void | any => { };\n  info = (...args: any): void | any => { };\n  debug = (...args: any): void | any => { };\n\n  constructor(output: object, options: { [key: string]: any } = {}) {\n    this._output = output;\n    this._options = {\n      ..._defaultOptions,\n      ...options,\n      level: LEVELS[options.level || _defaultOptions.level] || LEVELS['info'],\n    };\n\n    // Initialize logger by options\n    _initializeLogger(this, output, this._options);\n  }\n}\n\nexport default AppLogger;\n"],"mappings":"AAEA,OAAO,MAAMA,MAEZ,GAAG;EACFC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE,CAAC;EACPC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,eAAe,GAAG;EACtBC,KAAK,EAAE,OAAO;EAAE;EAChBC,SAAS,EAAE,KAAK;EAAE;EAClBC,SAAS,EAAE,KAAK,CAAE;AACpB,CAAC;;AAED,MAAMC,iBAAiB,GAAGA,CAACC,MAAW,EAAEC,MAAW,EAAEC,OAAY,KAAK;EACpE,CACE;IACEN,KAAK,EAAE,OAAO;IACdO,YAAY,EAAE;EAChB,CAAC,EACD;IACEP,KAAK,EAAE,MAAM;IACbO,YAAY,EAAE;EAChB,CAAC,EACD;IACEP,KAAK,EAAE,MAAM;IACbO,YAAY,EAAE;EAChB,CAAC,EACD;IACEP,KAAK,EAAE,OAAO;IACdO,YAAY,EAAE;EAChB,CAAC,CACF,CAACC,OAAO,CAAC,CAAC;IAAER,KAAK;IAAEO;EAAwD,CAAC,KAAK;IAChF,MAAME,kBAA0B,GAAGhB,MAAM,CAACO,KAAK,CAAC;IAChD,MAAMU,cAAc,GAAGA,CAAC,GAAGC,IAAS,KAAK;MACvC,IAAIF,kBAAkB,IAAIH,OAAO,CAACN,KAAK,EAAE;QACvC,IAAIM,OAAO,CAACL,SAAS,EAAE;UACrBU,IAAI,GAAG,CAAE,IAAGX,KAAM,GAAE,EAAE,GAAGW,IAAI,CAAC;QAChC;QACA,IAAIL,OAAO,CAACJ,SAAS,EAAE;UACrBS,IAAI,GAAG,CAAE,IAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAE,GAAE,EAAE,GAAGF,IAAI,CAAC;QACnD;QACAN,MAAM,CAACE,YAAY,CAAC,CAACO,KAAK,CAACT,MAAM,EAAEM,IAAI,CAAC;MAC1C;IACF,CAAC;IAED,IAAIL,OAAO,CAACN,KAAK,KAAKS,kBAAkB,EAAE;MACxCL,MAAM,CAACW,GAAG,GAAGL,cAAc;IAC7B;IACAN,MAAM,CAACJ,KAAK,CAAC,GAAGU,cAAc;EAChC,CAAC,CAAC;AACJ,CAAC;AAED,MAAMM,SAAS,CAAC;EAUdC,WAAWA,CAACZ,MAAc,EAAEC,OAA+B,GAAG,CAAC,CAAC,EAAE;IAAA,KATlEY,OAAO;IAAA,KACPC,QAAQ;IAAA,KAERzB,IAAI,GAAG,CAAC,GAAGiB,IAAS,KAAiB,CAAE,CAAC;IAAA,KACxChB,KAAK,GAAG,CAAC,GAAGgB,IAAS,KAAiB,CAAE,CAAC;IAAA,KACzCf,IAAI,GAAG,CAAC,GAAGe,IAAS,KAAiB,CAAE,CAAC;IAAA,KACxCd,IAAI,GAAG,CAAC,GAAGc,IAAS,KAAiB,CAAE,CAAC;IAAA,KACxCb,KAAK,GAAG,CAAC,GAAGa,IAAS,KAAiB,CAAE,CAAC;IAGvC,IAAI,CAACO,OAAO,GAAGb,MAAM;IACrB,IAAI,CAACc,QAAQ,GAAG;MACd,GAAGpB,eAAe;MAClB,GAAGO,OAAO;MACVN,KAAK,EAAEP,MAAM,CAACa,OAAO,CAACN,KAAK,IAAID,eAAe,CAACC,KAAK,CAAC,IAAIP,MAAM,CAAC,MAAM;IACxE,CAAC;;IAED;IACAU,iBAAiB,CAAC,IAAI,EAAEE,MAAM,EAAE,IAAI,CAACc,QAAQ,CAAC;EAChD;AACF;AAEA,eAAeH,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}