{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _uniq from \"lodash/uniq\";\nimport _isString from \"lodash/isString\";\nimport _isNil from \"lodash/isNil\";\n\nvar _scaleMap, _dec, _dec2, _class, _class2, _descriptor;\n\nimport { ScaleTypes, StyleScaleType, TYPES } from '@antv/l7-core';\nimport { extent } from 'd3-array';\nimport * as d3 from 'd3-scale';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nvar dateRegex = /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\\1(?:29|30)|(?:0?[13578]|1[02])\\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]?)0?2\\2(?:29))(\\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;\nvar scaleMap = (_scaleMap = {}, _defineProperty(_scaleMap, ScaleTypes.LINEAR, d3.scaleLinear), _defineProperty(_scaleMap, ScaleTypes.POWER, d3.scalePow), _defineProperty(_scaleMap, ScaleTypes.LOG, d3.scaleLog), _defineProperty(_scaleMap, ScaleTypes.IDENTITY, d3.scaleIdentity), _defineProperty(_scaleMap, ScaleTypes.TIME, d3.scaleTime), _defineProperty(_scaleMap, ScaleTypes.QUANTILE, d3.scaleQuantile), _defineProperty(_scaleMap, ScaleTypes.QUANTIZE, d3.scaleQuantize), _defineProperty(_scaleMap, ScaleTypes.THRESHOLD, d3.scaleThreshold), _defineProperty(_scaleMap, ScaleTypes.CAT, d3.scaleOrdinal), _scaleMap);\nvar FeatureScalePlugin = (_dec = injectable(), _dec2 = inject(TYPES.IGlobalConfigService), _dec(_class = (_class2 = function () {\n  function FeatureScalePlugin() {\n    _classCallCheck(this, FeatureScalePlugin);\n\n    _initializerDefineProperty(this, \"configService\", _descriptor, this);\n\n    _defineProperty(this, \"scaleCache\", {});\n\n    _defineProperty(this, \"scaleOptions\", {});\n  }\n\n  _createClass(FeatureScalePlugin, [{\n    key: \"apply\",\n    value: function apply(layer, _ref) {\n      var _this = this;\n\n      var styleAttributeService = _ref.styleAttributeService;\n      layer.hooks.init.tap('FeatureScalePlugin', function () {\n        _this.scaleOptions = layer.getScaleOptions();\n        var attributes = styleAttributeService.getLayerStyleAttributes();\n        var dataArray = layer.getSource().data.dataArray;\n\n        if (dataArray.length === 0) {\n          return;\n        }\n\n        _this.caculateScalesForAttributes(attributes || [], dataArray);\n      });\n      layer.hooks.beforeRenderData.tap('FeatureScalePlugin', function () {\n        _this.scaleOptions = layer.getScaleOptions();\n        var attributes = styleAttributeService.getLayerStyleAttributes();\n        var dataArray = layer.getSource().data.dataArray;\n\n        _this.caculateScalesForAttributes(attributes || [], dataArray);\n\n        layer.layerModelNeedUpdate = true;\n        return true;\n      });\n      layer.hooks.beforeRender.tap('FeatureScalePlugin', function () {\n        if (layer.layerModelNeedUpdate) {\n          return;\n        }\n\n        _this.scaleOptions = layer.getScaleOptions();\n        var attributes = styleAttributeService.getLayerStyleAttributes();\n\n        if (attributes) {\n          var dataArray = layer.getSource().data.dataArray;\n\n          if (dataArray.length === 0) {\n            return;\n          }\n\n          var attributesToRescale = attributes.filter(function (attribute) {\n            return attribute.needRescale;\n          });\n\n          if (attributesToRescale.length) {\n            _this.caculateScalesForAttributes(attributesToRescale, dataArray);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"isNumber\",\n    value: function isNumber(n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n  }, {\n    key: \"caculateScalesForAttributes\",\n    value: function caculateScalesForAttributes(attributes, dataArray) {\n      var _this2 = this;\n\n      this.scaleCache = {};\n      attributes.forEach(function (attribute) {\n        if (attribute.scale) {\n          var attributeScale = attribute.scale;\n          var type = attribute.name;\n          attributeScale.names = _this2.parseFields(attribute.scale.field || []);\n          var scales = [];\n          attributeScale.names.forEach(function (field) {\n            scales.push(_this2.getOrCreateScale(field, attribute, dataArray));\n          });\n\n          if (scales.some(function (scale) {\n            return scale.type === StyleScaleType.VARIABLE;\n          })) {\n            attributeScale.type = StyleScaleType.VARIABLE;\n            scales.forEach(function (scale) {\n              if (!attributeScale.callback) {\n                var _scale$option2;\n\n                if (attributeScale.values && attributeScale.values !== 'text') {\n                  var _scale$option;\n\n                  if (((_scale$option = scale.option) === null || _scale$option === void 0 ? void 0 : _scale$option.type) === 'linear' && attributeScale.values.length > 2) {\n                    var tick = scale.scale.ticks(attributeScale.values.length);\n\n                    if (type === 'color') {\n                      scale.scale.domain(tick);\n                    }\n                  }\n\n                  scale.scale.range(attributeScale.values);\n                } else if (((_scale$option2 = scale.option) === null || _scale$option2 === void 0 ? void 0 : _scale$option2.type) === 'cat') {\n                  scale.scale.range(scale.option.domain);\n                }\n              }\n            });\n          } else {\n            attributeScale.type = StyleScaleType.CONSTANT;\n            attributeScale.defaultValues = scales.map(function (scale, index) {\n              return scale.scale(attributeScale.names[index]);\n            });\n          }\n\n          attributeScale.scalers = scales.map(function (scale) {\n            return {\n              field: scale.field,\n              func: scale.scale,\n              option: scale.option\n            };\n          });\n          attribute.needRescale = false;\n        }\n      });\n    }\n  }, {\n    key: \"getOrCreateScale\",\n    value: function getOrCreateScale(field, attribute, dataArray) {\n      var _attribute$scale;\n\n      var scalekey = [field, attribute.name].join('_');\n      var values = (_attribute$scale = attribute.scale) === null || _attribute$scale === void 0 ? void 0 : _attribute$scale.values;\n      var styleScale = this.createScale(field, attribute.name, values, dataArray);\n      return styleScale;\n    }\n  }, {\n    key: \"parseFields\",\n    value: function parseFields(field) {\n      if (Array.isArray(field)) {\n        return field;\n      }\n\n      if (_isString(field)) {\n        return field.split('*');\n      }\n\n      return [field];\n    }\n  }, {\n    key: \"createScale\",\n    value: function createScale(field, name, values, data) {\n      var _this$scaleOptions$na, _find;\n\n      var scaleOption = this.scaleOptions[name] && ((_this$scaleOptions$na = this.scaleOptions[name]) === null || _this$scaleOptions$na === void 0 ? void 0 : _this$scaleOptions$na.field) === field ? this.scaleOptions[name] : this.scaleOptions[field];\n      var styleScale = {\n        field: field,\n        scale: undefined,\n        type: StyleScaleType.VARIABLE,\n        option: scaleOption\n      };\n\n      if (!data || !data.length) {\n        if (scaleOption && scaleOption.type) {\n          styleScale.scale = this.createDefaultScale(scaleOption);\n        } else {\n          styleScale.scale = d3.scaleOrdinal([field]);\n          styleScale.type = StyleScaleType.CONSTANT;\n        }\n\n        return styleScale;\n      }\n\n      var firstValue = (_find = data.find(function (d) {\n        return !_isNil(d[field]);\n      })) === null || _find === void 0 ? void 0 : _find[field];\n\n      if (this.isNumber(field) || _isNil(firstValue) && !scaleOption) {\n        styleScale.scale = d3.scaleOrdinal([field]);\n        styleScale.type = StyleScaleType.CONSTANT;\n      } else {\n        var type = scaleOption && scaleOption.type || this.getDefaultType(firstValue);\n\n        if (values === 'text') {\n          type = ScaleTypes.CAT;\n        }\n\n        var cfg = this.createDefaultScaleConfig(type, field, data);\n        Object.assign(cfg, scaleOption);\n        styleScale.scale = this.createDefaultScale(cfg);\n        styleScale.option = cfg;\n      }\n\n      return styleScale;\n    }\n  }, {\n    key: \"getDefaultType\",\n    value: function getDefaultType(firstValue) {\n      var type = ScaleTypes.LINEAR;\n\n      if (typeof firstValue === 'string') {\n        type = dateRegex.test(firstValue) ? ScaleTypes.TIME : ScaleTypes.CAT;\n      }\n\n      return type;\n    }\n  }, {\n    key: \"createDefaultScaleConfig\",\n    value: function createDefaultScaleConfig(type, field, data) {\n      var cfg = {\n        type: type\n      };\n      var values = (data === null || data === void 0 ? void 0 : data.map(function (item) {\n        return item[field];\n      })) || [];\n\n      if (type !== ScaleTypes.CAT && type !== ScaleTypes.QUANTILE) {\n        cfg.domain = extent(values);\n      } else if (type === ScaleTypes.CAT) {\n        cfg.domain = _uniq(values);\n      } else if (type === ScaleTypes.QUANTILE) {\n        cfg.domain = values;\n      }\n\n      return cfg;\n    }\n  }, {\n    key: \"createDefaultScale\",\n    value: function createDefaultScale(_ref2) {\n      var type = _ref2.type,\n          domain = _ref2.domain;\n      var scale = scaleMap[type]();\n\n      if (domain) {\n        scale.domain(domain);\n      }\n\n      return scale;\n    }\n  }]);\n\n  return FeatureScalePlugin;\n}(), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"configService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);\nexport { FeatureScalePlugin as default };","map":null,"metadata":{},"sourceType":"module"}