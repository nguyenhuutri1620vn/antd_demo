{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPropertyWeight = exports.getAllSortProperties = exports.getAllProperties = exports.default = void 0;\n\nvar _time = require(\"../constants/time\"); // 获取所有属性并排序\n\n\nvar getAllSortProperties = function getAllSortProperties(nodes, n) {\n  if (nodes === void 0) {\n    nodes = [];\n  }\n\n  if (n === void 0) {\n    n = 100;\n  }\n\n  var propertyKeyInfo = {};\n  nodes.forEach(function (node) {\n    if (!node.properties) {\n      return;\n    }\n\n    Object.keys(node.properties).forEach(function (propertyKey) {\n      // 目前过滤只保留可以转成数值型的或日期型的, todo: 统一转成one-hot特征向量或者embedding\n      if (propertyKey === 'id' || !\"\".concat(node.properties[propertyKey]).match(_time.secondReg) && !\"\".concat(node.properties[propertyKey]).match(_time.dateReg) && isNaN(Number(node.properties[propertyKey]))) {\n        if (propertyKeyInfo.hasOwnProperty(propertyKey)) {\n          delete propertyKeyInfo[propertyKey];\n        }\n\n        return;\n      }\n\n      if (propertyKeyInfo.hasOwnProperty(propertyKey)) {\n        propertyKeyInfo[propertyKey] += 1;\n      } else {\n        propertyKeyInfo[propertyKey] = 1;\n      }\n    });\n  }); // 取top50的属性\n\n  var sortKeys = Object.keys(propertyKeyInfo).sort(function (a, b) {\n    return propertyKeyInfo[b] - propertyKeyInfo[a];\n  });\n  return sortKeys.length < n ? sortKeys : sortKeys.slice(0, n);\n};\n\nexports.getAllSortProperties = getAllSortProperties;\n\nvar processProperty = function processProperty(properties, propertyKeys) {\n  return propertyKeys.map(function (key) {\n    if (properties.hasOwnProperty(key)) {\n      // 可以转成数值的直接转成数值\n      if (!isNaN(Number(properties[key]))) {\n        return Number(properties[key]);\n      } // 时间型的转成时间戳\n\n\n      if (properties[key].match(_time.secondReg) || properties[key].match(_time.dateReg)) {\n        // @ts-ignore\n        return Number(Date.parse(new Date(properties[key]))) / 1000;\n      }\n    }\n\n    return 0;\n  });\n}; // 获取属性特征权重\n\n\nvar getPropertyWeight = function getPropertyWeight(nodes) {\n  var propertyKeys = getAllSortProperties(nodes);\n  var allPropertiesWeight = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    allPropertiesWeight[i] = processProperty(nodes[i].properties, propertyKeys);\n  }\n\n  return allPropertiesWeight;\n}; // 获取所有节点的属性集合\n\n\nexports.getPropertyWeight = getPropertyWeight;\n\nvar getAllProperties = function getAllProperties(nodes, key) {\n  if (key === void 0) {\n    key = undefined;\n  }\n\n  var allProperties = [];\n  nodes.forEach(function (node) {\n    if (key === undefined) {\n      allProperties.push(node);\n    }\n\n    if (node[key] !== undefined) {\n      allProperties.push(node[key]);\n    }\n  });\n  return allProperties;\n};\n\nexports.getAllProperties = getAllProperties;\nvar _default = {\n  getAllSortProperties: getAllSortProperties,\n  getPropertyWeight: getPropertyWeight,\n  getAllProperties: getAllProperties\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}