{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { isNumber } from '@antv/util';\nvar DEFAULT_STYLE = {\n  fill: '#1890ff',\n  stroke: '#1890ff',\n  type: 'trend',\n  radius: 2,\n  opacity: 1,\n  cursor: 'ew-resize',\n  // 高亮的颜色\n  highLightFill: '#0050b3'\n};\nvar SIMPLE_DEFAULT_STYLE = {\n  fill: '#fff',\n  stroke: '#1890ff',\n  radius: 2,\n  opacity: 1,\n  cursor: 'ew-resize'\n};\n\nvar Handler =\n/** @class */\nfunction () {\n  function Handler(cfg) {\n    var group = cfg.group,\n        name = cfg.name,\n        type = cfg.type,\n        _a = cfg.x,\n        x = _a === void 0 ? 0 : _a,\n        _b = cfg.y,\n        y = _b === void 0 ? 0 : _b,\n        _c = cfg.width,\n        width = _c === void 0 ? 2 : _c,\n        _d = cfg.height,\n        height = _d === void 0 ? 24 : _d,\n        _e = cfg.style,\n        style = _e === void 0 ? {} : _e;\n    this.group = group;\n    this.name = name;\n    this.handleType = type;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n\n    if (type === 'trend') {\n      this.style = __assign(__assign({}, DEFAULT_STYLE), style);\n    } else if (type === 'simple') {\n      this.style = __assign(__assign({}, SIMPLE_DEFAULT_STYLE), style);\n    }\n\n    this.renderHandle();\n  }\n  /**\n   * 设置位置 x\n   * @param x\n   */\n\n\n  Handler.prototype.setX = function (x) {\n    this.setXY(x, undefined);\n  };\n  /**\n   * 设置位置 y\n   * @param y\n   */\n\n\n  Handler.prototype.setY = function (y) {\n    this.setXY(undefined, y);\n  };\n\n  Handler.prototype.setXY = function (x, y) {\n    if (isNumber(x)) {\n      this.x = x;\n    }\n\n    if (isNumber(y)) {\n      this.y = y;\n    }\n\n    this.updateXY();\n  };\n  /**\n   * 初始化组件\n   * @private\n   */\n\n\n  Handler.prototype.renderHandle = function () {\n    var _a = this,\n        width = _a.width,\n        height = _a.height,\n        style = _a.style,\n        name = _a.name;\n\n    var fill = style.fill,\n        stroke = style.stroke,\n        radius = style.radius,\n        opacity = style.opacity,\n        cursor = style.cursor;\n    this.handleGroup = this.group.addGroup(); // 趋势图时的 handle\n\n    if (this.handleType === 'trend') {\n      // 垂直线\n      this.verticalLine = this.handleGroup.addShape('rect', {\n        attrs: {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height,\n          fill: fill,\n          stroke: stroke,\n          radius: radius,\n          opacity: opacity,\n          cursor: cursor\n        },\n        name: \"\".concat(name, \"-handler\")\n      });\n      this.topCircle = this.handleGroup.addShape('circle', {\n        attrs: {\n          x: width / 2,\n          y: 0,\n          r: 2 * width,\n          fill: fill,\n          stroke: stroke,\n          radius: radius,\n          opacity: opacity,\n          cursor: cursor,\n          lineAppendWidth: 12\n        },\n        name: \"\".concat(name, \"-handler\")\n      });\n      this.bottomCircle = this.handleGroup.addShape('circle', {\n        attrs: {\n          x: width / 2,\n          y: height,\n          r: 2 * width,\n          fill: fill,\n          stroke: stroke,\n          radius: radius,\n          opacity: opacity,\n          cursor: cursor\n        },\n        name: \"\".concat(name, \"-handler\")\n      });\n    } else if (this.handleType === 'simple') {\n      this.topCircle = this.handleGroup.addShape('circle', {\n        attrs: {\n          x: width / 2,\n          y: height / 2,\n          r: 2 * width,\n          fill: fill,\n          stroke: stroke,\n          radius: radius,\n          opacity: opacity,\n          cursor: cursor,\n          lineWidth: 2\n        },\n        name: \"\".concat(name, \"-handler\")\n      });\n    } // 移动到对应的位置\n\n\n    this.updateXY();\n\n    if (this.handleType === 'trend') {\n      this.bindTrendEvents();\n    } else if (this.handleType === 'simple') {\n      this.bindSimpleEvents();\n    }\n  };\n\n  Handler.prototype.bindSimpleEvents = function () {\n    var _this = this;\n\n    var name = this.name;\n    this.handleGroup.on(\"\".concat(name, \"-handler:mouseenter\"), function () {\n      var highLightFill = _this.style.highLightFill;\n\n      _this.topCircle.attr('fill', highLightFill);\n    });\n    this.handleGroup.on(\"\".concat(name, \"-handler:mouseleave\"), function () {\n      var fill = _this.style.fill;\n\n      _this.topCircle.attr('fill', fill);\n    });\n  };\n\n  Handler.prototype.bindTrendEvents = function () {\n    var _this = this;\n\n    var name = this.name;\n    this.handleGroup.on(\"\".concat(name, \"-handler:mouseenter\"), function () {\n      var highLightFill = _this.style.highLightFill;\n\n      _this.verticalLine.attr('fill', highLightFill);\n\n      _this.topCircle.attr('fill', highLightFill);\n\n      _this.bottomCircle.attr('fill', highLightFill);\n    });\n    this.handleGroup.on(\"\".concat(name, \"-handler:mouseleave\"), function () {\n      var fill = _this.style.fill;\n\n      _this.verticalLine.attr('fill', fill);\n\n      _this.topCircle.attr('fill', fill);\n\n      _this.bottomCircle.attr('fill', fill);\n    });\n  };\n\n  Handler.prototype.show = function () {\n    this.handleGroup.show();\n  };\n\n  Handler.prototype.hide = function () {\n    this.handleGroup.hide();\n  };\n\n  Handler.prototype.updateXY = function () {\n    this.handleGroup.setMatrix([1, 0, 0, 0, 1, 0, this.x, this.y, 1]);\n  };\n\n  return Handler;\n}();\n\nexport default Handler;","map":null,"metadata":{},"sourceType":"module"}