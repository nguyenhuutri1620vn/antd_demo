{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { DisposableCollection, Disposable } from '@antv/xflow-core';\nimport { IHookContribution, ManaSyringe } from '@antv/xflow-core';\n/**\n * 内置的hook contribution\n * 处理 config上的runtime的注册项\n */\n\nlet HookContribution = class HookContribution {\n  constructor() {\n    this.toDispose = new DisposableCollection(); // args: registry: IHookService<ICmdHooks>\n\n    this.registerHookHub = () => __awaiter(this, void 0, void 0, function* () {\n      return Disposable.create(() => {});\n    });\n\n    this.registerHook = hooks => __awaiter(this, void 0, void 0, function* () {\n      const toDispose = new DisposableCollection();\n      const disposables = [hooks.graphOptions.registerHook({\n        name: 'add snapline options',\n        handler: args => __awaiter(this, void 0, void 0, function* () {\n          // 对齐线配置，辅助移动节点排版（详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/snapline）\n          args.snapline = {\n            enabled: true,\n            className: 'xflow-snapline',\n            clean: 5000\n          };\n        })\n      })];\n      toDispose.pushAll(disposables);\n      return Disposable.create(() => {});\n    });\n  }\n\n};\nHookContribution = __decorate([ManaSyringe.singleton({\n  contrib: IHookContribution\n})], HookContribution);\nexport { HookContribution };","map":null,"metadata":{},"sourceType":"module"}