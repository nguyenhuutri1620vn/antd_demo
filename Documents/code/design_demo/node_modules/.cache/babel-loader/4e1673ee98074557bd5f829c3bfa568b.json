{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { Log } from '../util';\n\nvar useFullscreen = function (el) {\n  var _a = useState(false),\n      fullscreen = _a[0],\n      setFullscreen = _a[1];\n\n  var handleFullScreenChange = function () {\n    // if exit fullscreen\n    if (!document.fullscreenElement) {\n      setFullscreen(false);\n    }\n  };\n\n  var enterFullscreen = function () {\n    if (el && el.requestFullscreen) {\n      el.requestFullscreen().then(function () {\n        setFullscreen(true);\n      }).catch(function (err) {\n        Log.error('requestFullscreen error: ', err);\n      });\n    }\n  };\n\n  var exitFullscreen = function () {\n    if (document.exitFullscreen) {\n      document.exitFullscreen().then(function () {\n        setFullscreen(false);\n      }).catch(function (err) {\n        Log.error('exitFullscreen error: ', err);\n      });\n    }\n  };\n\n  var toggleFullscreen = function () {\n    // 切换是否全屏\n    if (!el) {\n      Log.error('need dom');\n      return;\n    }\n\n    if (!fullscreen) {\n      enterFullscreen();\n    } else {\n      exitFullscreen();\n    }\n  };\n\n  useEffect(function () {\n    // 用户按Esc键退出全屏 或者 退出全屏都会触发这个事件\n    document.addEventListener('fullscreenchange', handleFullScreenChange, false);\n    return function () {\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\n    };\n  }, []);\n  return [fullscreen, toggleFullscreen];\n};\n\nexport default useFullscreen;","map":null,"metadata":{},"sourceType":"module"}