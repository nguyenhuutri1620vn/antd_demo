{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { isMini } from '@antv/l7-utils';\n\nvar DragPanHandler = function () {\n  function DragPanHandler(el, mousePan, touchPan) {\n    _classCallCheck(this, DragPanHandler);\n\n    _defineProperty(this, \"inertiaOptions\", void 0);\n\n    _defineProperty(this, \"el\", void 0);\n\n    _defineProperty(this, \"mousePan\", void 0);\n\n    _defineProperty(this, \"touchPan\", void 0);\n\n    this.el = el;\n    this.mousePan = mousePan;\n    this.touchPan = touchPan;\n  }\n\n  _createClass(DragPanHandler, [{\n    key: \"enable\",\n    value: function enable(options) {\n      this.inertiaOptions = options || {};\n      this.mousePan.enable();\n      this.touchPan.enable();\n\n      if (!isMini) {\n        this.el.classList.add('l7-touch-drag-pan');\n      }\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.mousePan.disable();\n      this.touchPan.disable();\n\n      if (!isMini) {\n        this.el.classList.remove('l7-touch-drag-pan');\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.mousePan.isEnabled() && this.touchPan.isEnabled();\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.mousePan.isActive() || this.touchPan.isActive();\n    }\n  }]);\n\n  return DragPanHandler;\n}();\n\nexport { DragPanHandler as default };","map":null,"metadata":{},"sourceType":"module"}