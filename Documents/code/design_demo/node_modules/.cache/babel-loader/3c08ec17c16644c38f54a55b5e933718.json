{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport React from 'react';\nimport { usePositionStyle } from '../../common/position';\nimport { GraphConfig, createX6GraphModule } from '../graph';\nimport { useExtensionRegistry } from './extension-context';\nimport { useXflowPrefixCls } from './global-config-context';\nimport { usePortal } from '@antv/x6-react-shape';\nimport { useXFlowApp } from './app-context';\nexport const XFlowCanvas = props => {\n  const app = useXFlowApp();\n  /** x6画布parent的dom节点 */\n\n  const rootRef = React.useRef(null);\n  /** x6画布的dom节点 */\n\n  const canvasRef = React.useRef(null);\n  /** 生成配置中心 */\n\n  const extensionRegistry = useExtensionRegistry();\n  /** 获取ContextService的配置 */\n\n  const graphConfig = React.useMemo(() => {\n    const config = props.config ? props.config : new GraphConfig();\n    config.setX6Config();\n    return config;\n    /** 保证只生成一次 */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  /** X6_NODE_PORTAL_NODE_VIEW */\n\n  const [Portal, setGraph] = usePortal(graphConfig.graphId);\n  React.useEffect(() => {\n    app && app.getGraphInstance().then(graph => {\n      setGraph(graph);\n    });\n  }, [app, setGraph]);\n  React.useEffect(() => {\n    /** 设置画布parent dom节点、画布dom节点 */\n    graphConfig.setRootContainer(rootRef.current);\n    graphConfig.setGraphContainer(canvasRef.current);\n    /** 关联XflowApp和Graph*/\n\n    graphConfig.xflowInstanceId = extensionRegistry.getInstaceId();\n    extensionRegistry.addCoreModule({\n      config: graphConfig,\n      createModule: createX6GraphModule\n    });\n    /** unmount */\n\n    const destroy = () => __awaiter(void 0, void 0, void 0, function* () {\n      graphConfig.dispose();\n    });\n\n    return () => {\n      destroy();\n    };\n    /** 保证只生成一次 */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const style = usePositionStyle(props.position);\n  const rootClz = useXflowPrefixCls('canvas-root');\n  const canvasClz = useXflowPrefixCls('x6-canvas');\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    ref: rootRef,\n    className: rootClz,\n    style: style,\n    id: graphConfig.graphId,\n    tabIndex: 0\n  }, React.createElement(\"div\", {\n    ref: canvasRef,\n    className: canvasClz\n  }), props.children), React.createElement(Portal, null));\n};\nXFlowCanvas.defaultProps = {\n  isXFlowCanvas: true\n};","map":null,"metadata":{},"sourceType":"module"}