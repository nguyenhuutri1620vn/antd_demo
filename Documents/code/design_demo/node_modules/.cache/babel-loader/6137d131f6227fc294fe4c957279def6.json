{"ast":null,"code":"import { clamp, get, size } from '@antv/util';\nimport { RANGE_VALUE, RANGE_TYPE, PERCENT } from './constants';\n/**\n * 将 range 生成为 data 数据\n * @param range\n * @param key\n * @returns {GaugeRangeData}\n */\n\nexport function processRangeData(range, percent) {\n  return range // 映射为 stack 的数据\n  .map(function (r, idx) {\n    var _a;\n\n    return _a = {}, _a[RANGE_VALUE] = r - (range[idx - 1] || 0), _a[RANGE_TYPE] = \"\" + idx, _a[PERCENT] = percent, _a;\n  }) // 去掉 0 的数据\n  .filter(function (d) {\n    return !!d[RANGE_VALUE];\n  });\n}\n/**\n * 获取 仪表盘 指针数据\n * @param percent\n */\n\nexport function getIndicatorData(percent) {\n  var _a;\n\n  return [(_a = {}, _a[PERCENT] = clamp(percent, 0, 1), _a)];\n}\n/**\n * 获取仪表盘 表盘弧形数据\n * @param percent\n * @param range\n */\n\nexport function getRangeData(percent, range) {\n  var ticks = get(range, ['ticks'], []);\n  var clampTicks = size(ticks) ? ticks : [0, clamp(percent, 0, 1), 1];\n  return processRangeData(clampTicks, percent);\n}","map":null,"metadata":{},"sourceType":"module"}