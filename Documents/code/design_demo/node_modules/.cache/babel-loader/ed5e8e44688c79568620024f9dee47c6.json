{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport G6 from '@antv/g6';\nimport { defaultMargin, defaultLabelStyle, defaultCardStyle } from '../../constants';\nimport { getStyle, getCssPadding, createMarker } from '../../utils'; // 组织架构图\n\nexport var registerOrganizationCardNode = function () {\n  var defaultIconStyle = {\n    width: 12,\n    height: 12\n  };\n  G6.registerNode('organization-card', {\n    draw: function (cfg, group) {\n      var _a, _b, _c;\n\n      if (cfg === void 0) {\n        cfg = {};\n      }\n\n      var _d = cfg.value,\n          originValue = _d === void 0 ? {} : _d,\n          nodeCfg = cfg.nodeCfg,\n          markerCfg = cfg.markerCfg;\n\n      var value = __assign({}, originValue);\n\n      var isOld = false;\n      /** 兼容历史数据 */\n\n      if (value.text) {\n        isOld = true;\n        value.name = value.text;\n      }\n\n      if (value.value) {\n        isOld = true;\n        value.title = value.value;\n      }\n\n      var _e = nodeCfg,\n          style = _e.style,\n          _f = _e.padding,\n          padding = _f === void 0 ? 0 : _f,\n          _g = _e.label,\n          label = _g === void 0 ? {} : _g,\n          autoWidth = _e.autoWidth,\n          customContent = _e.customContent;\n      var labelStyle = label.style;\n      var paddingArray = getCssPadding(padding);\n      var size = (cfg === null || cfg === void 0 ? void 0 : cfg.size) || [100, 30];\n      if (typeof size === 'number') size = [size, size];\n      var height = 0; // 统计容器总高度，动态设置，宽度不做调整\n\n      var contentWidth = size[0] - paddingArray[1] - paddingArray[3]; // card box\n\n      var cardStyle = getStyle(style, cfg, group);\n      var shape = group.addShape('rect', {\n        attrs: __assign(__assign({\n          x: 0,\n          y: 0,\n          width: size[0],\n          height: size[1]\n        }, defaultCardStyle), cardStyle),\n        name: 'main-box',\n        draggable: true\n      });\n\n      if (value) {\n        // 兼容历史数据\n        var getKey_1 = function (key) {\n          if (isOld) {\n            var keys = {\n              name: 'text',\n              title: 'value'\n            };\n            return keys[key];\n          }\n\n          return key;\n        };\n\n        height += paddingArray[0];\n\n        var createRowItems_1 = function (item, contentWidth, startX, index) {\n          if (index === void 0) {\n            index = 0;\n          }\n\n          var iconWidth = 0;\n          var rowHeight = [];\n          var keys = ['icon', 'name', 'title'];\n\n          var getXY = function (type, layoutCfg) {\n            var _a = layoutCfg.fontSize,\n                fontSize = _a === void 0 ? 12 : _a;\n            var x = 0;\n            var y = 0;\n            var offsetX = autoWidth ? iconWidth ? iconWidth + paddingArray[3] : iconWidth : (contentWidth + iconWidth) / 2;\n\n            switch (type) {\n              case 'icon':\n                x = startX;\n                y = height;\n                break;\n\n              case 'name':\n                x = startX + offsetX;\n                y = item.value ? paddingArray[0] : (size[1] - fontSize) / 2;\n                break;\n\n              case 'title':\n                x = startX + offsetX;\n                y = item.text ? paddingArray[0] + rowHeight[1] + defaultMargin : (size[1] - fontSize) / 2;\n                break;\n\n              default:\n                break;\n            }\n\n            return {\n              x: x,\n              y: y\n            };\n          };\n\n          keys.forEach(function (key, keyIndex) {\n            var isIcon = key.startsWith('icon');\n            var shapeStyle = getStyle(labelStyle, cfg, group, getKey_1(key));\n\n            if (key === 'icon' && item[key]) {\n              iconWidth = shapeStyle.width || 32;\n            }\n\n            var keyShape = group.addShape(isIcon ? 'image' : 'text', {\n              attrs: __assign(__assign(__assign(__assign({\n                textBaseline: 'top',\n                textAlign: autoWidth ? 'start' : 'center'\n              }, getXY(key, shapeStyle)), {\n                text: item[key],\n                img: item[key]\n              }), isIcon ? defaultIconStyle : defaultLabelStyle), shapeStyle),\n              name: \"\".concat(key, \"-\").concat(index, \"-\").concat(keyIndex)\n            });\n            rowHeight.push(keyShape.getBBox().height);\n          });\n          return rowHeight;\n        };\n\n        var createItems = function (item, index) {\n          var _a;\n\n          if (index === void 0) {\n            index = 0;\n          }\n\n          var itemsHeight = [];\n\n          if (customContent) {\n            itemsHeight.push((_a = customContent(item, group, {\n              startX: paddingArray[3],\n              startY: height,\n              width: contentWidth\n            })) !== null && _a !== void 0 ? _a : 0);\n          } else {\n            itemsHeight.push.apply(itemsHeight, createRowItems_1(item, contentWidth, paddingArray[3], index));\n          }\n\n          height += Math.max.apply(Math, itemsHeight);\n        };\n\n        createItems(value);\n      }\n\n      shape === null || shape === void 0 ? void 0 : shape.attr('height', Math.max(height + paddingArray[2], size[1]));\n\n      if (autoWidth) {\n        var maxX = Math.max.apply(Math, __spreadArray([size[0]], (_a = group === null || group === void 0 ? void 0 : group.getChildren()) === null || _a === void 0 ? void 0 : _a.map(function (childrenShape) {\n          return (childrenShape.getBBox().maxX || 0) + paddingArray[1];\n        }), false));\n        shape === null || shape === void 0 ? void 0 : shape.attr('width', maxX);\n      } // collapse marker\n\n\n      if (markerCfg) {\n        var stateCollapsed = ((_c = (_b = group === null || group === void 0 ? void 0 : group.get('item')) === null || _b === void 0 ? void 0 : _b.getModel()) !== null && _c !== void 0 ? _c : {}).collapsed;\n\n        var _h = shape.getBBox(),\n            shapeWidth = _h.width,\n            shapeHeight = _h.height;\n\n        var _j = typeof markerCfg === 'function' ? markerCfg(cfg, group) : markerCfg,\n            show = _j.show,\n            _k = _j.position,\n            position = _k === void 0 ? 'right' : _k,\n            collapsed = _j.collapsed,\n            markerStyle = _j.style;\n\n        createMarker({\n          show: show,\n          position: position,\n          collapsed: stateCollapsed !== null && stateCollapsed !== void 0 ? stateCollapsed : collapsed,\n          style: markerStyle\n        }, group, [shapeWidth, shapeHeight]);\n        shape.attr('defaultCollapsed', collapsed);\n      }\n\n      return shape;\n    },\n    update: undefined\n  }, 'single-node');\n};","map":null,"metadata":{},"sourceType":"module"}