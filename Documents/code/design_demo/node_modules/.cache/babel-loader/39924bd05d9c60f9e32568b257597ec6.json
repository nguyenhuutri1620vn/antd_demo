{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _dec, _class;\n\nimport { mat4 } from 'gl-matrix';\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\nvar CameraService = (_dec = injectable(), _dec(_class = function () {\n  function CameraService() {\n    _classCallCheck(this, CameraService);\n\n    _defineProperty(this, \"viewport\", void 0);\n\n    _defineProperty(this, \"overridedViewProjectionMatrix\", void 0);\n\n    _defineProperty(this, \"jitteredViewProjectionMatrix\", void 0);\n\n    _defineProperty(this, \"jitteredProjectionMatrix\", void 0);\n\n    _defineProperty(this, \"viewMatrixInverse\", void 0);\n\n    _defineProperty(this, \"cameraPosition\", void 0);\n  }\n\n  _createClass(CameraService, [{\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"update\",\n    value: function update(viewport) {\n      this.viewport = viewport;\n      this.viewMatrixInverse = mat4.create();\n      mat4.invert(this.viewMatrixInverse, viewport.getViewMatrix());\n      this.cameraPosition = [this.viewMatrixInverse[12], this.viewMatrixInverse[13], this.viewMatrixInverse[14]];\n    }\n  }, {\n    key: \"getProjectionMatrix\",\n    value: function getProjectionMatrix() {\n      return this.jitteredProjectionMatrix || this.viewport.getProjectionMatrix();\n    }\n  }, {\n    key: \"getModelMatrix\",\n    value: function getModelMatrix() {\n      return this.viewport.getModelMatrix();\n    }\n  }, {\n    key: \"getViewMatrix\",\n    value: function getViewMatrix() {\n      return this.viewport.getViewMatrix();\n    }\n  }, {\n    key: \"getViewMatrixUncentered\",\n    value: function getViewMatrixUncentered() {\n      return this.viewport.getViewMatrixUncentered();\n    }\n  }, {\n    key: \"getViewProjectionMatrixUncentered\",\n    value: function getViewProjectionMatrixUncentered() {\n      return this.viewport.getViewProjectionMatrixUncentered();\n    }\n  }, {\n    key: \"getViewProjectionMatrix\",\n    value: function getViewProjectionMatrix() {\n      return this.overridedViewProjectionMatrix || this.jitteredViewProjectionMatrix || this.viewport.getViewProjectionMatrix();\n    }\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      return this.viewport.getZoom();\n    }\n  }, {\n    key: \"getZoomScale\",\n    value: function getZoomScale() {\n      return this.viewport.getZoomScale();\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      var _this$viewport$getCen = this.viewport.getCenter(),\n          _this$viewport$getCen2 = _slicedToArray(_this$viewport$getCen, 2),\n          lng = _this$viewport$getCen2[0],\n          lat = _this$viewport$getCen2[1];\n\n      return [lng, lat];\n    }\n  }, {\n    key: \"getFocalDistance\",\n    value: function getFocalDistance() {\n      return this.viewport.getFocalDistance();\n    }\n  }, {\n    key: \"getCameraPosition\",\n    value: function getCameraPosition() {\n      return this.cameraPosition;\n    }\n  }, {\n    key: \"projectFlat\",\n    value: function projectFlat(lngLat, scale) {\n      return this.viewport.projectFlat(lngLat, scale);\n    }\n  }, {\n    key: \"setViewProjectionMatrix\",\n    value: function setViewProjectionMatrix(viewProjectionMatrix) {\n      this.overridedViewProjectionMatrix = viewProjectionMatrix;\n    }\n  }, {\n    key: \"jitterProjectionMatrix\",\n    value: function jitterProjectionMatrix(x, y) {\n      var translation = mat4.fromTranslation(mat4.create(), [x, y, 0]);\n      this.jitteredProjectionMatrix = mat4.multiply(mat4.create(), translation, this.viewport.getProjectionMatrix());\n      this.jitteredViewProjectionMatrix = mat4.multiply(mat4.create(), this.jitteredProjectionMatrix, this.viewport.getViewMatrix());\n    }\n  }, {\n    key: \"clearJitterProjectionMatrix\",\n    value: function clearJitterProjectionMatrix() {\n      this.jitteredProjectionMatrix = undefined;\n      this.jitteredViewProjectionMatrix = undefined;\n    }\n  }]);\n\n  return CameraService;\n}()) || _class);\nexport { CameraService as default };","map":null,"metadata":{},"sourceType":"module"}