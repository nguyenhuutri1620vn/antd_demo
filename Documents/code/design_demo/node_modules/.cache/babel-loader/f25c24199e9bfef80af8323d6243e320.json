{"ast":null,"code":"var _jsxFileName = \"/home/trinh/Documents/code/design_demo/src/layouts/frontend/Slidebar.js\";\nimport { UnorderedListOutlined } from \"@ant-design/icons/lib/icons\";\nimport { List } from \"antd/lib/form/Form\";\nimport React, { useEffect } from \"react\";\n\nfunction Slidebar() {\n  const count = 3;\n  const fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat,picture&noinfo`;\n  state = {\n    initLoading: true,\n    loading: false,\n    data: [],\n    list: []\n  };\n  useEffect = (() => {\n    fetch(fakeDataUrl).then(res => res.json()).then(res => {\n      this.setState({\n        initLoading: false,\n        data: res.results,\n        list: res.results\n      });\n    });\n  }, []);\n\n  onLoadMore = () => {\n    this.setState({\n      loading: true,\n      list: this.state.data.concat([...new Array(count)].map(() => ({\n        loading: true,\n        name: {},\n        picture: {}\n      })))\n    });\n    fetch(fakeDataUrl).then(res => res.json()).then(res => {\n      const data = this.state.data.concat(res.results);\n      this.setState({\n        data,\n        list: data,\n        loading: false\n      }, () => {\n        // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n        // In real scene, you can using public method of react-virtualized:\n        // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n        window.dispatchEvent(new Event(\"resize\"));\n      });\n    });\n  };\n\n  const {\n    initLoading,\n    loading,\n    list\n  } = this.state;\n  const loadMore = !initLoading && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: 12,\n      height: 32,\n      lineHeight: \"32px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: this.onLoadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"loading more\")) : null;\n  const data = [{\n    title: \"Ant Design Title 1\"\n  }, {\n    title: \"Ant Design Title 2\"\n  }, {\n    title: \"Ant Design Title 3\"\n  }, {\n    title: \"Ant Design Title 4\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slide-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slide-bar-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slide-bar-category-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UnorderedListOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), \" All Category\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slide-bar-category-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: data,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      title: /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://ant.design\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 26\n        }\n      }, item.title),\n      description: \"Ant Design, a design language for background applications, is refined by Ant UED Team\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Slidebar;","map":{"version":3,"sources":["/home/trinh/Documents/code/design_demo/src/layouts/frontend/Slidebar.js"],"names":["UnorderedListOutlined","List","React","useEffect","Slidebar","count","fakeDataUrl","state","initLoading","loading","data","list","fetch","then","res","json","setState","results","onLoadMore","concat","Array","map","name","picture","window","dispatchEvent","Event","loadMore","textAlign","marginTop","height","lineHeight","title","item"],"mappings":";AAAA,SAASA,qBAAT,QAAsC,6BAAtC;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,KAAK,GAAG,CAAd;AACA,QAAMC,WAAW,GAAI,sCAAqCD,KAAM,2CAAhE;AAEAE,EAAAA,KAAK,GAAG;AACNC,IAAAA,WAAW,EAAE,IADP;AAENC,IAAAA,OAAO,EAAE,KAFH;AAGNC,IAAAA,IAAI,EAAE,EAHA;AAINC,IAAAA,IAAI,EAAE;AAJA,GAAR;AAOAR,EAAAA,SAAS,IACN,MAAM;AACLS,IAAAA,KAAK,CAACN,WAAD,CAAL,CACGO,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb,WAAKE,QAAL,CAAc;AACZR,QAAAA,WAAW,EAAE,KADD;AAEZE,QAAAA,IAAI,EAAEI,GAAG,CAACG,OAFE;AAGZN,QAAAA,IAAI,EAAEG,GAAG,CAACG;AAHE,OAAd;AAKD,KARH;AASD,GAVA,EAWD,EAZO,CAAT;;AAcAC,EAAAA,UAAU,GAAG,MAAM;AACjB,SAAKF,QAAL,CAAc;AACZP,MAAAA,OAAO,EAAE,IADG;AAEZE,MAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWG,IAAX,CAAgBS,MAAhB,CACJ,CAAC,GAAG,IAAIC,KAAJ,CAAUf,KAAV,CAAJ,EAAsBgB,GAAtB,CAA0B,OAAO;AAC/BZ,QAAAA,OAAO,EAAE,IADsB;AAE/Ba,QAAAA,IAAI,EAAE,EAFyB;AAG/BC,QAAAA,OAAO,EAAE;AAHsB,OAAP,CAA1B,CADI;AAFM,KAAd;AAUAX,IAAAA,KAAK,CAACN,WAAD,CAAL,CACGO,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb,YAAMJ,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAX,CAAgBS,MAAhB,CAAuBL,GAAG,CAACG,OAA3B,CAAb;AACA,WAAKD,QAAL,CACE;AACEN,QAAAA,IADF;AAEEC,QAAAA,IAAI,EAAED,IAFR;AAGED,QAAAA,OAAO,EAAE;AAHX,OADF,EAME,MAAM;AACJ;AACA;AACA;AACAe,QAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,KAAJ,CAAU,QAAV,CAArB;AACD,OAXH;AAaD,KAjBH;AAkBD,GA7BD;;AA8BA,QAAM;AAAElB,IAAAA,WAAF;AAAeC,IAAAA,OAAf;AAAwBE,IAAAA;AAAxB,MAAiC,KAAKJ,KAA5C;AACA,QAAMoB,QAAQ,GACZ,CAACnB,WAAD,IAAgB,CAACC,OAAjB,gBACE;AACE,IAAA,KAAK,EAAE;AACLmB,MAAAA,SAAS,EAAE,QADN;AAELC,MAAAA,SAAS,EAAE,EAFN;AAGLC,MAAAA,MAAM,EAAE,EAHH;AAILC,MAAAA,UAAU,EAAE;AAJP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,KAAKb,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CADF,GAWI,IAZN;AAcA,QAAMR,IAAI,GAAG,CACX;AACEsB,IAAAA,KAAK,EAAE;AADT,GADW,EAIX;AACEA,IAAAA,KAAK,EAAE;AADT,GAJW,EAOX;AACEA,IAAAA,KAAK,EAAE;AADT,GAPW,EAUX;AACEA,IAAAA,KAAK,EAAE;AADT,GAVW,CAAb;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,kBADF,eAIE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,UAAU,EAAC,YADb;AAEE,IAAA,UAAU,EAAEtB,IAFd;AAGE,IAAA,UAAU,EAAGuB,IAAD,iBACV,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,MAAA,KAAK,eAAE;AAAG,QAAA,IAAI,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BA,IAAI,CAACD,KAAnC,CADT;AAEE,MAAA,WAAW,EAAC,uFAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CADF;AAuBD;;AAED,eAAe5B,QAAf","sourcesContent":["import { UnorderedListOutlined } from \"@ant-design/icons/lib/icons\";\nimport { List } from \"antd/lib/form/Form\";\nimport React, { useEffect } from \"react\";\n\nfunction Slidebar() {\n  const count = 3;\n  const fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat,picture&noinfo`;\n\n  state = {\n    initLoading: true,\n    loading: false,\n    data: [],\n    list: [],\n  };\n\n  useEffect =\n    (() => {\n      fetch(fakeDataUrl)\n        .then((res) => res.json())\n        .then((res) => {\n          this.setState({\n            initLoading: false,\n            data: res.results,\n            list: res.results,\n          });\n        });\n    },\n    []);\n\n  onLoadMore = () => {\n    this.setState({\n      loading: true,\n      list: this.state.data.concat(\n        [...new Array(count)].map(() => ({\n          loading: true,\n          name: {},\n          picture: {},\n        }))\n      ),\n    });\n    fetch(fakeDataUrl)\n      .then((res) => res.json())\n      .then((res) => {\n        const data = this.state.data.concat(res.results);\n        this.setState(\n          {\n            data,\n            list: data,\n            loading: false,\n          },\n          () => {\n            // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n            // In real scene, you can using public method of react-virtualized:\n            // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n            window.dispatchEvent(new Event(\"resize\"));\n          }\n        );\n      });\n  };\n  const { initLoading, loading, list } = this.state;\n  const loadMore =\n    !initLoading && !loading ? (\n      <div\n        style={{\n          textAlign: \"center\",\n          marginTop: 12,\n          height: 32,\n          lineHeight: \"32px\",\n        }}\n      >\n        <Button onClick={this.onLoadMore}>loading more</Button>\n      </div>\n    ) : null;\n\n  const data = [\n    {\n      title: \"Ant Design Title 1\",\n    },\n    {\n      title: \"Ant Design Title 2\",\n    },\n    {\n      title: \"Ant Design Title 3\",\n    },\n    {\n      title: \"Ant Design Title 4\",\n    },\n  ];\n  return (\n    <div className=\"slide-bar\">\n      <div className=\"slide-bar-category\">\n        <div className=\"slide-bar-category-title\">\n          <UnorderedListOutlined /> All Category\n        </div>\n        <div className=\"slide-bar-category-list\">\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={data}\n            renderItem={(item) => (\n              <List.Item>\n                <List.Item.Meta\n                  title={<a href=\"https://ant.design\">{item.title}</a>}\n                  description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                />\n              </List.Item>\n            )}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Slidebar;\n"]},"metadata":{},"sourceType":"module"}