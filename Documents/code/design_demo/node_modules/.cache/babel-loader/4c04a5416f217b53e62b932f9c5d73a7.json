{"ast":null,"code":"import React from 'react';\nimport classnames from 'classnames';\nimport { Toolbar } from '@antv/x6-react-components';\nimport { useXFlowApp } from '@antv/xflow-core';\nimport { IconStore } from '@antv/xflow-core';\nexport const ToolbarItem = props => {\n  const app = useXFlowApp();\n  const {\n    item,\n    layout\n  } = props;\n  const clz = classnames({\n    ['xflow-toolbar-item']: true\n  });\n  const text = layout === 'vertical' ? '' : item.text;\n  let icon = undefined;\n\n  if (item.icon) {\n    icon = item.icon;\n  } else if (item.iconName) {\n    const Icon = IconStore.get(item.iconName);\n    icon = React.createElement(Icon, null);\n  }\n\n  const ToolbarItemWrap = item.render;\n  const {\n    isEnabled = true\n  } = item;\n  const {\n    commandService,\n    modelService\n  } = app;\n\n  const onItemClick = () => {\n    if (item.onClick) {\n      item.onClick({\n        toolbarItem: item,\n        commandService,\n        modelService\n      });\n    }\n  };\n\n  if (ToolbarItemWrap) {\n    return React.createElement(ToolbarItemWrap, Object.assign({}, item, {\n      onClick: onItemClick\n    }), React.createElement(Toolbar.Item, Object.assign({}, item, {\n      icon: icon,\n      text: text,\n      className: clz,\n      disabled: !isEnabled,\n      tooltip: item.tooltip || item.text,\n      tooltipProps: Object.assign({\n        placement: layout === 'vertical' ? 'left' : 'bottom'\n      }, item.tooltipProps),\n      onClick: () => {}\n    })));\n  }\n\n  return React.createElement(Toolbar.Item, Object.assign({}, item, {\n    icon: icon,\n    text: text,\n    className: clz,\n    hidden: !item,\n    disabled: !isEnabled,\n    tooltip: item.tooltip || item.text,\n    onClick: onItemClick,\n    tooltipProps: Object.assign(Object.assign({}, item.tooltipProps), {\n      placement: layout === 'vertical' ? 'left' : 'bottom'\n    })\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}