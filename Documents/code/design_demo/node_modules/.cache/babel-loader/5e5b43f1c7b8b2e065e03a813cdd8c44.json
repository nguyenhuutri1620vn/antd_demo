{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { bindAll, DOM } from '@antv/l7-utils';\nimport Control, { PositionType } from './BaseControl';\n\nvar Zoom = function (_Control) {\n  _inherits(Zoom, _Control);\n\n  var _super = _createSuper(Zoom);\n\n  function Zoom(cfg) {\n    var _this;\n\n    _classCallCheck(this, Zoom);\n\n    _this = _super.call(this, cfg);\n\n    _defineProperty(_assertThisInitialized(_this), \"disabled\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"zoomInButton\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"zoomOutButton\", void 0);\n\n    bindAll(['updateDisabled', 'zoomIn', 'zoomOut'], _assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Zoom, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        position: PositionType.TOPLEFT,\n        zoomInText: '+',\n        zoomInTitle: 'Zoom in',\n        zoomOutText: '&#x2212;',\n        zoomOutTitle: 'Zoom out',\n        name: 'zoom'\n      };\n    }\n  }, {\n    key: \"onAdd\",\n    value: function onAdd() {\n      var zoomName = 'l7-control-zoom';\n      var container = DOM.create('div', zoomName + ' l7-bar');\n      this.zoomInButton = this.createButton(this.controlOption.zoomInText, this.controlOption.zoomInTitle, zoomName + '-in', container, this.zoomIn);\n      this.zoomOutButton = this.createButton(this.controlOption.zoomOutText, this.controlOption.zoomOutTitle, zoomName + '-out', container, this.zoomOut);\n      this.mapsService.on('zoomend', this.updateDisabled);\n      this.mapsService.on('zoomchange', this.updateDisabled);\n      this.updateDisabled();\n      return container;\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove() {\n      this.mapsService.off('zoomend', this.updateDisabled);\n      this.mapsService.off('zoomchange', this.updateDisabled);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      this.updateDisabled();\n      return this;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      this.updateDisabled();\n      return this;\n    }\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn() {\n      if (!this.disabled && this.mapsService.getZoom() < this.mapsService.getMaxZoom()) {\n        this.mapsService.zoomIn();\n      }\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      if (!this.disabled && this.mapsService.getZoom() > this.mapsService.getMinZoom()) {\n        this.mapsService.zoomOut();\n      }\n    }\n  }, {\n    key: \"createButton\",\n    value: function createButton(html, tile, className, container, fn) {\n      var link = DOM.create('a', className, container);\n      link.innerHTML = html;\n      link.title = tile;\n      link.href = 'javascript:void(0)';\n      link.addEventListener('click', fn);\n      return link;\n    }\n  }, {\n    key: \"updateDisabled\",\n    value: function updateDisabled() {\n      var mapsService = this.mapsService;\n      var className = 'l7-disabled';\n      DOM.removeClass(this.zoomInButton, className);\n      DOM.removeClass(this.zoomOutButton, className);\n\n      if (this.disabled || mapsService.getZoom() <= mapsService.getMinZoom()) {\n        DOM.addClass(this.zoomOutButton, className);\n      }\n\n      if (this.disabled || mapsService.getZoom() >= mapsService.getMaxZoom()) {\n        DOM.addClass(this.zoomInButton, className);\n      }\n    }\n  }]);\n\n  return Zoom;\n}(Control);\n\nexport { Zoom as default };","map":null,"metadata":{},"sourceType":"module"}