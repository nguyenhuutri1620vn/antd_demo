{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { Node } from './Node';\nexport var Element = function (_Node) {\n  _inherits(Element, _Node);\n\n  var _super = _createSuper(Element);\n\n  function Element() {\n    var _this;\n\n    _classCallCheck(this, Element);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"children\", void 0);\n\n    _this.className = '';\n    _this.children = [];\n    return _this;\n  }\n\n  _createClass(Element, [{\n    key: \"setAttribute\",\n    value: function setAttribute(name, value) {\n      this[name] = value;\n    }\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(name) {\n      return this[name];\n    }\n  }, {\n    key: \"setAttributeNS\",\n    value: function setAttributeNS(name, value) {\n      this[name] = value;\n    }\n  }, {\n    key: \"getAttributeNS\",\n    value: function getAttributeNS(name) {\n      return this[name];\n    }\n  }]);\n\n  return Element;\n}(Node);","map":null,"metadata":{},"sourceType":"module"}