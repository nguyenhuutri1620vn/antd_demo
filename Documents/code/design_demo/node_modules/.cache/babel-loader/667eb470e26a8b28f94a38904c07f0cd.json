{"ast":null,"code":"import { __awaiter } from \"tslib\";\n/** existModel的Utils */\n\nexport const isModelExistUtil = token => modelService => {\n  const defer = modelService.findDeferredModel(token);\n  return defer && defer.promise ? true : false;\n};\n/** useModel的Utils */\n\nexport const getModelUtil = token => modelService => __awaiter(void 0, void 0, void 0, function* () {\n  return yield modelService.awaitModel(token);\n});\n/** useModel的Utils */\n\nexport const useModelValueUtil = token => modelService => __awaiter(void 0, void 0, void 0, function* () {\n  const model = yield modelService.awaitModel(token);\n  return model.getValidValue();\n});\n/** 画布是否已开启多选 */\n\nexport var GRAPH_ENABLE_MULTI_SELECT;\n\n(function (GRAPH_ENABLE_MULTI_SELECT) {\n  GRAPH_ENABLE_MULTI_SELECT.id = 'GRAPH_ENABLE_MULTI_SELECT';\n  GRAPH_ENABLE_MULTI_SELECT.getModel = getModelUtil(GRAPH_ENABLE_MULTI_SELECT.id);\n  GRAPH_ENABLE_MULTI_SELECT.useValue = useModelValueUtil(GRAPH_ENABLE_MULTI_SELECT.id);\n})(GRAPH_ENABLE_MULTI_SELECT || (GRAPH_ENABLE_MULTI_SELECT = {}));\n/** 画布已选中节点 */\n\n\nexport var IS_NODE_SELECTED;\n\n(function (IS_NODE_SELECTED) {\n  IS_NODE_SELECTED.id = 'IS_NODE_SELECTED';\n  IS_NODE_SELECTED.getModel = getModelUtil(IS_NODE_SELECTED.id);\n  IS_NODE_SELECTED.useValue = useModelValueUtil(IS_NODE_SELECTED.id);\n})(IS_NODE_SELECTED || (IS_NODE_SELECTED = {}));\n/** 画布选中节点是Group */\n\n\nexport var IS_GROUP_SELECTED;\n\n(function (IS_GROUP_SELECTED) {\n  IS_GROUP_SELECTED.id = 'IS_GROUP_SELECTED';\n  IS_GROUP_SELECTED.getModel = getModelUtil(IS_GROUP_SELECTED.id);\n  IS_GROUP_SELECTED.useValue = useModelValueUtil(IS_GROUP_SELECTED.id);\n})(IS_GROUP_SELECTED || (IS_GROUP_SELECTED = {}));\n/** 画布选中节点是Group */\n\n\nexport var IS_NORMAL_NODES_SELECTED;\n\n(function (IS_NORMAL_NODES_SELECTED) {\n  IS_NORMAL_NODES_SELECTED.id = 'IS_NORMAL_NODES_SELECTED';\n  IS_NORMAL_NODES_SELECTED.getModel = getModelUtil(IS_NORMAL_NODES_SELECTED.id);\n  IS_NORMAL_NODES_SELECTED.useValue = useModelValueUtil(IS_NORMAL_NODES_SELECTED.id);\n})(IS_NORMAL_NODES_SELECTED || (IS_NORMAL_NODES_SELECTED = {}));\n/** 画布选中Cell状态，保存最后一个选中的节点 */\n\n\nexport var SELECTED_CELL;\n\n(function (SELECTED_CELL) {\n  SELECTED_CELL.id = 'LAST_SELECTED_CELL';\n  SELECTED_CELL.getModel = getModelUtil(SELECTED_CELL.id);\n  SELECTED_CELL.useValue = useModelValueUtil(SELECTED_CELL.id);\n})(SELECTED_CELL || (SELECTED_CELL = {}));\n/** 画布选中CellS状态 */\n\n\nexport var SELECTED_CELLS;\n\n(function (SELECTED_CELLS) {\n  SELECTED_CELLS.id = 'SELECTED_CELLS';\n  SELECTED_CELLS.getModel = getModelUtil(SELECTED_CELLS.id);\n  SELECTED_CELLS.useValue = useModelValueUtil(SELECTED_CELLS.id);\n})(SELECTED_CELLS || (SELECTED_CELLS = {}));\n/** 画布选中节点状态， 如有多个节点则保存最后一个选中的节点 */\n\n\nexport var SELECTED_NODE;\n\n(function (SELECTED_NODE) {\n  SELECTED_NODE.id = 'LAST_SELECTED_NODE';\n  SELECTED_NODE.getModel = getModelUtil(SELECTED_NODE.id);\n  SELECTED_NODE.useValue = useModelValueUtil(SELECTED_NODE.id);\n})(SELECTED_NODE || (SELECTED_NODE = {}));\n/** 画布选中节点状态 */\n\n\nexport var SELECTED_NODES;\n\n(function (SELECTED_NODES) {\n  SELECTED_NODES.id = 'SELECTED_NODES';\n  SELECTED_NODES.getModel = getModelUtil(SELECTED_NODES.id);\n  SELECTED_NODES.useValue = useModelValueUtil(SELECTED_NODES.id);\n})(SELECTED_NODES || (SELECTED_NODES = {}));\n/** 画布选中边状态 */\n\n\nexport var SELECTED_EDGES;\n\n(function (SELECTED_EDGES) {\n  SELECTED_EDGES.id = 'SELECTED_EDGES';\n  SELECTED_EDGES.getModel = getModelUtil(SELECTED_EDGES.id);\n  SELECTED_EDGES.useValue = useModelValueUtil(SELECTED_EDGES.id);\n})(SELECTED_EDGES || (SELECTED_EDGES = {}));\n/** 画布选中GROUP List */\n\n\nexport var SELECTED_GROUPS;\n\n(function (SELECTED_GROUPS) {\n  SELECTED_GROUPS.id = 'SELECTED_GROUPS';\n  SELECTED_GROUPS.getModel = getModelUtil(SELECTED_GROUPS.id);\n  SELECTED_GROUPS.useValue = useModelValueUtil(SELECTED_GROUPS.id);\n})(SELECTED_GROUPS || (SELECTED_GROUPS = {}));\n/** 画布节点右键菜单状态 */\n\n\nexport var CONTEXTMENU_NODE;\n\n(function (CONTEXTMENU_NODE) {\n  CONTEXTMENU_NODE.id = 'CONTEXTMENU_NODE';\n  CONTEXTMENU_NODE.getModel = getModelUtil(CONTEXTMENU_NODE.id);\n  CONTEXTMENU_NODE.useValue = useModelValueUtil(CONTEXTMENU_NODE.id);\n})(CONTEXTMENU_NODE || (CONTEXTMENU_NODE = {}));\n/** 画布边右键菜单状态 */\n\n\nexport var CONTEXTMENU_EDGE;\n\n(function (CONTEXTMENU_EDGE) {\n  CONTEXTMENU_EDGE.id = 'CONTEXTMENU_EDGE';\n  CONTEXTMENU_EDGE.getModel = getModelUtil(CONTEXTMENU_EDGE.id);\n  CONTEXTMENU_EDGE.useValue = useModelValueUtil(CONTEXTMENU_EDGE.id);\n})(CONTEXTMENU_EDGE || (CONTEXTMENU_EDGE = {}));\n/** 画布右键菜单状态 */\n\n\nexport var CONTEXTMENU_TARGET;\n\n(function (CONTEXTMENU_TARGET) {\n  CONTEXTMENU_TARGET.id = 'CONTEXTMENU_TARGET';\n  CONTEXTMENU_TARGET.getModel = getModelUtil(CONTEXTMENU_TARGET.id);\n  CONTEXTMENU_TARGET.useValue = useModelValueUtil(CONTEXTMENU_TARGET.id);\n})(CONTEXTMENU_TARGET || (CONTEXTMENU_TARGET = {}));\n/** 画布元数据状态 */\n\n\nexport var GRAPH_META;\n\n(function (GRAPH_META) {\n  GRAPH_META.id = 'GRAPH_META';\n  GRAPH_META.getModel = getModelUtil(GRAPH_META.id);\n  GRAPH_META.useValue = useModelValueUtil(GRAPH_META.id);\n})(GRAPH_META || (GRAPH_META = {}));\n/** 画布缩放状态 */\n\n\nexport var GRAPH_SCALE;\n\n(function (GRAPH_SCALE) {\n  GRAPH_SCALE.id = 'GRAPH_SCALE';\n  GRAPH_SCALE.getModel = getModelUtil(GRAPH_SCALE.id);\n  GRAPH_SCALE.useValue = useModelValueUtil(GRAPH_SCALE.id);\n})(GRAPH_SCALE || (GRAPH_SCALE = {}));\n/** COMMAND REDO STACK的状态*/\n\n\nexport var COMMAND_REDOABLE;\n\n(function (COMMAND_REDOABLE) {\n  COMMAND_REDOABLE.id = 'COMMAND_REDOABLE';\n  COMMAND_REDOABLE.getModel = getModelUtil(COMMAND_REDOABLE.id);\n  COMMAND_REDOABLE.useValue = useModelValueUtil(COMMAND_REDOABLE.id);\n})(COMMAND_REDOABLE || (COMMAND_REDOABLE = {}));\n/** COMMAND UNDO STACK的状态*/\n\n\nexport var COMMAND_UNDOABLE;\n\n(function (COMMAND_UNDOABLE) {\n  COMMAND_UNDOABLE.id = 'COMMAND_UNDOABLE';\n  COMMAND_UNDOABLE.getModel = getModelUtil(COMMAND_UNDOABLE.id);\n  COMMAND_UNDOABLE.useValue = useModelValueUtil(COMMAND_UNDOABLE.id);\n})(COMMAND_UNDOABLE || (COMMAND_UNDOABLE = {}));\n/** COMMAND 执行结果的状态*/\n\n\nexport var COMMAND_GLOBALS;\n\n(function (COMMAND_GLOBALS) {\n  COMMAND_GLOBALS.id = 'COMMAND_GLOBALS';\n  COMMAND_GLOBALS.getModel = getModelUtil(COMMAND_GLOBALS.id);\n  COMMAND_GLOBALS.useValue = useModelValueUtil(COMMAND_GLOBALS.id);\n})(COMMAND_GLOBALS || (COMMAND_GLOBALS = {}));\n/** History Undo Redo */\n\n\nexport var HISTORY_UNDOABLE;\n\n(function (HISTORY_UNDOABLE) {\n  HISTORY_UNDOABLE.id = 'HISTORY_UNDOABLE';\n  HISTORY_UNDOABLE.getModel = getModelUtil(HISTORY_UNDOABLE.id);\n  HISTORY_UNDOABLE.useValue = useModelValueUtil(HISTORY_UNDOABLE.id);\n})(HISTORY_UNDOABLE || (HISTORY_UNDOABLE = {}));\n\nexport var HISTORY_REDOABLE;\n\n(function (HISTORY_REDOABLE) {\n  HISTORY_REDOABLE.id = 'HISTORY_REDOABLE';\n  HISTORY_REDOABLE.getModel = getModelUtil(HISTORY_REDOABLE.id);\n  HISTORY_REDOABLE.useValue = useModelValueUtil(HISTORY_REDOABLE.id);\n})(HISTORY_REDOABLE || (HISTORY_REDOABLE = {}));","map":null,"metadata":{},"sourceType":"module"}