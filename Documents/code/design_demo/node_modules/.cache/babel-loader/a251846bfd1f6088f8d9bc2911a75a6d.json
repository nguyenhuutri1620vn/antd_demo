{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nexport var NsGraphDelTool;\n\n(function (NsGraphDelTool) {\n  /** Command: 用于注册named factory */\n  NsGraphDelTool.command = XFlowGraphCommands.GRAPH_DEL_TOOL;\n  /** hookName */\n\n  NsGraphDelTool.hookKey = 'delTool';\n})(NsGraphDelTool || (NsGraphDelTool = {}));\n\nlet GraphDelToolCommand =\n/** 创建节点命令 */\nclass GraphDelToolCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n      const {\n        args,\n        hooks: runtimeHook\n      } = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      const result = yield hooks.delTool.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const {\n          cellId,\n          toolName,\n          toolConfig\n        } = handlerArgs;\n        const graph = yield ctx.getX6Graph();\n        const cell = graph.getCellById(cellId);\n\n        if (cell) {\n          if (toolName === '*') {\n            cell.removeTools(toolConfig);\n          } else {\n            cell.removeTool(toolName, toolConfig);\n          }\n        }\n\n        return {\n          err: null\n        };\n      }), runtimeHook);\n      ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n\n      if (this.isUndoable()) {\n        ctx.undo();\n      }\n\n      return this;\n    });\n    /** redo cmd */\n\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.isUndoable()) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  isUndoable() {\n    const ctx = this.contextProvider();\n    return ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphDelToolCommand.prototype, \"contextProvider\", void 0);\n\nGraphDelToolCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphDelTool.command.id\n  }\n})\n/** 创建节点命令 */\n], GraphDelToolCommand);\nexport { GraphDelToolCommand };","map":null,"metadata":{},"sourceType":"module"}