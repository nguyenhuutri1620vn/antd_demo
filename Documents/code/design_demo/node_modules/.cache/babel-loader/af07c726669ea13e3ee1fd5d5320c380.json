{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _class3, _temp;\n\nimport { IDENTIFIER } from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\nexport var Renderable = (_dec = injectable(), _dec2 = inject(IDENTIFIER.MeshComponentManager), _dec3 = inject(IDENTIFIER.CullableComponentManager), _dec4 = inject(IDENTIFIER.TransformComponentManager), _dec5 = inject(IDENTIFIER.Systems), _dec6 = named(IDENTIFIER.SceneGraphSystem), _dec(_class = (_class2 = (_temp = _class3 = /*#__PURE__*/function () {\n  function Renderable() {\n    _classCallCheck(this, Renderable);\n\n    this.attributes = {};\n    this.config = void 0;\n\n    _initializerDefineProperty(this, \"mesh\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"cullable\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"transform\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"sceneGraphSystem\", _descriptor4, this);\n\n    this.meshComponent = void 0;\n    this.transformComponent = void 0;\n    this.entity = void 0;\n  }\n\n  _createClass(Renderable, [{\n    key: \"getEntity\",\n    value: function getEntity() {\n      return this.entity;\n    }\n  }, {\n    key: \"getTransformComponent\",\n    value: function getTransformComponent() {\n      return this.transformComponent;\n    }\n  }, {\n    key: \"getMeshComponent\",\n    value: function getMeshComponent() {\n      return this.meshComponent;\n    }\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(config) {\n      this.config = config;\n    }\n  }, {\n    key: \"setEntity\",\n    value: function setEntity(entity) {\n      this.entity = entity;\n      this.cullable.create(entity);\n      this.meshComponent = this.mesh.create(entity);\n      this.transformComponent = this.transform.create(entity);\n      this.onEntityCreated();\n    }\n  }, {\n    key: \"setMaterial\",\n    value: function setMaterial(material) {\n      this.meshComponent.material = material;\n      return this;\n    }\n  }, {\n    key: \"setGeometry\",\n    value: function setGeometry(geometry) {\n      this.meshComponent.geometry = geometry;\n      return this;\n    }\n  }, {\n    key: \"setAttributes\",\n    value: function setAttributes(attributes) {\n      var _this = this;\n\n      Object.keys(attributes).forEach(function (name) {\n        if (attributes[name] !== undefined && attributes[name] !== _this.attributes[name]) {\n          _this.onAttributeChanged({\n            name: name,\n            data: attributes[name]\n          });\n\n          _this.attributes[name] = attributes[name];\n        }\n      });\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(visible) {\n      var _this2 = this;\n\n      this.meshComponent.visible = visible;\n      this.meshComponent.children.forEach(function (childEntity) {\n        var child = _this2.mesh.getComponentByEntity(childEntity);\n\n        if (child) {\n          child.visible = visible;\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      return this.meshComponent.visible;\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(parentRenderable) {\n      this.sceneGraphSystem.attach(this.entity, parentRenderable.entity);\n      return this;\n    }\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      this.sceneGraphSystem.detach(this.entity);\n      return this;\n    }\n  }, {\n    key: \"detachChildren\",\n    value: function detachChildren() {\n      this.sceneGraphSystem.detachChildren(this.entity);\n      return this;\n    }\n  }, {\n    key: \"onEntityCreated\",\n    value: function onEntityCreated() {//\n    }\n  }, {\n    key: \"onAttributeChanged\",\n    value: function onAttributeChanged(_ref) {\n      var name = _ref.name,\n          data = _ref.data;\n\n      if (this.meshComponent && this.meshComponent.material) {\n        this.meshComponent.material.setUniform(this.convertAttributeName2UniformName(name), data);\n      }\n    }\n  }, {\n    key: \"convertAttributeName2UniformName\",\n    value: function convertAttributeName2UniformName(attributeName) {\n      return attributeName;\n    }\n  }]);\n\n  return Renderable;\n}(), _class3.POINT = 'point', _class3.LINE = 'line', _class3.GRID = 'grid', _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"mesh\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"cullable\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"transform\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"sceneGraphSystem\", [_dec5, _dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);","map":null,"metadata":{},"sourceType":"module"}