{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport AppContext from '../../../../context';\nimport { FormWrapper } from '../../form-wrapper';\nimport { ColorPicker, InputNumberFiled, InputFiled, SelectField } from './fields';\nimport { prefix } from './constants';\nexport var ArrowConfig = {\n  width: 12,\n  height: 8,\n  name: 'block'\n};\nexport var DisableArrowConfig = {\n  width: 0,\n  height: 0,\n  name: ''\n};\nexport var ArrowMaps = {\n  target: {\n    sourceMarker: DisableArrowConfig,\n    targetMarker: ArrowConfig\n  },\n  source: {\n    sourceMarker: ArrowConfig,\n    targetMarker: DisableArrowConfig\n  },\n  all: {\n    sourceMarker: ArrowConfig,\n    targetMarker: ArrowConfig\n  },\n  none: {\n    sourceMarker: DisableArrowConfig,\n    targetMarker: DisableArrowConfig\n  }\n};\nexport var ArrowStrokeMaps = {\n  solid: [0, 0],\n  dash: [5, 5]\n};\n\nvar EdgeComponent = function (props) {\n  var config = props.config,\n      _a = props.plugin,\n      plugin = _a === void 0 ? {} : _a;\n  var updateEdge = plugin.updateEdge;\n  var EdgeConfig = useContext(AppContext).theme.EdgeConfig;\n\n  var _b = useState(__assign(__assign({}, EdgeConfig.normal), config)),\n      edgeConfig = _b[0],\n      setEdgeConfig = _b[1];\n\n  useEffect(function () {\n    setEdgeConfig(__assign(__assign({}, EdgeConfig.normal), config));\n  }, [config]);\n\n  var getAttrs = function (key, type) {\n    var _a;\n\n    if (type === void 0) {\n      type = 'line';\n    }\n\n    var _b = edgeConfig.attrs,\n        attrs = _b === void 0 ? {} : _b;\n    return (_a = attrs[type]) === null || _a === void 0 ? void 0 : _a[key];\n  };\n\n  var getArrowValue = function () {\n    var _a, _b, _c, _d, _e;\n\n    var _f = edgeConfig.attrs,\n        attrs = _f === void 0 ? {} : _f;\n    var _g = attrs.line,\n        line = _g === void 0 ? {} : _g;\n\n    if (((_a = line.sourceMarker) === null || _a === void 0 ? void 0 : _a.name) && ((_b = line.targetMarker) === null || _b === void 0 ? void 0 : _b.name)) {\n      return 'all';\n    }\n\n    if (!((_c = line.sourceMarker) === null || _c === void 0 ? void 0 : _c.name) && !((_d = line.targetMarker) === null || _d === void 0 ? void 0 : _d.name)) {\n      return 'none';\n    }\n\n    if ((_e = line.sourceMarker) === null || _e === void 0 ? void 0 : _e.name) {\n      return 'source';\n    }\n\n    return 'target';\n  };\n\n  var getSrokeDashValue = function () {\n    var _a = edgeConfig.attrs,\n        attrs = _a === void 0 ? {} : _a;\n    var _b = attrs.line,\n        line = _b === void 0 ? {} : _b;\n    return line.strokeDasharray ? 'dash' : 'solid';\n  };\n\n  var onEdgeConfigChange = function (key, value, type) {\n    var _a, _b, _c, _d, _e;\n\n    var _f, _g;\n\n    if (type === void 0) {\n      type = 'line';\n    }\n    /** 全量更新，简化逻辑 */\n\n\n    if (key === 'arrow') {\n      setEdgeConfig(__assign(__assign({}, edgeConfig), {\n        attrs: __assign(__assign({}, edgeConfig.attrs), (_a = {}, _a[type] = __assign(__assign({}, (_f = edgeConfig.attrs) === null || _f === void 0 ? void 0 : _f[type]), value), _a))\n      }));\n    } else {\n      setEdgeConfig(__assign(__assign({}, edgeConfig), (_b = {}, _b[key] = value, _b.attrs = __assign(__assign({}, edgeConfig.attrs), (_c = {}, _c[type] = __assign(__assign({}, (_g = edgeConfig.attrs) === null || _g === void 0 ? void 0 : _g[type]), (_d = {}, _d[key] = value, _d)), _c)), _b)));\n    }\n\n    updateEdge((_e = {}, _e[key] = value, _e), type, key === 'arrow' ? 'arrow' : '');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"-panel-body\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"-panel-group\")\n  }, React.createElement(\"h5\", null, \"\\u5185\\u5BB9\"), React.createElement(InputFiled, {\n    label: \"\\u6807\\u7B7E\",\n    value: edgeConfig.label,\n    onChange: function (value) {\n      onEdgeConfigChange('label', value);\n    }\n  })), React.createElement(\"h5\", {\n    style: {\n      marginBottom: 12\n    }\n  }, \"\\u6837\\u5F0F\"), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"-panel-group\"),\n    style: {\n      marginBottom: 0\n    }\n  }, React.createElement(\"h5\", null, \"\\u7EBF\"), React.createElement(SelectField, {\n    label: \"\\u7BAD\\u5934\",\n    value: getArrowValue(),\n    options: [{\n      label: '正向',\n      value: 'target'\n    }, {\n      label: '逆向',\n      value: 'source'\n    }, {\n      label: '双向',\n      value: 'all'\n    }, {\n      label: '无',\n      value: 'none'\n    }],\n    onChange: function (value) {\n      onEdgeConfigChange('arrow', ArrowMaps[value], 'line');\n    }\n  }), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"-edge-stroke-style\")\n  }, React.createElement(SelectField, {\n    label: \"\\u7EBF\\u5F62\",\n    width: 68,\n    value: getSrokeDashValue(),\n    options: [{\n      label: '实线',\n      value: 'solid'\n    }, {\n      label: '虚线',\n      value: 'dash'\n    }],\n    onChange: function (value) {\n      onEdgeConfigChange('strokeDasharray', ArrowStrokeMaps[value], 'line');\n    }\n  }), React.createElement(InputNumberFiled, {\n    value: getAttrs('strokeWidth'),\n    min: 1,\n    onChange: function (value) {\n      onEdgeConfigChange('strokeWidth', value, 'line');\n    }\n  })), React.createElement(ColorPicker, {\n    label: \"\\u8FB9\\u6846\",\n    value: getAttrs('stroke'),\n    onChange: function (value) {\n      onEdgeConfigChange('stroke', value, 'line');\n    }\n  })), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"-panel-group\")\n  }, React.createElement(\"h5\", null, \"\\u6807\\u7B7E\"), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"-edge-text-style\")\n  }, React.createElement(InputNumberFiled, {\n    label: \"\\u5B57\\u53F7\",\n    min: 10,\n    width: 68,\n    value: getAttrs('fontSize', 'text') || 12,\n    onChange: function (value) {\n      onEdgeConfigChange('fontSize', value, 'text');\n    }\n  }), React.createElement(ColorPicker, {\n    value: getAttrs('fill', 'text') || '#000',\n    onChange: function (value) {\n      onEdgeConfigChange('fill', value, 'text');\n    }\n  }))));\n};\n\nexport var EdgeService = function (props) {\n  return React.createElement(FormWrapper, __assign({}, props, {\n    type: \"edge\"\n  }), function (config, plugin) {\n    return React.createElement(EdgeComponent, __assign({}, props, {\n      plugin: plugin,\n      config: config\n    }));\n  });\n};","map":null,"metadata":{},"sourceType":"module"}