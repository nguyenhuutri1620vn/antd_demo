{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport G6 from '@antv/g6';\nimport { isNumber, isObject, isString, clone } from '@antv/util';\nimport { defaultMinimapCfg, defaultNodeSize, defaultCardStyle, prefix } from '../constants'; // 类型检测\n\nexport var isType = function (value, type) {\n  var toString = {}.toString;\n  return toString.call(value) === \"[object \".concat(type, \"]\");\n};\nexport var Log = window.console;\nexport var getType = function (n) {\n  return Object.prototype.toString.call(n).slice(8, -1);\n};\n/**\n * 深克隆\n * @param source 要深克隆的目标对象\n */\n\nexport var deepClone = function (source) {\n  if (!source || typeof source !== 'object') {\n    return source;\n  }\n\n  var target;\n\n  if (Array.isArray(source)) {\n    target = source.map(function (item) {\n      return deepClone(item);\n    });\n  } else if (source instanceof HTMLElement) {\n    target = source;\n  } else {\n    target = {};\n    Object.keys(source).forEach(function (key) {\n      return target[key] = deepClone(source[key]);\n    });\n  }\n\n  return target;\n};\nexport var getGraphSize = function (width, height, container) {\n  var CANVAS_WIDTH;\n  var CANVAS_HEIGHT;\n\n  if (container && container.current) {\n    CANVAS_WIDTH = container.current.offsetWidth;\n    CANVAS_HEIGHT = container.current.offsetHeight || 500;\n  }\n\n  if (!width && !CANVAS_WIDTH || !height && !CANVAS_HEIGHT) {\n    Log.warn('请为 Graph 指定 width 与 height！否则将使用默认值 500 * 500');\n    return [500, 500];\n  }\n\n  return [width || CANVAS_WIDTH || 500, height || CANVAS_HEIGHT || 500];\n};\n\nvar EventData =\n/** @class */\nfunction () {\n  function EventData(data) {\n    data && this.setData(data);\n  }\n\n  EventData.prototype.getData = function () {\n    return this.data;\n  };\n\n  EventData.prototype.setData = function (data) {\n    this.data = data;\n  };\n\n  return EventData;\n}(); // 展开&折叠事件\n\n\nexport var bindDefaultEvents = function (graph, level, getChildren) {\n  var onClick = function (e) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var item, _a, collapsed, g_currentPath_1, _b, children, g_parentId_1, g_level_1, id_1, appendChildren, appendChildrenData, currentData;\n\n      var _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            item = e.item;\n            if (!(e.target.get('name') === 'collapse-icon')) return [3\n            /*break*/\n            , 3];\n            _a = item.getModel(), collapsed = _a.collapsed, g_currentPath_1 = _a.g_currentPath, _b = _a.children, children = _b === void 0 ? [] : _b, g_parentId_1 = _a.g_parentId, g_level_1 = _a.g_level, id_1 = _a.id;\n            appendChildren = level && !children.length && getChildrenData(graph.get('eventData').getData(), g_currentPath_1);\n            if (!(getChildren && !((_c = children) === null || _c === void 0 ? void 0 : _c.length) && !(appendChildren === null || appendChildren === void 0 ? void 0 : appendChildren.length))) return [3\n            /*break*/\n            , 2];\n            createLoading();\n            return [4\n            /*yield*/\n            , getChildren(item.getModel())];\n\n          case 1:\n            appendChildrenData = _d.sent();\n\n            if (appendChildrenData) {\n              appendChildrenData = appendChildrenData.map(function (t, index) {\n                var _a;\n\n                return __assign((_a = {}, _a[\"\".concat(prefix, \"_level\")] = g_level_1 + 1, _a[\"\".concat(prefix, \"_parentId\")] = \"\".concat(g_parentId_1, \"-\").concat(id_1), _a[\"\".concat(prefix, \"_currentPath\")] = \"\".concat(g_currentPath_1, \"-\").concat(index), _a), t);\n              });\n              setLevelData(graph, appendChildrenData, g_currentPath_1);\n            }\n\n            appendChildren = appendChildrenData;\n            closeLoading();\n            _d.label = 2;\n\n          case 2:\n            if ((appendChildren === null || appendChildren === void 0 ? void 0 : appendChildren.length) > 0) {\n              currentData = setParentChildren(graph.get('data'), g_currentPath_1, appendChildren);\n              graph.changeData(currentData);\n\n              if (graph.get('fitCenter')) {\n                graph.fitCenter();\n                graph.stopAnimate(); // 二次布局使用动画效果较差\n              }\n            } else {\n              graph.updateItem(item, {\n                collapsed: !collapsed\n              });\n              graph.layout();\n            }\n\n            _d.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  graph.on('node:click', function (e) {\n    onClick(e);\n  });\n  graph.on('node:touchstart', function (e) {\n    onClick(e);\n  });\n};\nexport var renderGraph = function (graph, data, level) {\n  var originData = deepClone(data);\n  var tagData = originData;\n\n  if (level) {\n    tagData = setTag(data);\n    originData = getLevelData(tagData, level);\n  }\n\n  graph.data(originData);\n  graph.set('eventData', new EventData(tagData));\n  graph.render(); // 关闭局部刷新，各种 bug\n\n  graph.get('canvas').set('localRefresh', false);\n};\nvar grapgMinmapMaps = {};\nexport var processMinimap = function (cfg, graph) {\n  if (cfg === void 0) {\n    cfg = {};\n  }\n\n  var graphId = graph === null || graph === void 0 ? void 0 : graph.get('id');\n\n  if (!graph || graph.destroyed) {\n    grapgMinmapMaps[graphId] = null;\n    return;\n  }\n\n  if ((!cfg || !cfg.show) && grapgMinmapMaps[graphId]) {\n    var pluginMinimap = graph.get('plugins')[0];\n\n    if (pluginMinimap) {\n      graph.removePlugin(pluginMinimap);\n    }\n\n    grapgMinmapMaps[graphId] = null;\n  }\n\n  if (cfg.show && !grapgMinmapMaps[graphId]) {\n    var curMminimapCfg = Object.assign(defaultMinimapCfg, cfg);\n    var minimap = new G6.Minimap(__assign(__assign({}, curMminimapCfg), {\n      id: graphId\n    }));\n    graph.addPlugin(minimap);\n    grapgMinmapMaps[graphId] = minimap;\n    return minimap;\n  }\n\n  return null;\n};\n\nvar getUuid = function () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}; // 同一页面存在多 graph 时需要指定 graphId\n\n\nexport var getGraphId = function (graph) {\n  if (graph.current) {\n    return graph.current;\n  }\n\n  graph.current = \"graph-\".concat(getUuid());\n  return graph.current;\n};\nexport var getMarkerPosition = function (direction, size) {\n  if (direction === void 0) {\n    direction = 'right';\n  }\n\n  var width = size[0],\n      height = size[1];\n  var x = 0;\n  var y = 0;\n\n  switch (direction) {\n    case 'top':\n      x = width / 2;\n      y = 0;\n      break;\n\n    case 'right':\n      x = width;\n      y = height / 2;\n      break;\n\n    case 'bottom':\n      x = width / 2;\n      y = height;\n      break;\n\n    case 'left':\n      x = 0;\n      y = height / 2;\n      break;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n};\nexport var bindSourceMapCollapseEvents = function (graph) {\n  var onClick = function (e) {\n    var _a;\n\n    var controlData = graph.get('eventData').getData();\n\n    if (e.target.get('name') === 'collapse-icon') {\n      var item = e.item;\n      var collapsed = item.getModel().collapsed;\n\n      if (!isType(collapsed, 'Boolean')) {\n        // @ts-ignore\n        collapsed = (_a = item._cfg.group.getChildren().find(function (item) {\n          return item.get('name') === 'main-box';\n        })) === null || _a === void 0 ? void 0 : _a.attr('defaultCollapsed');\n      } // @ts-ignore\n\n\n      var marker = e.item._cfg.group.getChildren().find(function (item) {\n        return item.cfg.type === 'marker';\n      });\n\n      var _b = (controlData !== null && controlData !== void 0 ? controlData : {}).edges,\n          fullEdges_1 = _b === void 0 ? [] : _b;\n      var nodeId = item.getModel().id;\n      var targetNodeIds_1 = [];\n      var updateItems_1 = [];\n      var updateIds_1 = [];\n\n      var getLinkedId_1 = function (currentId) {\n        fullEdges_1.forEach(function (edge) {\n          var source = edge.source,\n              target = edge.target;\n\n          if (source === currentId) {\n            targetNodeIds_1.push(target);\n            getLinkedId_1(target);\n          }\n        });\n      };\n\n      getLinkedId_1(nodeId);\n\n      if (!collapsed) {\n        // collapse\n        graph.findAll('node', function (node) {\n          return targetNodeIds_1.includes(node.get('id'));\n        }).forEach(function (node) {\n          return graph.hideItem(node);\n        });\n        controlData.nodes.forEach(function (node) {\n          var _a = node.collapsedLevel,\n              collapsedLevel = _a === void 0 ? 0 : _a,\n              id = node.id;\n\n          if (targetNodeIds_1.includes(id)) {\n            node.collapsedLevel = collapsedLevel + 1;\n          }\n        });\n      } else {\n        // expand\n        graph.findAll('node', function (node) {\n          var collapsedLevel = controlData.nodes.find(function (item) {\n            return item.id === node.get('id');\n          }).collapsedLevel;\n          return targetNodeIds_1.includes(node.get('id')) && (!collapsedLevel || collapsedLevel < 2);\n        }).forEach(function (node) {\n          return graph.showItem(node);\n        });\n        controlData.nodes.forEach(function (node) {\n          var _a = node.collapsedLevel,\n              collapsedLevel = _a === void 0 ? 0 : _a,\n              id = node.id;\n\n          if (targetNodeIds_1.includes(id)) {\n            node.collapsedLevel = collapsedLevel - 1;\n          }\n        });\n      }\n\n      fullEdges_1.forEach(function (edge) {\n        var source = edge.source,\n            target = edge.target;\n\n        if (targetNodeIds_1.includes(target)) {\n          updateIds_1.push(source);\n        }\n      });\n      updateIds_1 = Array.from(new Set(updateIds_1));\n      updateIds_1.forEach(function (id) {\n        updateItems_1.push(graph.find('node', function (node) {\n          return node.get('id') === id;\n        }));\n      });\n      updateItems_1.forEach(function (nodeItem) {\n        graph.updateItem(nodeItem, {\n          collapsed: !nodeItem.getModel().collapsed\n        });\n        graph.refreshItem(nodeItem);\n      });\n    }\n  };\n\n  graph.on('node:click', function (e) {\n    onClick(e);\n  });\n  graph.on('node:touchstart', function (e) {\n    onClick(e);\n  });\n};\n/**\n * padding | margin 按 CSS 规则转换\n */\n\nexport var getCssPadding = function (padding) {\n  if (typeof padding === 'number') {\n    return [padding, padding, padding, padding];\n  }\n\n  var result = [];\n\n  switch (padding.length) {\n    case 1:\n      result = [padding[0], padding[0], padding[0], padding[0]];\n      break;\n\n    case 2:\n      result = [padding[0], padding[1], padding[0], padding[1]];\n      break;\n\n    case 3:\n      result = [padding[0], padding[1], padding[2], padding[1]];\n      break;\n\n    case 4:\n      result = padding;\n      break;\n\n    default:\n      break;\n  }\n\n  return result;\n}; // 默认箭头样式\n\nexport var getArrowCfg = function (arrowCfg, edge) {\n  if (!arrowCfg) {\n    return;\n  }\n\n  if (typeof arrowCfg === 'object' && (arrowCfg === null || arrowCfg === void 0 ? void 0 : arrowCfg.show) === false) {\n    return;\n  }\n\n  var cfg = typeof arrowCfg === 'function' ? arrowCfg(edge) : arrowCfg;\n  var _a = cfg.type,\n      type = _a === void 0 ? 'vee' : _a,\n      _b = cfg.d,\n      d = _b === void 0 ? 0 : _b,\n      _c = cfg.size,\n      size = _c === void 0 ? 10 : _c;\n  return __assign({\n    path: G6.Arrow[type](size, size, d),\n    fill: '#ccc',\n    d: d\n  }, cfg);\n}; // 交互\n\nexport var bindStateEvents = function (graph, cfg) {\n  var _a = cfg !== null && cfg !== void 0 ? cfg : {},\n      _b = _a.nodeCfg,\n      nodeCfg = _b === void 0 ? {} : _b,\n      _c = _a.edgeCfg,\n      edgeCfg = _c === void 0 ? {} : _c;\n\n  var nodeStateStyles = nodeCfg.nodeStateStyles;\n  var edgeStateStyles = edgeCfg.edgeStateStyles;\n  /**\n   * 存储交互状态\n   * id: [[endActive, endDefalut], [startActive, startDefalut]]\n   */\n\n  var statusCache = {};\n\n  var updateArrowFill = function (item, endArrowFill, stratArrowFill) {\n    graph.updateItem(item, {\n      style: {\n        endArrow: !!endArrowFill && {\n          fill: endArrowFill\n        },\n        startArrow: !!stratArrowFill && {\n          fill: stratArrowFill\n        }\n      }\n    });\n  };\n\n  var setState = function (item, name, status) {\n    var _a, _b, _c;\n\n    status ? item.toFront() : item.toBack();\n\n    var _d = (_a = item.getModel().style) !== null && _a !== void 0 ? _a : {},\n        endArrow = _d.endArrow,\n        startArrow = _d.startArrow;\n\n    if (endArrow || startArrow) {\n      if (!statusCache[item.getID()]) {\n        // @ts-ignore\n        var endArrowFill = (endArrow !== null && endArrow !== void 0 ? endArrow : {}).fill; // @ts-ignore\n\n        var startArrowFill = (startArrow !== null && startArrow !== void 0 ? startArrow : {}).fill;\n        var hoverStatus = (_c = (_b = item.getModel().style) === null || _b === void 0 ? void 0 : _b[name]) === null || _c === void 0 ? void 0 : _c.stroke;\n        statusCache[item.getID()] = [[hoverStatus !== null && hoverStatus !== void 0 ? hoverStatus : endArrowFill, endArrowFill], [hoverStatus !== null && hoverStatus !== void 0 ? hoverStatus : startArrowFill, startArrowFill]];\n      }\n\n      var fill = statusCache[item.getID()];\n      updateArrowFill(item, endArrow && fill[0][status ? 0 : 1], startArrow && fill[1][status ? 0 : 1]);\n    }\n\n    graph.setItemState(item, name, status);\n  };\n\n  var getRelationItems = function (currentItem, name, status, type) {\n    var relationItems = type === 'node' ? graph.findAll('edge', function (edge) {\n      return edge.getSource() === currentItem || edge.getTarget() === currentItem;\n    }) : graph.findAll('node', function (node) {\n      return currentItem.getSource().get('id') === node.get('id') || currentItem.getTarget().get('id') === node.get('id');\n    });\n    var highlightItems = [currentItem].concat(relationItems);\n    highlightItems.forEach(function (item) {\n      setState(item, name, status);\n    });\n  };\n\n  if (nodeStateStyles) {\n    graph.on('node:mouseenter', function (evt) {\n      var item = evt.item;\n      getRelationItems(item, 'hover', true, 'node');\n    });\n    graph.on('node:mouseleave', function (evt) {\n      var item = evt.item;\n      getRelationItems(item, 'hover', false, 'node');\n    });\n  }\n\n  if (edgeStateStyles) {\n    graph.on('edge:mouseenter', function (evt) {\n      var item = evt.item;\n      getRelationItems(item, 'hover', true, 'edge');\n    });\n    graph.on('edge:mouseleave', function (evt) {\n      var item = evt.item;\n      getRelationItems(item, 'hover', false, 'edge');\n    });\n  }\n}; // 统一处理 config，支持回调\n\nexport var getStyle = function (source, cfg, item, current) {\n  if (typeof source === 'function') {\n    return source(cfg, item, current) || {};\n  }\n\n  return source || {};\n}; // 统一处理 config，支持回调\n\nexport var getCommonConfig = function (cfg, item, graph) {\n  if (typeof cfg === 'function') {\n    return cfg(item, graph);\n  }\n\n  return cfg;\n};\nexport var getSize = function (size) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n\n  return size ? [size, size] : defaultNodeSize;\n}; // status bar 的默认宽度\n\nvar DefaultStatusBarWidth = 4;\n/**\n * card status 对布局的影响，直接加到 padding 中\n */\n\nexport var getStatusBBox = function (cfg) {\n  if (!cfg) {\n    return [0, 0, 0, 0];\n  }\n\n  var _a = cfg.size,\n      size = _a === void 0 ? [] : _a,\n      _b = cfg.position,\n      position = _b === void 0 ? 'left' : _b;\n\n  var _c = getSize(size),\n      width = _c[0],\n      height = _c[1];\n\n  var appendPadding = [];\n\n  switch (position) {\n    case 'top':\n      appendPadding.push(height !== null && height !== void 0 ? height : DefaultStatusBarWidth, 0, 0, 0);\n      break;\n\n    case 'right':\n      appendPadding.push(0, width !== null && width !== void 0 ? width : DefaultStatusBarWidth, 0, 0);\n      break;\n\n    case 'bottom':\n      appendPadding.push(0, 0, height !== null && height !== void 0 ? height : DefaultStatusBarWidth, 0);\n      break;\n\n    case 'left':\n      appendPadding.push(0, 0, 0, width !== null && width !== void 0 ? width : DefaultStatusBarWidth);\n      break;\n  }\n\n  return appendPadding;\n};\nexport var getStatusCfg = function (cfg, cardSize) {\n  var _a = cfg !== null && cfg !== void 0 ? cfg : {},\n      _b = _a.size,\n      size = _b === void 0 ? [] : _b,\n      _c = _a.position,\n      position = _c === void 0 ? 'left' : _c;\n\n  var _d = getSize(size),\n      width = _d[0],\n      height = _d[1];\n\n  var cardWidth = cardSize[0],\n      cardHeight = cardSize[1];\n  var x = 0;\n  var y = 0;\n  var w = 0;\n  var h = 0;\n\n  switch (position) {\n    case 'top':\n      x = 0;\n      y = 0;\n      w = width !== null && width !== void 0 ? width : cardWidth;\n      h = height !== null && height !== void 0 ? height : DefaultStatusBarWidth;\n      break;\n\n    case 'left':\n      x = 0;\n      y = 0;\n      w = width !== null && width !== void 0 ? width : DefaultStatusBarWidth;\n      h = height !== null && height !== void 0 ? height : cardHeight;\n      break;\n\n    case 'right':\n      x = cardWidth - (isNumber(width) ? width : DefaultStatusBarWidth);\n      y = 0;\n      w = width !== null && width !== void 0 ? width : DefaultStatusBarWidth;\n      h = height !== null && height !== void 0 ? height : cardHeight;\n      break;\n\n    case 'bottom':\n      x = 0;\n      y = cardHeight - (isNumber(height) ? height : DefaultStatusBarWidth);\n      w = width !== null && width !== void 0 ? width : cardWidth;\n      h = height !== null && height !== void 0 ? height : DefaultStatusBarWidth;\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    width: w,\n    height: h\n  };\n};\nexport var createMarker = function (cfg, group, size) {\n  var show = cfg.show,\n      position = cfg.position,\n      collapsed = cfg.collapsed,\n      style = cfg.style;\n\n  if (show) {\n    group.addShape('marker', {\n      attrs: __assign(__assign(__assign({}, getMarkerPosition(position, size)), {\n        r: 6,\n        cursor: 'pointer',\n        symbol: collapsed ? G6.Marker.expand : G6.Marker.collapse,\n        stroke: defaultCardStyle.stroke,\n        lineWidth: 1,\n        fill: '#fff'\n      }), style),\n      defaultCollapsed: false,\n      name: 'collapse-icon'\n    });\n  }\n};\nexport var cloneBesidesImg = function (obj) {\n  var clonedObj = {};\n  Object.keys(obj).forEach(function (key1) {\n    var obj2 = obj[key1];\n\n    if (isObject(obj2)) {\n      var clonedObj2_1 = {};\n      Object.keys(obj2).forEach(function (key2) {\n        var v = obj2[key2];\n        if (key2 === 'img' && !isString(v)) return;\n        clonedObj2_1[key2] = clone(v);\n      });\n      clonedObj[key1] = clonedObj2_1;\n    } else {\n      clonedObj[key1] = clone(obj2);\n    }\n  });\n  return clonedObj;\n};\nexport var setStyles = function (container, style) {\n  if (style === void 0) {\n    style = {};\n  }\n\n  var keys = Object.keys(style);\n  keys.forEach(function (key) {\n    container.style[key] = style[key];\n  });\n};\n/**\n * 对数据进行打标，加上 level 和  parentId\n */\n\nexport var setTag = function (data, level, parentId, path) {\n  var _a;\n\n  if (level === void 0) {\n    level = 0;\n  }\n\n  if (parentId === void 0) {\n    parentId = '';\n  }\n\n  if (path === void 0) {\n    path = '';\n  }\n\n  var id = data.id,\n      _b = data.children,\n      children = _b === void 0 ? [] : _b;\n  return __assign(__assign((_a = {}, _a[\"\".concat(prefix, \"_level\")] = level, _a[\"\".concat(prefix, \"_parentId\")] = parentId, _a[\"\".concat(prefix, \"_currentPath\")] = path, _a), data), {\n    children: children === null || children === void 0 ? void 0 : children.map(function (item, index) {\n      return setTag(item, level + 1, parentId ? \"\".concat(parentId, \"-\").concat(id) : id, \"\".concat(path, \"-\").concat(index));\n    })\n  });\n};\n/**\n * 根据 level 获取相关数据\n */\n\nexport var getLevelData = function (data, level) {\n  var _a = data.children,\n      children = _a === void 0 ? [] : _a,\n      _b = data.g_level,\n      g_level = _b === void 0 ? 0 : _b;\n\n  if (level <= 0) {\n    return data;\n  }\n\n  return __assign(__assign({}, data), {\n    children: g_level + 1 < level ? children === null || children === void 0 ? void 0 : children.map(function (item) {\n      return getLevelData(item, level);\n    }) : []\n  });\n};\n/**\n * 挂载异步数据到全局 data\n */\n\nexport var setLevelData = function (graph, data, currentPath) {\n  var currentData = graph.get('eventData').getData(); // 打标时已经做了编码，这直接取值即可\n\n  var path = currentPath.split('-');\n  path.shift(); // 根节点没有 path\n\n  var current = currentData;\n  path.forEach(function (childrenIndex) {\n    current = current.children[Number(childrenIndex)];\n  });\n  current.children = data;\n};\n/**\n * get children\n * 获取相关路径下的一级节点\n */\n\nexport var getChildrenData = function (data, currentPath) {\n  // 打标时已经做了编码，这直接取值即可\n  var path = currentPath.split('-');\n  path.shift(); // 根节点没有 path\n\n  var current = data;\n  path.forEach(function (childrenIndex) {\n    current = current.children[Number(childrenIndex)];\n  });\n\n  if (!(current === null || current === void 0 ? void 0 : current.children)) {\n    return [];\n  }\n\n  return current.children.map(function (item) {\n    return __assign(__assign({}, item), {\n      children: []\n    });\n  });\n};\n/**\n * 将查询到的节点挂载到当前图数据上\n */\n\nexport var setParentChildren = function (parendData, currentPath, children) {\n  var path = currentPath.split('-');\n  path.shift();\n  var current = parendData;\n  path.forEach(function (childrenIndex) {\n    current = current.children[Number(childrenIndex)];\n  });\n  current.children = children;\n  return parendData;\n};\n/** 超出省略 */\n\nexport var setEllipsis = function (text, fontSize, contentWidth) {\n  if (fontSize === void 0) {\n    fontSize = 12;\n  }\n\n  if (contentWidth === void 0) {\n    contentWidth = 120;\n  }\n\n  var size = isNumber(fontSize) ? fontSize : Number(fontSize.replace('px', ''));\n  var maxWords = Math.floor(contentWidth / size);\n\n  if (text.length <= maxWords) {\n    return text;\n  }\n\n  return text.slice(0, maxWords - 1) + '...';\n};\n/** 开启加载动画， 不支持同时存在多个 */\n\nexport var createLoading = function () {\n  var container = document.createElement('div');\n  container.className = \"\".concat(prefix, \"-antd-loading\");\n  var styles = {\n    position: 'fixed',\n    left: '0',\n    top: '0',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    background: 'rgba(0,0,0, 0.25)',\n    color: '#fff',\n    fontSize: '16px',\n    zIndex: 999\n  };\n  var span = document.createElement('span');\n  span.innerText = 'loading...';\n  setStyles(container, styles);\n  container.appendChild(span);\n  document.body.appendChild(container);\n};\n/** 关闭加载动画 */\n\nexport var closeLoading = function () {\n  var hideContainer = document.getElementsByClassName(\"\".concat(prefix, \"-antd-loading\"));\n  Array.from(hideContainer).forEach(function (el) {\n    document.body.removeChild(el);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}