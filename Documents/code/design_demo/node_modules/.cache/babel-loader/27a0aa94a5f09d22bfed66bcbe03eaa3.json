{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { debounce } from 'lodash'; // 解决配置共享问题\n\nexport const globalProps = {\n  config: {}\n};\nexport const setProps = props => {\n  globalProps.config = props;\n};\nexport const getProps = key => {\n  var _a;\n\n  return (_a = globalProps.config) === null || _a === void 0 ? void 0 : _a[key];\n};\nconst graphInstance = new Map();\nconst appInstance = new Map();\nexport const setInstance = app => __awaiter(void 0, void 0, void 0, function* () {\n  const x6graph = yield app.getGraphInstance();\n  graphInstance.set('x6graph', x6graph);\n  appInstance.set('app', app);\n});\nexport const getGraphInstance = () => {\n  return graphInstance.get('x6graph');\n};\nexport const getAppInstance = () => {\n  return appInstance.get('app');\n};\nexport const getGraphData = () => __awaiter(void 0, void 0, void 0, function* () {\n  const app = getAppInstance();\n  return app.getGraphData();\n});\n/** 更新配置时通知上传执行保存 */\n\nexport const onConfigChange = debounce(config => {\n  const configChange = getProps('onConfigChange');\n\n  if (!configChange || typeof configChange !== 'function') {\n    return;\n  }\n\n  return configChange(Object.assign({\n    data: getGraphData()\n  }, config));\n}, 300, {\n  trailing: true\n});","map":null,"metadata":{},"sourceType":"module"}