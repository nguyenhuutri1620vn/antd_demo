{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useCallback, useEffect } from 'react';\nimport { Empty, Form, Tabs } from 'antd';\nimport classNames from 'classnames';\nimport { Log } from '../../../util';\nimport { xflowDefaultControls, makeControlMap, getControlFromMap } from './control-map/index';\nexport { FormItemWrapper } from './common/form-item-wrapper';\nvar TabPane = Tabs.TabPane;\nexport var SchemaForm = function (props) {\n  var _a;\n\n  var _b;\n\n  var schema = props.schema,\n      formInstance = props.form,\n      className = props.className,\n      triggerUpdate = props.triggerUpdate,\n      defaultControlRender = props.defaultControlRender,\n      afterUpdatingCb = props.afterUpdatingCb,\n      controlMapfromParent = props.controlMap,\n      otherProps = __rest(props, [\"schema\", \"form\", \"className\", \"triggerUpdate\", \"defaultControlRender\", \"afterUpdatingCb\", \"controlMap\"]);\n\n  var tabs = schema.tabs;\n  var form = Form.useForm(formInstance)[0];\n  var controlMap = React.useMemo(function () {\n    return props.controlMap ? props.controlMap : makeControlMap(xflowDefaultControls);\n  }, [props.controlMap]);\n  var innerTriggerUpdate = useCallback(function (values) {\n    if (typeof triggerUpdate === 'function') {\n      triggerUpdate(form, values);\n    }\n  }, [form, triggerUpdate]);\n  /** 初次挂载时设置一次值以激活首次联动 */\n\n  useEffect(function () {\n    form.setFieldsValue({});\n  }, [form]);\n  /** 切换标签时激活联动 */\n\n  var onClickTab = useCallback(function () {\n    requestAnimationFrame(function () {\n      form.setFieldsValue({});\n    });\n  }, [form]);\n  return React.createElement(Form, __assign({\n    size: \"small\",\n    form: form,\n    layout: \"vertical\",\n    className: classNames('xflow-json-form', className)\n  }, otherProps), React.createElement(Tabs, {\n    type: \"card\",\n    defaultActiveKey: (_b = tabs[0]) === null || _b === void 0 ? void 0 : _b.name,\n    className: classNames((_a = {}, _a['tabs'] = true, _a['xTab'] = true, _a['singleTab'] = (tabs === null || tabs === void 0 ? void 0 : tabs.length) === 1, _a['coupleTab'] = (tabs === null || tabs === void 0 ? void 0 : tabs.length) === 2, _a['ternateTab'] = (tabs === null || tabs === void 0 ? void 0 : tabs.length) === 3, _a)),\n    onTabClick: onClickTab\n  }, tabs.map(function (tab) {\n    var tabName = tab.name,\n        groups = tab.groups;\n    return React.createElement(TabPane, {\n      key: tabName,\n      tab: tabName\n    }, groups.length === 0 && React.createElement(Empty, null), groups.length > 0 && groups.map(function (group) {\n      var _a = group.controls,\n          groupControls = _a === void 0 ? [] : _a;\n\n      if (groupControls.length === 0) {\n        return React.createElement(Empty, {\n          style: {\n            padding: '12px 0'\n          }\n        });\n      }\n\n      return groupControls.map(function (control) {\n        var shape = control.shape,\n            controlName = control.name;\n        var ControlComponent = getControlFromMap(shape, controlMap, defaultControlRender);\n\n        if (!ControlComponent) {\n          Log.error('未找到对应的控件:', shape);\n          return null;\n        }\n\n        return React.createElement(ControlComponent, {\n          key: controlName,\n          form: form,\n          controlSchema: control,\n          triggerUpdate: innerTriggerUpdate,\n          afterUpdatingCb: afterUpdatingCb\n        });\n      });\n    }));\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}