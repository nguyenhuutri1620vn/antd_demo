{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar _dec, _class;\n\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { decodePickingColor, encodePickingColor, rgb2arr } from '@antv/l7-utils';\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\nvar PickingStage = {\n  NONE: 0.0,\n  ENCODE: 1.0,\n  HIGHLIGHT: 2.0\n};\nvar PixelPickingPlugin = (_dec = injectable(), _dec(_class = function () {\n  function PixelPickingPlugin() {\n    _classCallCheck(this, PixelPickingPlugin);\n  }\n\n  _createClass(PixelPickingPlugin, [{\n    key: \"apply\",\n    value: function apply(layer, _ref) {\n      var rendererService = _ref.rendererService,\n          styleAttributeService = _ref.styleAttributeService;\n      layer.hooks.init.tap('PixelPickingPlugin', function () {\n        var enablePicking = true;\n        styleAttributeService.registerStyleAttribute({\n          name: 'pickingColor',\n          type: AttributeType.Attribute,\n          descriptor: {\n            name: 'a_PickingColor',\n            buffer: {\n              data: [],\n              type: gl.FLOAT\n            },\n            size: 3,\n            update: function update(feature, featureIdx) {\n              var id = feature.id;\n              return enablePicking ? encodePickingColor(id) : [0, 0, 0];\n            }\n          }\n        });\n      });\n      layer.hooks.beforePickingEncode.tap('PixelPickingPlugin', function () {\n        var _layer$getLayerConfig = layer.getLayerConfig(),\n            enablePicking = _layer$getLayerConfig.enablePicking;\n\n        if (enablePicking && layer.isVisible()) {\n          layer.models.forEach(function (model) {\n            return model.addUniforms({\n              u_PickingStage: PickingStage.ENCODE\n            });\n          });\n        }\n      });\n      layer.hooks.afterPickingEncode.tap('PixelPickingPlugin', function () {\n        var _layer$getLayerConfig2 = layer.getLayerConfig(),\n            enablePicking = _layer$getLayerConfig2.enablePicking;\n\n        if (enablePicking && layer.isVisible()) {\n          layer.models.forEach(function (model) {\n            return model.addUniforms({\n              u_PickingStage: PickingStage.HIGHLIGHT\n            });\n          });\n        }\n      });\n      layer.hooks.beforeHighlight.tap('PixelPickingPlugin', function (pickedColor) {\n        var _layer$getLayerConfig3 = layer.getLayerConfig(),\n            highlightColor = _layer$getLayerConfig3.highlightColor,\n            _layer$getLayerConfig4 = _layer$getLayerConfig3.activeMix,\n            activeMix = _layer$getLayerConfig4 === void 0 ? 0 : _layer$getLayerConfig4;\n\n        var highlightColorInArray = typeof highlightColor === 'string' ? rgb2arr(highlightColor) : highlightColor || [1, 0, 0, 1];\n        layer.updateLayerConfig({\n          pickedFeatureID: decodePickingColor(new Uint8Array(pickedColor))\n        });\n        layer.models.forEach(function (model) {\n          return model.addUniforms({\n            u_PickingStage: PickingStage.HIGHLIGHT,\n            u_PickingColor: pickedColor,\n            u_HighlightColor: highlightColorInArray.map(function (c) {\n              return c * 255;\n            }),\n            u_activeMix: activeMix\n          });\n        });\n      });\n      layer.hooks.beforeSelect.tap('PixelPickingPlugin', function (pickedColor) {\n        var _layer$getLayerConfig5 = layer.getLayerConfig(),\n            selectColor = _layer$getLayerConfig5.selectColor,\n            _layer$getLayerConfig6 = _layer$getLayerConfig5.selectMix,\n            selectMix = _layer$getLayerConfig6 === void 0 ? 0 : _layer$getLayerConfig6;\n\n        var highlightColorInArray = typeof selectColor === 'string' ? rgb2arr(selectColor) : selectColor || [1, 0, 0, 1];\n        layer.updateLayerConfig({\n          pickedFeatureID: decodePickingColor(new Uint8Array(pickedColor))\n        });\n        layer.models.forEach(function (model) {\n          return model.addUniforms({\n            u_PickingStage: PickingStage.HIGHLIGHT,\n            u_PickingColor: pickedColor,\n            u_HighlightColor: highlightColorInArray.map(function (c) {\n              return c * 255;\n            }),\n            u_activeMix: selectMix,\n            u_CurrentSelectedId: pickedColor,\n            u_SelectColor: highlightColorInArray.map(function (c) {\n              return c * 255;\n            }),\n            u_EnableSelect: 1\n          });\n        });\n      });\n    }\n  }]);\n\n  return PixelPickingPlugin;\n}()) || _class);\nexport { PixelPickingPlugin as default };","map":null,"metadata":{},"sourceType":"module"}