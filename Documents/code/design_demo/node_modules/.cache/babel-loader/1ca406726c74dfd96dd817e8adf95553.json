{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mappingLayer = exports.getDefaultState = void 0;\n\nvar util_1 = require(\"@antv/util\");\n\nvar layer_1 = require(\"../../adaptor/layer\");\n\nvar defaultHighlightColor = '#2f54eb';\nvar defaultState = {\n  active: {\n    fill: false,\n    stroke: defaultHighlightColor,\n    lineWidth: 1.5,\n    lineOpacity: 0.8\n  },\n  select: {\n    fill: false,\n    stroke: defaultHighlightColor,\n    lineWidth: 1.5,\n    lineOpacity: 0.8\n  }\n};\n\nvar getDefaultState = function (state) {\n  if ((0, util_1.isUndefined)(state)) {\n    return defaultState;\n  }\n\n  if (state.active === false) {\n    defaultState.active = Object.assign(defaultState.active, {\n      fill: false,\n      stroke: false\n    });\n  } else if (typeof state.active === 'object') {\n    if (state.active.fill === false) {\n      defaultState.active.fill = false;\n    } else if (typeof state.active.fill === 'string') {\n      defaultState.active.fill = state.active.fill;\n    }\n\n    if (state.active.stroke === false) {\n      defaultState.active.stroke = false;\n    } else if (typeof state.active.stroke === 'string') {\n      defaultState.active.stroke = state.active.stroke;\n    }\n\n    if (typeof state.active.lineWidth === 'number') {\n      defaultState.active.lineWidth = state.active.lineWidth;\n    }\n\n    if (typeof state.active.lineOpacity === 'number') {\n      defaultState.active.lineOpacity = state.active.lineOpacity;\n    }\n  }\n\n  if (state.select === false) {\n    defaultState.select = Object.assign(defaultState.select, {\n      fill: false,\n      stroke: false\n    });\n  } else if (typeof state.select === 'object') {\n    if (state.select.fill === false) {\n      defaultState.select.fill = false;\n    } else if (typeof state.select.fill === 'string') {\n      defaultState.select.fill = state.select.fill;\n    }\n\n    if (state.select.stroke === false) {\n      defaultState.select.stroke = false;\n    } else if (typeof state.select.stroke === 'string') {\n      defaultState.select.stroke = state.select.stroke;\n    }\n\n    if (typeof state.select.lineWidth === 'number') {\n      defaultState.select.lineWidth = state.select.lineWidth;\n    }\n\n    if (typeof state.select.lineOpacity === 'number') {\n      defaultState.select.lineOpacity = state.select.lineOpacity;\n    }\n  }\n\n  return defaultState;\n};\n\nexports.getDefaultState = getDefaultState;\n\nfunction mappingLayer(layer, strokeLayer, highlightLayer, selectFillLayer, selectStrokeLayer, options) {\n  var color = options.color,\n      style = options.style,\n      state = options.state;\n  var defaultState = (0, exports.getDefaultState)(state);\n  var fillState = {\n    active: defaultState.active.fill === false ? false : {\n      color: defaultState.active.fill\n    },\n    select: false\n  };\n  var fillStyle = {\n    opacity: style === null || style === void 0 ? void 0 : style.opacity\n  };\n  var fillBottomColor = style === null || style === void 0 ? void 0 : style.fillBottomColor;\n  var strokeSize = style === null || style === void 0 ? void 0 : style.lineWidth;\n  var strokeColor = style === null || style === void 0 ? void 0 : style.stroke;\n  var strokeStyle = {\n    opacity: style === null || style === void 0 ? void 0 : style.lineOpacity,\n    dashArray: style === null || style === void 0 ? void 0 : style.lineDash,\n    lineType: style === null || style === void 0 ? void 0 : style.lineType\n  };\n  /**\n   * 映射填充面图层\n   */\n  // shape\n\n  layer_1.MappingLayer.shape(layer, 'fill'); // color\n\n  color && layer_1.MappingLayer.color(layer, color); // style\n\n  fillStyle && layer_1.MappingLayer.style(layer, fillStyle); // state\n\n  fillState && layer_1.MappingLayer.state(layer, fillState); // bottomColor\n\n  fillBottomColor && layer.setBottomColor(fillBottomColor);\n  /**\n   * 描边图层\n   */\n  // shape\n\n  layer_1.MappingLayer.shape(strokeLayer, 'line'); // size\n\n  strokeSize && layer_1.MappingLayer.size(strokeLayer, strokeSize); // color\n\n  strokeColor && layer_1.MappingLayer.color(strokeLayer, strokeColor); // style\n\n  strokeStyle && layer_1.MappingLayer.style(strokeLayer, strokeStyle);\n  /**\n   * 高亮图层\n   */\n\n  if (defaultState.active.stroke) {\n    var color_1 = defaultState.active.stroke;\n    var size = defaultState.active.lineWidth || strokeSize;\n    var style_1 = {\n      opacity: defaultState.active.lineOpacity\n    }; // shape\n\n    layer_1.MappingLayer.shape(highlightLayer, 'line'); // size\n\n    size && layer_1.MappingLayer.size(highlightLayer, size); // color\n\n    color_1 && layer_1.MappingLayer.color(highlightLayer, color_1); // style\n\n    style_1 && layer_1.MappingLayer.style(highlightLayer, style_1);\n  }\n  /**\n   * 选中填充图层\n   */\n\n\n  if (defaultState.select.fill) {\n    var color_2 = defaultState.select.fill; // shape\n\n    layer_1.MappingLayer.shape(selectFillLayer, 'fill'); // color\n\n    color_2 && layer_1.MappingLayer.color(selectFillLayer, color_2); // style\n\n    fillStyle && layer_1.MappingLayer.style(selectFillLayer, fillStyle); // state\n\n    layer_1.MappingLayer.state(selectFillLayer, {\n      select: false,\n      active: false\n    });\n  }\n  /**\n   * 选中描边图层\n   */\n\n\n  if (defaultState.select.stroke) {\n    var color_3 = defaultState.select.stroke;\n    var size = defaultState.select.lineWidth || strokeSize;\n    var style_2 = {\n      opacity: defaultState.select.lineOpacity\n    }; // shape\n\n    layer_1.MappingLayer.shape(selectStrokeLayer, 'line'); // size\n\n    size && layer_1.MappingLayer.size(selectStrokeLayer, size); // color\n\n    color_3 && layer_1.MappingLayer.color(selectStrokeLayer, color_3); // style\n\n    style_2 && layer_1.MappingLayer.style(selectStrokeLayer, style_2);\n  }\n}\n\nexports.mappingLayer = mappingLayer;","map":null,"metadata":{},"sourceType":"script"}