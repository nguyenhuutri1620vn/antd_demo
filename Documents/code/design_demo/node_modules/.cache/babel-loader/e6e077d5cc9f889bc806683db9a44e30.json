{"ast":null,"code":"import React from 'react';\nimport { isReactComponent } from '@antv/xflow-core';\nimport { CaretRightOutlined } from '@ant-design/icons';\nimport { PanelNode } from './panel-node';\nimport { Empty } from 'antd';\nexport const CollapseList = props => {\n  const {\n    onActiveKeyChange,\n    collapseData,\n    prefixClz,\n    onMouseDown,\n    modelService,\n    commandService,\n    graphConfig\n  } = props;\n\n  const renderHeader = item => {\n    const {\n      header,\n      extra,\n      icon,\n      isCollapsed\n    } = item;\n\n    const onClick = e => {\n      e.preventDefault();\n      onActiveKeyChange(item.id);\n    };\n\n    return React.createElement(\"div\", {\n      className: `xflow-collapse-header`,\n      onClick: onClick\n    }, React.createElement(\"div\", {\n      className: `xflow-collapse-header-icon`\n    }, isReactComponent(icon) ? React.createElement(icon, {\n      isCollapsed\n    }) : React.createElement(CaretRightOutlined, {\n      rotate: isCollapsed ? 0 : 90,\n      style: {\n        fontSize: '12px'\n      }\n    })), React.createElement(\"div\", {\n      className: `xflow-collapse-header-label`\n    }, isReactComponent(header) ? React.createElement(header, item) : header), React.createElement(\"div\", {\n      className: `xflow-collapse-header-extra`\n    }, isReactComponent(extra) ? React.createElement(extra, item) : extra));\n  };\n\n  const renderChildren = children => {\n    return React.createElement(\"div\", {\n      className: `xflow-collapse-content`\n    }, children.map(item => {\n      return React.createElement(\"div\", {\n        className: `xflow-collapse-content-item ${item.isDisabled ? 'disabled' : ''}`,\n        key: item.id\n      }, React.createElement(PanelNode, {\n        item: item,\n        onMouseDown: onMouseDown(item),\n        popoverContent: item.popoverContent,\n        prefixClz: prefixClz,\n        modelService: modelService,\n        commandService: commandService,\n        graphConfig: graphConfig\n      }));\n    }));\n  };\n\n  return React.createElement(\"ul\", {\n    className: \"xflow-collapse-list\"\n  }, collapseData.length === 0 && React.createElement(Empty, {\n    style: {\n      marginTop: '24px'\n    }\n  }), collapseData.map(collapseItem => {\n    const {\n      children = [],\n      isCollapsed,\n      render\n    } = collapseItem;\n    const clz = isCollapsed ? 'close' : 'open';\n    return React.createElement(\"li\", {\n      className: `xflow-collapse-list-item ${clz}`,\n      key: collapseItem.id\n    }, renderHeader(collapseItem), isReactComponent(render) ? React.createElement(render, collapseItem) : renderChildren(children));\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}