{"ast":null,"code":"import { NodeView } from '../../view';\nimport { getName, createShape } from './util';\nconst viewName = getName('text');\nexport class Text extends createShape('text', {\n  view: viewName,\n  attrs: {\n    text: {\n      fontSize: 18,\n      fill: '#000000',\n      stroke: null,\n      refX: 0.5,\n      refY: 0.5\n    }\n  }\n}, {\n  noText: true\n}) {}\n\n(function (Text) {\n  class View extends NodeView {\n    confirmUpdate(flag) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let ret = super.confirmUpdate(flag, options);\n\n      if (this.hasAction(ret, 'scale')) {\n        this.resize();\n        ret = this.removeAction(ret, 'scale');\n      }\n\n      return ret;\n    }\n\n  }\n\n  Text.View = View;\n  View.config({\n    actions: {\n      attrs: ['scale']\n    }\n  });\n  NodeView.registry.register(viewName, View);\n})(Text || (Text = {}));","map":null,"metadata":{},"sourceType":"module"}