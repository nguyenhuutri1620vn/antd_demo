{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { mat4, vec3 } from 'gl-matrix';\n/**\n * 保存相机状态，便于后续在多个 Landmark 间移动\n */\n\nvar Landmark = /*#__PURE__*/function () {\n  function Landmark(name, c) {\n    _classCallCheck(this, Landmark);\n\n    this.name = void 0;\n    this.matrix = void 0;\n    this.right = void 0;\n    this.up = void 0;\n    this.forward = void 0;\n    this.position = void 0;\n    this.focalPoint = void 0;\n    this.distanceVector = void 0;\n    this.distance = void 0;\n    this.dollyingStep = void 0;\n    this.azimuth = 0;\n    this.elevation = 0;\n    this.roll = 0;\n    this.relAzimuth = 0;\n    this.relElevation = 0;\n    this.relRoll = 0;\n    this.name = name;\n    this.matrix = mat4.clone(c.matrix);\n    this.right = vec3.clone(c.right);\n    this.up = vec3.clone(c.up);\n    this.forward = vec3.clone(c.forward);\n    this.position = vec3.clone(c.position);\n    this.focalPoint = vec3.clone(c.focalPoint);\n    this.distanceVector = vec3.clone(c.distanceVector);\n    this.azimuth = c.azimuth;\n    this.elevation = c.elevation;\n    this.roll = c.roll;\n    this.relAzimuth = c.relAzimuth;\n    this.relElevation = c.relElevation;\n    this.relRoll = c.relRoll;\n    this.dollyingStep = c.dollyingStep;\n    this.distance = c.distance;\n  }\n\n  _createClass(Landmark, [{\n    key: \"getPosition\",\n    value: function getPosition() {\n      return this.position;\n    }\n  }, {\n    key: \"getFocalPoint\",\n    value: function getFocalPoint() {\n      return this.focalPoint;\n    }\n  }, {\n    key: \"getRoll\",\n    value: function getRoll() {\n      return this.roll;\n    }\n  }, {\n    key: \"retrieve\",\n    value: function retrieve(c) {\n      c.matrix = mat4.copy(c.matrix, this.matrix);\n      c.right = vec3.copy(c.right, this.right);\n      c.up = vec3.copy(c.up, this.up);\n      c.forward = vec3.copy(c.forward, this.forward);\n      c.position = vec3.copy(c.position, this.position);\n      c.focalPoint = vec3.copy(c.focalPoint, this.focalPoint);\n      c.distanceVector = vec3.copy(c.distanceVector, this.distanceVector);\n      c.azimuth = this.azimuth;\n      c.elevation = this.elevation;\n      c.roll = this.roll;\n      c.relAzimuth = this.relAzimuth;\n      c.relElevation = this.relElevation;\n      c.relRoll = this.relRoll;\n      c.dollyingStep = this.dollyingStep;\n      c.distance = this.distance;\n    }\n  }]);\n\n  return Landmark;\n}();\n\nexport { Landmark as default };","map":null,"metadata":{},"sourceType":"module"}