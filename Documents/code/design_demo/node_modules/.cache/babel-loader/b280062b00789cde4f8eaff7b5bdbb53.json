{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nexport var NsGraphHistoryReset;\n\n(function (NsGraphHistoryReset) {\n  /** Command: 用于注册named factory */\n  NsGraphHistoryReset.command = XFlowGraphCommands.GRAPH_HISTORY_RESET;\n  /** hookName */\n\n  NsGraphHistoryReset.hookKey = 'historyReset';\n})(NsGraphHistoryReset || (NsGraphHistoryReset = {}));\n\nlet GraphHistoryResetCommand =\n/** 创建清理History命令 */\nclass GraphHistoryResetCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n      const {\n        args,\n        hooks: runtimeHook\n      } = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      const result = yield hooks.historyReset.call(args, () => __awaiter(this, void 0, void 0, function* () {\n        const graph = yield ctx.getX6Graph();\n        graph.cleanHistory();\n        return {\n          err: null\n        };\n      }), runtimeHook);\n      ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n\n      if (this.isUndoable()) {\n        ctx.undo();\n      }\n\n      return this;\n    });\n    /** redo cmd */\n\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.isUndoable()) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  isUndoable() {\n    const ctx = this.contextProvider();\n    return ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphHistoryResetCommand.prototype, \"contextProvider\", void 0);\n\nGraphHistoryResetCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphHistoryReset.command.id\n  }\n})\n/** 创建清理History命令 */\n], GraphHistoryResetCommand);\nexport { GraphHistoryResetCommand };","map":null,"metadata":{},"sourceType":"module"}