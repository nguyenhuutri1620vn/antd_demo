{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { toLngLatBounds } from '@antv/geo-coord';\nimport ImageLayer from '../../image';\nvar r2d = 180 / Math.PI;\nvar tileURLRegex = /\\{([zxy])\\}/g;\n\nvar ImageTile = function () {\n  function ImageTile(key, url, container, sceneContainer) {\n    _classCallCheck(this, ImageTile);\n\n    _defineProperty(this, \"tile\", void 0);\n\n    _defineProperty(this, \"name\", void 0);\n\n    _defineProperty(this, \"imageLayer\", void 0);\n\n    this.name = key;\n    this.tile = key.split('_').map(function (v) {\n      return Number(v);\n    });\n    var urlParams = {\n      x: this.tile[0],\n      y: this.tile[1],\n      z: this.tile[2]\n    };\n    var imageSrc = this.getTileURL(urlParams, url);\n    var lnglatBounds = this.tileLnglatBounds(this.tile);\n    var west = lnglatBounds.getWest();\n    var south = lnglatBounds.getSouth();\n    var east = lnglatBounds.getEast();\n    var north = lnglatBounds.getNorth();\n    var imageLayer = new ImageLayer({\n      zIndex: -999\n    });\n    imageLayer.source(imageSrc, {\n      parser: {\n        type: 'image',\n        extent: [west, south, east, north]\n      }\n    });\n    imageLayer.setContainer(container, sceneContainer);\n    imageLayer.init();\n    this.imageLayer = imageLayer;\n  }\n\n  _createClass(ImageTile, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.imageLayer.clearModels();\n      this.imageLayer.destroy();\n    }\n  }, {\n    key: \"getTileURL\",\n    value: function getTileURL(urlParams, path) {\n      if (!urlParams.s) {\n        urlParams.s = String.fromCharCode(97 + Math.floor(Math.random() * 3));\n      }\n\n      tileURLRegex.lastIndex = 0;\n      return path.replace(tileURLRegex, function (value, key) {\n        return urlParams[key];\n      });\n    }\n  }, {\n    key: \"tileLnglatBounds\",\n    value: function tileLnglatBounds(tile) {\n      var e = this.tile2lng(tile[0] + 1, tile[2]);\n      var w = this.tile2lng(tile[0], tile[2]);\n      var s = this.tile2lat(tile[1] + 1, tile[2]);\n      var n = this.tile2lat(tile[1], tile[2]);\n      return toLngLatBounds([w, n], [e, s]);\n    }\n  }, {\n    key: \"tile2lng\",\n    value: function tile2lng(x, z) {\n      return x / Math.pow(2, z) * 360 - 180;\n    }\n  }, {\n    key: \"tile2lat\",\n    value: function tile2lat(y, z) {\n      var n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n      return r2d * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n    }\n  }]);\n\n  return ImageTile;\n}();\n\nexport { ImageTile as default };","map":null,"metadata":{},"sourceType":"module"}