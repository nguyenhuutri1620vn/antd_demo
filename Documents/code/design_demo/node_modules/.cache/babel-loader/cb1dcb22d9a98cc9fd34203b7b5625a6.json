{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { isMini } from '@antv/l7-utils';\n\nvar TouchZoomRotateHandler = function () {\n  function TouchZoomRotateHandler(el, touchZoom, touchRotate, tapDragZoom) {\n    _classCallCheck(this, TouchZoomRotateHandler);\n\n    _defineProperty(this, \"el\", void 0);\n\n    _defineProperty(this, \"touchZoom\", void 0);\n\n    _defineProperty(this, \"touchRotate\", void 0);\n\n    _defineProperty(this, \"tapDragZoom\", void 0);\n\n    _defineProperty(this, \"rotationDisabled\", void 0);\n\n    _defineProperty(this, \"enabled\", void 0);\n\n    this.el = el;\n    this.touchZoom = touchZoom;\n    this.touchRotate = touchRotate;\n    this.tapDragZoom = tapDragZoom;\n    this.rotationDisabled = false;\n    this.enabled = true;\n  }\n\n  _createClass(TouchZoomRotateHandler, [{\n    key: \"enable\",\n    value: function enable(options) {\n      this.touchZoom.enable(options);\n\n      if (!this.rotationDisabled) {\n        this.touchRotate.enable(options);\n      }\n\n      this.tapDragZoom.enable();\n\n      if (!isMini) {\n        this.el.classList.add('l7-touch-zoom-rotate');\n      }\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.touchZoom.disable();\n      this.touchRotate.disable();\n      this.tapDragZoom.disable();\n\n      if (!isMini) {\n        this.el.classList.remove('l7-touch-zoom-rotate');\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.touchZoom.isEnabled() && (this.rotationDisabled || this.touchRotate.isEnabled()) && this.tapDragZoom.isEnabled();\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.touchZoom.isActive() || this.touchRotate.isActive() || this.tapDragZoom.isActive();\n    }\n  }, {\n    key: \"disableRotation\",\n    value: function disableRotation() {\n      this.rotationDisabled = true;\n      this.touchRotate.disable();\n    }\n  }, {\n    key: \"enableRotation\",\n    value: function enableRotation() {\n      this.rotationDisabled = false;\n\n      if (this.touchZoom.isEnabled()) {\n        this.touchRotate.enable();\n      }\n    }\n  }]);\n\n  return TouchZoomRotateHandler;\n}();\n\nexport { TouchZoomRotateHandler as default };","map":null,"metadata":{},"sourceType":"module"}