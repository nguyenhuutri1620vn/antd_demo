{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { getTinyData } from './utils';\n\nvar TinyLine =\n/** @class */\nfunction (_super) {\n  __extends(TinyLine, _super);\n\n  function TinyLine() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'tiny-line';\n    return _this;\n  }\n  /**\n   * 获取默认配置项\n   * 供外部使用\n   */\n\n\n  TinyLine.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   * @param data\n   */\n\n\n  TinyLine.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n\n    var _a = this,\n        chart = _a.chart,\n        options = _a.options;\n\n    meta({\n      chart: chart,\n      options: options\n    });\n    chart.changeData(getTinyData(data));\n  };\n\n  TinyLine.prototype.getDefaultOptions = function () {\n    return TinyLine.getDefaultOptions();\n  };\n  /**\n   * 获取 迷你折线图 的适配器\n   */\n\n\n  TinyLine.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return TinyLine;\n}(Plot);\n\nexport { TinyLine };","map":null,"metadata":{},"sourceType":"module"}