{"ast":null,"code":"import React, { useContext } from 'react';\nimport { AppContext } from '../../index';\nimport { createPath } from '../../util';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING } from '../../constants';\nexport var DisplayNode = function (props) {\n  var _a = props.size,\n      size = _a === void 0 ? {\n    width: NODE_WIDTH,\n    height: NODE_HEIGHT\n  } : _a,\n      _b = props.data,\n      data = _b === void 0 ? {} : _b;\n  var NodeConfig = useContext(AppContext).theme.NodeConfig;\n  var stateNodeConfig = NodeConfig === null || NodeConfig === void 0 ? void 0 : NodeConfig.normal;\n  var _c = data.stroke,\n      stroke = _c === void 0 ? stateNodeConfig.stroke : _c,\n      _d = data.label,\n      label = _d === void 0 ? stateNodeConfig.label : _d,\n      _e = data.fill,\n      fill = _e === void 0 ? stateNodeConfig.fill : _e,\n      _f = data.fontFill,\n      fontFill = _f === void 0 ? stateNodeConfig.fontFill : _f,\n      _g = data.fontSize,\n      fontSize = _g === void 0 ? stateNodeConfig.fontSize : _g;\n  var width = size.width,\n      height = size.height;\n  var sx = Math.min(height, width) / 3;\n  var dx = Math.min(Math.tan(Math.PI / 6) * (height / 2), width / 3);\n  var path = [['M', dx, NODE_PADDING], ['L', width - sx, NODE_PADDING], ['C', width - 2 * NODE_PADDING, NODE_PADDING, width - 2 * NODE_PADDING, height / 2], ['', width - 2 * NODE_PADDING, height / 2], ['C', width - 2 * NODE_PADDING, height / 2, width - 2 * NODE_PADDING, height - 2 * NODE_PADDING], ['', width - sx, height - 2 * NODE_PADDING], ['L', dx, height - 2 * NODE_PADDING], ['L', NODE_PADDING, height / 2], ['Z']];\n  return React.createElement(\"svg\", {\n    viewBox: \"0 0 \".concat(width, \" \").concat(height),\n    // viewBox={`0 0 40 30`}\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"100%\",\n    height: \"100%\"\n  }, React.createElement(\"path\", {\n    d: createPath(path),\n    fill: fill,\n    stroke: stroke\n  }), React.createElement(\"text\", {\n    x: width / 2,\n    y: height / 2,\n    fill: fontFill,\n    textAnchor: \"middle\",\n    alignmentBaseline: \"middle\",\n    fontSize: fontSize\n  }, label), \"Sorry, your browser does not support inline SVG.\");\n};","map":null,"metadata":{},"sourceType":"module"}