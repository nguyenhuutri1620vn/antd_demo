{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _dec, _class;\n\nimport { injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { TYPES } from '../../types';\nvar PopupService = (_dec = injectable(), _dec(_class = function () {\n  function PopupService() {\n    _classCallCheck(this, PopupService);\n\n    _defineProperty(this, \"scene\", void 0);\n\n    _defineProperty(this, \"popup\", void 0);\n\n    _defineProperty(this, \"mapsService\", void 0);\n\n    _defineProperty(this, \"unAddPopup\", void 0);\n  }\n\n  _createClass(PopupService, [{\n    key: \"removePopup\",\n    value: function removePopup(popup) {\n      popup.remove();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.popup.remove();\n    }\n  }, {\n    key: \"addPopup\",\n    value: function addPopup(popup) {\n      if (this.popup) {\n        this.popup.remove();\n      }\n\n      if (this.mapsService.map && this.mapsService.getMarkerContainer()) {\n        popup.addTo(this.scene);\n        this.popup = popup;\n      } else {\n        this.unAddPopup = popup;\n      }\n    }\n  }, {\n    key: \"initPopup\",\n    value: function initPopup() {\n      if (this.unAddPopup) {\n        this.addPopup(this.unAddPopup);\n        this.unAddPopup = null;\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function init(scene) {\n      this.scene = scene;\n      this.mapsService = scene.get(TYPES.IMapService);\n    }\n  }]);\n\n  return PopupService;\n}()) || _class);\nexport { PopupService as default };","map":null,"metadata":{},"sourceType":"module"}