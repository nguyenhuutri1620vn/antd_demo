{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useContext } from 'react';\nimport { Popover } from 'antd';\nimport AppContext from '../../../context';\nimport { getProps } from '../../../util';\nexport var withPopover = function (props) {\n  return function (WrappedComponent) {\n    var _a;\n\n    var flowchartId = useContext(AppContext).flowchartId;\n\n    var _b = (_a = getProps(flowchartId, 'popoverProps')) !== null && _a !== void 0 ? _a : {},\n        content = _b.content,\n        title = _b.title,\n        extra = _b.extra;\n\n    var data = props.data;\n\n    if (!content) {\n      return React.createElement(WrappedComponent, __assign({}, props));\n    }\n\n    var getContent = function (callback) {\n      if (typeof callback === 'function') {\n        return callback(data);\n      }\n\n      return callback;\n    };\n\n    return React.createElement(Popover, __assign({}, extra, {\n      content: getContent(content),\n      title: getContent(title)\n    }), React.createElement(\"div\", {\n      className: \"charts-popover\"\n    }, React.createElement(WrappedComponent, __assign({}, props))));\n  };\n};","map":null,"metadata":{},"sourceType":"module"}