{"ast":null,"code":"\"use strict\"; // https://github.com/gpuweb/gpuweb/blob/01b20b4ad93fabae1e8e0d7752515f69708d33e0/spec/index.bs\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // tslint:disable:variable-name\n// String enums\n\nvar ExtensionName;\n\n(function (ExtensionName) {\n  ExtensionName[\"TextureCompressionBC\"] = \"texture-compression-bc\";\n})(ExtensionName = exports.ExtensionName || (exports.ExtensionName = {}));\n\nvar AddressMode;\n\n(function (AddressMode) {\n  AddressMode[\"ClampToEdge\"] = \"clamp-to-edge\";\n  AddressMode[\"Repeat\"] = \"repeat\";\n  AddressMode[\"MirrorRepeat\"] = \"mirror-repeat\";\n})(AddressMode = exports.AddressMode || (exports.AddressMode = {}));\n\nvar BindingType;\n\n(function (BindingType) {\n  BindingType[\"UniformBuffer\"] = \"uniform-buffer\";\n  BindingType[\"StorageBuffer\"] = \"storage-buffer\";\n  BindingType[\"ReadonlyStorageBuffer\"] = \"readonly-storage-buffer\";\n  BindingType[\"Sampler\"] = \"sampler\";\n  BindingType[\"ComparisonSampler\"] = \"comparison-sampler\";\n  BindingType[\"SampledTexture\"] = \"sampled-texture\";\n  BindingType[\"ReadonlyStorageTexture\"] = \"readonly-storage-texture\";\n  BindingType[\"WriteonlyStorageTexture\"] = \"writeonly-storage-texture\";\n})(BindingType = exports.BindingType || (exports.BindingType = {}));\n\nvar BlendFactor;\n\n(function (BlendFactor) {\n  BlendFactor[\"Zero\"] = \"zero\";\n  BlendFactor[\"One\"] = \"one\";\n  BlendFactor[\"SrcColor\"] = \"src-color\";\n  BlendFactor[\"OneMinusSrcColor\"] = \"one-minus-src-color\";\n  BlendFactor[\"SrcAlpha\"] = \"src-alpha\";\n  BlendFactor[\"OneMinusSrcAlpha\"] = \"one-minus-src-alpha\";\n  BlendFactor[\"DstColor\"] = \"dst-color\";\n  BlendFactor[\"OneMinusDstColor\"] = \"one-minus-dst-color\";\n  BlendFactor[\"DstAlpha\"] = \"dst-alpha\";\n  BlendFactor[\"OneMinusDstAlpha\"] = \"one-minus-dst-alpha\";\n  BlendFactor[\"SrcAlphaSaturated\"] = \"src-alpha-saturated\";\n  BlendFactor[\"BlendColor\"] = \"blend-color\";\n  BlendFactor[\"OneMinusBlendColor\"] = \"one-minus-blend-color\";\n})(BlendFactor = exports.BlendFactor || (exports.BlendFactor = {}));\n\nvar BlendOperation;\n\n(function (BlendOperation) {\n  BlendOperation[\"Add\"] = \"add\";\n  BlendOperation[\"Subtract\"] = \"subtract\";\n  BlendOperation[\"ReverseSubtract\"] = \"reverse-subtract\";\n  BlendOperation[\"Min\"] = \"min\";\n  BlendOperation[\"Max\"] = \"max\";\n})(BlendOperation = exports.BlendOperation || (exports.BlendOperation = {}));\n\nvar CompareFunction;\n\n(function (CompareFunction) {\n  CompareFunction[\"Never\"] = \"never\";\n  CompareFunction[\"Less\"] = \"less\";\n  CompareFunction[\"Equal\"] = \"equal\";\n  CompareFunction[\"LessEqual\"] = \"less-equal\";\n  CompareFunction[\"Greater\"] = \"greater\";\n  CompareFunction[\"NotEqual\"] = \"not-equal\";\n  CompareFunction[\"GreaterEqual\"] = \"greater-equal\";\n  CompareFunction[\"Always\"] = \"always\";\n})(CompareFunction = exports.CompareFunction || (exports.CompareFunction = {}));\n\nvar CullMode;\n\n(function (CullMode) {\n  CullMode[\"None\"] = \"none\";\n  CullMode[\"Front\"] = \"front\";\n  CullMode[\"Back\"] = \"back\";\n})(CullMode = exports.CullMode || (exports.CullMode = {}));\n\nvar FilterMode;\n\n(function (FilterMode) {\n  FilterMode[\"Nearest\"] = \"nearest\";\n  FilterMode[\"Linear\"] = \"linear\";\n})(FilterMode = exports.FilterMode || (exports.FilterMode = {}));\n\nvar FrontFace;\n\n(function (FrontFace) {\n  FrontFace[\"CCW\"] = \"ccw\";\n  FrontFace[\"CW\"] = \"cw\";\n})(FrontFace = exports.FrontFace || (exports.FrontFace = {}));\n\nvar IndexFormat;\n\n(function (IndexFormat) {\n  IndexFormat[\"Uint16\"] = \"uint16\";\n  IndexFormat[\"Uint32\"] = \"uint32\";\n})(IndexFormat = exports.IndexFormat || (exports.IndexFormat = {}));\n\nvar InputStepMode;\n\n(function (InputStepMode) {\n  InputStepMode[\"Vertex\"] = \"vertex\";\n  InputStepMode[\"Instance\"] = \"instance\";\n})(InputStepMode = exports.InputStepMode || (exports.InputStepMode = {}));\n\nvar LoadOp;\n\n(function (LoadOp) {\n  LoadOp[\"Load\"] = \"load\";\n})(LoadOp = exports.LoadOp || (exports.LoadOp = {}));\n\nvar PrimitiveTopology;\n\n(function (PrimitiveTopology) {\n  PrimitiveTopology[\"PointList\"] = \"point-list\";\n  PrimitiveTopology[\"LineList\"] = \"line-list\";\n  PrimitiveTopology[\"LineStrip\"] = \"line-strip\";\n  PrimitiveTopology[\"TriangleList\"] = \"triangle-list\";\n  PrimitiveTopology[\"TriangleStrip\"] = \"triangle-strip\";\n})(PrimitiveTopology = exports.PrimitiveTopology || (exports.PrimitiveTopology = {}));\n\nvar StencilOperation;\n\n(function (StencilOperation) {\n  StencilOperation[\"Keep\"] = \"keep\";\n  StencilOperation[\"Zero\"] = \"zero\";\n  StencilOperation[\"Replace\"] = \"replace\";\n  StencilOperation[\"Invert\"] = \"invert\";\n  StencilOperation[\"IncrementClamp\"] = \"increment-clamp\";\n  StencilOperation[\"DecrementClamp\"] = \"decrement-clamp\";\n  StencilOperation[\"IncrementWrap\"] = \"increment-wrap\";\n  StencilOperation[\"DecrementWrap\"] = \"decrement-wrap\";\n})(StencilOperation = exports.StencilOperation || (exports.StencilOperation = {}));\n\nvar StoreOp;\n\n(function (StoreOp) {\n  StoreOp[\"Store\"] = \"store\";\n  StoreOp[\"Clear\"] = \"clear\";\n})(StoreOp = exports.StoreOp || (exports.StoreOp = {}));\n\nvar TextureDimension;\n\n(function (TextureDimension) {\n  TextureDimension[\"E1d\"] = \"1d\";\n  TextureDimension[\"E2d\"] = \"2d\";\n  TextureDimension[\"E3d\"] = \"3d\";\n})(TextureDimension = exports.TextureDimension || (exports.TextureDimension = {}));\n\nvar TextureFormat;\n\n(function (TextureFormat) {\n  TextureFormat[\"R8Unorm\"] = \"r8unorm\";\n  TextureFormat[\"R8Snorm\"] = \"r8snorm\";\n  TextureFormat[\"R8Uint\"] = \"r8uint\";\n  TextureFormat[\"R8Sint\"] = \"r8sint\";\n  TextureFormat[\"R16Uint\"] = \"r16uint\";\n  TextureFormat[\"R16Sint\"] = \"r16sint\";\n  TextureFormat[\"R16Float\"] = \"r16float\";\n  TextureFormat[\"RG8Unorm\"] = \"rg8unorm\";\n  TextureFormat[\"RG8Snorm\"] = \"rg8snorm\";\n  TextureFormat[\"RG8Uint\"] = \"rg8uint\";\n  TextureFormat[\"RG8Sint\"] = \"rg8sint\";\n  TextureFormat[\"R32Uint\"] = \"r32uint\";\n  TextureFormat[\"R32Sint\"] = \"r32sint\";\n  TextureFormat[\"R32Float\"] = \"r32float\";\n  TextureFormat[\"RG16Uint\"] = \"rg16uint\";\n  TextureFormat[\"RG16Sint\"] = \"rg16sint\";\n  TextureFormat[\"RG16Float\"] = \"rg16float\";\n  TextureFormat[\"RGBA8Unorm\"] = \"rgba8unorm\";\n  TextureFormat[\"RGBA8UnormSRGB\"] = \"rgba8unorm-srgb\";\n  TextureFormat[\"RGBA8Snorm\"] = \"rgba8snorm\";\n  TextureFormat[\"RGBA8Uint\"] = \"rgba8uint\";\n  TextureFormat[\"RGBA8Sint\"] = \"rgba8sint\";\n  TextureFormat[\"BGRA8Unorm\"] = \"bgra8unorm\";\n  TextureFormat[\"BGRA8UnormSRGB\"] = \"bgra8unorm-srgb\";\n  TextureFormat[\"RGB10A2Unorm\"] = \"rgb10a2unorm\";\n  TextureFormat[\"RG11B10Float\"] = \"rg11b10float\";\n  TextureFormat[\"RG32Uint\"] = \"rg32uint\";\n  TextureFormat[\"RG32Sint\"] = \"rg32sint\";\n  TextureFormat[\"RG32Float\"] = \"rg32float\";\n  TextureFormat[\"RGBA16Uint\"] = \"rgba16uint\";\n  TextureFormat[\"RGBA16Sint\"] = \"rgba16sint\";\n  TextureFormat[\"RGBA16Float\"] = \"rgba16float\";\n  TextureFormat[\"RGBA32Uint\"] = \"rgba32uint\";\n  TextureFormat[\"RGBA32Sint\"] = \"rgba32sint\";\n  TextureFormat[\"RGBA32Float\"] = \"rgba32float\";\n  TextureFormat[\"Depth32Float\"] = \"depth32float\";\n  TextureFormat[\"Depth24Plus\"] = \"depth24plus\";\n  TextureFormat[\"Depth24PlusStencil8\"] = \"depth24plus-stencil8\";\n})(TextureFormat = exports.TextureFormat || (exports.TextureFormat = {}));\n\nvar TextureComponentType;\n\n(function (TextureComponentType) {\n  TextureComponentType[\"Float\"] = \"float\";\n  TextureComponentType[\"Sint\"] = \"sint\";\n  TextureComponentType[\"Uint\"] = \"uint\";\n})(TextureComponentType = exports.TextureComponentType || (exports.TextureComponentType = {}));\n\nvar TextureViewDimension;\n\n(function (TextureViewDimension) {\n  TextureViewDimension[\"E1d\"] = \"1d\";\n  TextureViewDimension[\"E2d\"] = \"2d\";\n  TextureViewDimension[\"E2dArray\"] = \"2d-array\";\n  TextureViewDimension[\"Cube\"] = \"cube\";\n  TextureViewDimension[\"CubeArray\"] = \"cube-array\";\n  TextureViewDimension[\"E3d\"] = \"3d\";\n})(TextureViewDimension = exports.TextureViewDimension || (exports.TextureViewDimension = {}));\n\nvar VertexFormat;\n\n(function (VertexFormat) {\n  VertexFormat[\"Uchar2\"] = \"uchar2\";\n  VertexFormat[\"Uchar4\"] = \"uchar4\";\n  VertexFormat[\"Char2\"] = \"char2\";\n  VertexFormat[\"Char4\"] = \"char4\";\n  VertexFormat[\"Uchar2Norm\"] = \"uchar2norm\";\n  VertexFormat[\"Uchar4Norm\"] = \"uchar4norm\";\n  VertexFormat[\"Char2Norm\"] = \"char2norm\";\n  VertexFormat[\"Char4Norm\"] = \"char4norm\";\n  VertexFormat[\"Ushort2\"] = \"ushort2\";\n  VertexFormat[\"Ushort4\"] = \"ushort4\";\n  VertexFormat[\"Short2\"] = \"short2\";\n  VertexFormat[\"Short4\"] = \"short4\";\n  VertexFormat[\"Ushort2Norm\"] = \"ushort2norm\";\n  VertexFormat[\"Ushort4Norm\"] = \"ushort4norm\";\n  VertexFormat[\"Short2Norm\"] = \"short2norm\";\n  VertexFormat[\"Short4Norm\"] = \"short4norm\";\n  VertexFormat[\"Half2\"] = \"half2\";\n  VertexFormat[\"Half4\"] = \"half4\";\n  VertexFormat[\"Float\"] = \"float\";\n  VertexFormat[\"Float2\"] = \"float2\";\n  VertexFormat[\"Float3\"] = \"float3\";\n  VertexFormat[\"Float4\"] = \"float4\";\n  VertexFormat[\"Uint\"] = \"uint\";\n  VertexFormat[\"Uint2\"] = \"uint2\";\n  VertexFormat[\"Uint3\"] = \"uint3\";\n  VertexFormat[\"Uint4\"] = \"uint4\";\n  VertexFormat[\"Int\"] = \"int\";\n  VertexFormat[\"Int2\"] = \"int2\";\n  VertexFormat[\"Int3\"] = \"int3\";\n  VertexFormat[\"Int4\"] = \"int4\";\n})(VertexFormat = exports.VertexFormat || (exports.VertexFormat = {}));\n\nvar TextureAspect;\n\n(function (TextureAspect) {\n  TextureAspect[\"All\"] = \"all\";\n  TextureAspect[\"StencilOnly\"] = \"stencil-only\";\n  TextureAspect[\"DepthOnly\"] = \"depth-only\";\n})(TextureAspect = exports.TextureAspect || (exports.TextureAspect = {}));\n\nvar CompilationMessageType;\n\n(function (CompilationMessageType) {\n  CompilationMessageType[\"Error\"] = \"error\";\n  CompilationMessageType[\"Warning\"] = \"warning\";\n  CompilationMessageType[\"Info\"] = \"info\";\n})(CompilationMessageType = exports.CompilationMessageType || (exports.CompilationMessageType = {}));\n\nvar QueryType;\n\n(function (QueryType) {\n  QueryType[\"Occlusion\"] = \"occlusion\";\n})(QueryType = exports.QueryType || (exports.QueryType = {})); // Bit fields\n\n\nvar BufferUsage;\n\n(function (BufferUsage) {\n  BufferUsage[BufferUsage[\"MapRead\"] = 1] = \"MapRead\";\n  BufferUsage[BufferUsage[\"MapWrite\"] = 2] = \"MapWrite\";\n  BufferUsage[BufferUsage[\"CopySrc\"] = 4] = \"CopySrc\";\n  BufferUsage[BufferUsage[\"CopyDst\"] = 8] = \"CopyDst\";\n  BufferUsage[BufferUsage[\"Index\"] = 16] = \"Index\";\n  BufferUsage[BufferUsage[\"Vertex\"] = 32] = \"Vertex\";\n  BufferUsage[BufferUsage[\"Uniform\"] = 64] = \"Uniform\";\n  BufferUsage[BufferUsage[\"Storage\"] = 128] = \"Storage\";\n  BufferUsage[BufferUsage[\"Indirect\"] = 256] = \"Indirect\";\n  BufferUsage[BufferUsage[\"QueryResolve\"] = 512] = \"QueryResolve\";\n})(BufferUsage = exports.BufferUsage || (exports.BufferUsage = {}));\n\nvar ColorWrite;\n\n(function (ColorWrite) {\n  ColorWrite[ColorWrite[\"Red\"] = 1] = \"Red\";\n  ColorWrite[ColorWrite[\"Green\"] = 2] = \"Green\";\n  ColorWrite[ColorWrite[\"Blue\"] = 4] = \"Blue\";\n  ColorWrite[ColorWrite[\"Alpha\"] = 8] = \"Alpha\";\n  ColorWrite[ColorWrite[\"All\"] = 15] = \"All\";\n})(ColorWrite = exports.ColorWrite || (exports.ColorWrite = {}));\n\nvar ShaderStage;\n\n(function (ShaderStage) {\n  ShaderStage[ShaderStage[\"Vertex\"] = 1] = \"Vertex\";\n  ShaderStage[ShaderStage[\"Fragment\"] = 2] = \"Fragment\";\n  ShaderStage[ShaderStage[\"Compute\"] = 4] = \"Compute\";\n})(ShaderStage = exports.ShaderStage || (exports.ShaderStage = {}));\n\nvar TextureUsage;\n\n(function (TextureUsage) {\n  TextureUsage[TextureUsage[\"CopySrc\"] = 1] = \"CopySrc\";\n  TextureUsage[TextureUsage[\"CopyDst\"] = 2] = \"CopyDst\";\n  TextureUsage[TextureUsage[\"Sampled\"] = 4] = \"Sampled\";\n  TextureUsage[TextureUsage[\"Storage\"] = 8] = \"Storage\";\n  TextureUsage[TextureUsage[\"OutputAttachment\"] = 16] = \"OutputAttachment\";\n})(TextureUsage = exports.TextureUsage || (exports.TextureUsage = {}));\n\nvar MapMode;\n\n(function (MapMode) {\n  MapMode[MapMode[\"Read\"] = 1] = \"Read\";\n  MapMode[MapMode[\"Write\"] = 2] = \"Write\";\n})(MapMode = exports.MapMode || (exports.MapMode = {}));","map":null,"metadata":{},"sourceType":"script"}