{"ast":null,"code":"import { __rest } from \"tslib\";\nimport React, { useState } from 'react';\nimport { useXflowPrefixCls } from '@antv/xflow-core';\nimport { DoubleRightOutlined, DoubleLeftOutlined } from '@ant-design/icons';\nimport { WorkspacePanel } from '../base-panel';\nimport { NodePanelBody } from './panel-body'; // import { NodePanelHeader } from '../canvas-node-tree-panel/panel-header'\n\nimport { NodePanelHeader } from './panel-header';\nimport { usePanelLyaoutStyle } from '../canvas-node-tree-panel/utils';\nimport { usePanelData } from './service';\nimport { CONTAINER_CLASS, PANEL_HEADER_HEIGHT } from './constants';\nexport { setGroupRender } from './group-panel';\nexport * from './constants';\nexport * from './utils';\nexport * from './interface';\nexport const NodePanelMain = props => {\n  const {\n    prefixClz,\n    position = {\n      width: 240,\n      top: 0,\n      bottom: 0,\n      left: 0\n    },\n    showHeader = true\n  } = props,\n        rest = __rest(props, [\"prefixClz\", \"position\", \"showHeader\"]);\n\n  const {\n    width = 200\n  } = position;\n  const {\n    headerStyle,\n    bodyStyle\n  } = usePanelLyaoutStyle(props);\n  const {\n    state,\n    onKeywordChange\n  } = usePanelData(props);\n  return React.createElement(React.Fragment, null, showHeader && React.createElement(WorkspacePanel, Object.assign({}, rest, {\n    position: {\n      top: 0,\n      left: 0,\n      height: PANEL_HEADER_HEIGHT,\n      width\n    }\n  }), React.createElement(NodePanelHeader, Object.assign({}, props, {\n    state: state,\n    style: headerStyle,\n    onKeywordChange: onKeywordChange\n  }))), React.createElement(WorkspacePanel, Object.assign({\n    className: `${CONTAINER_CLASS}-nodes`\n  }, rest, {\n    position: Object.assign(Object.assign({}, position), {\n      top: showHeader ? PANEL_HEADER_HEIGHT : 0\n    })\n  }), React.createElement(NodePanelBody, Object.assign({}, props, {\n    state: state,\n    style: bodyStyle\n  }))));\n};\nexport const FlowchartNodePanel = props => {\n  const prefixClz = useXflowPrefixCls('node-panel');\n  const [collpased, setCollpased] = useState(false);\n\n  const {\n    show = true,\n    position = {\n      width: 240,\n      top: 40,\n      bottom: 0,\n      left: 0\n    }\n  } = props,\n        rest = __rest(props, [\"show\", \"position\"]);\n\n  if (!show) {\n    return null;\n  }\n\n  const {\n    width = 200,\n    left\n  } = position;\n  return React.createElement(WorkspacePanel, {\n    className: CONTAINER_CLASS,\n    position: Object.assign(Object.assign({}, position), {\n      left: !collpased ? left : -width\n    })\n  }, React.createElement(\"div\", {\n    className: `${CONTAINER_CLASS}-wrapper`\n  }, React.createElement(WorkspacePanel, Object.assign({\n    className: prefixClz\n  }, rest, {\n    position: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    }\n  }), React.createElement(NodePanelMain, Object.assign({}, props, {\n    prefixClz: prefixClz,\n    position: position\n  }))), React.createElement(\"div\", {\n    className: `${CONTAINER_CLASS}-icon`,\n    style: {\n      top: 21,\n      right: !collpased ? -10 : -20,\n      borderRadius: !collpased ? '50%' : '0 50% 50% 0',\n      borderLeft: !collpased ? '' : 'none'\n    },\n    onClick: () => {\n      setCollpased(!collpased);\n    }\n  }, collpased ? React.createElement(DoubleRightOutlined, null) : React.createElement(DoubleLeftOutlined, null))));\n};","map":null,"metadata":{},"sourceType":"module"}