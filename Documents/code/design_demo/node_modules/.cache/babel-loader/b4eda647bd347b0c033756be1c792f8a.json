{"ast":null,"code":"import JQuery from 'jquery';\nimport { Platform } from '../platform';\nexport class MouseWheelHandle {\n  constructor(target, onWheelCallback, onWheelGuard) {\n    this.animationFrameId = 0;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.eventName = Platform.isEventSupported('wheel') ? 'wheel' : 'mousewheel';\n    this.target = target;\n    this.onWheelCallback = onWheelCallback;\n    this.onWheelGuard = onWheelGuard;\n    this.onWheel = this.onWheel.bind(this);\n    this.didWheel = this.didWheel.bind(this);\n  }\n\n  enable() {\n    if (Platform.SUPPORT_PASSIVE) {\n      this.target.addEventListener(this.eventName, this.onWheel, {\n        passive: false\n      });\n    } else {\n      JQuery(this.target).on('mousewheel', this.onWheel);\n    }\n  }\n\n  disable() {\n    if (Platform.SUPPORT_PASSIVE) {\n      this.target.removeEventListener(this.eventName, this.onWheel);\n    } else {\n      JQuery(this.target).off('mousewheel');\n    }\n  }\n\n  onWheel(e) {\n    if (this.onWheelGuard != null && !this.onWheelGuard(e)) {\n      return;\n    }\n\n    this.deltaX += e.deltaX;\n    this.deltaY += e.deltaY;\n    e.preventDefault();\n    let changed;\n\n    if (this.deltaX !== 0 || this.deltaY !== 0) {\n      e.stopPropagation();\n      changed = true;\n    }\n\n    if (changed === true && this.animationFrameId === 0) {\n      this.animationFrameId = requestAnimationFrame(() => {\n        this.didWheel(e);\n      });\n    }\n  }\n\n  didWheel(e) {\n    this.animationFrameId = 0;\n    this.onWheelCallback(e, this.deltaX, this.deltaY);\n    this.deltaX = 0;\n    this.deltaY = 0;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}