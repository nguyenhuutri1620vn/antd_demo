{"ast":null,"code":"/**\n * bullet 处理数据\n * @param options\n */\nexport function transformData(options) {\n  var data = options.data,\n      xField = options.xField,\n      measureField = options.measureField,\n      rangeField = options.rangeField,\n      targetField = options.targetField,\n      layout = options.layout;\n  var ds = [];\n  var scales = [];\n  data.forEach(function (item, index) {\n    var _a; // 构建 title * range\n\n\n    item[rangeField].sort(function (a, b) {\n      return a - b;\n    });\n    item[rangeField].forEach(function (d, i) {\n      var _a;\n\n      var range = i === 0 ? d : item[rangeField][i] - item[rangeField][i - 1];\n      ds.push((_a = {\n        rKey: rangeField + \"_\" + i\n      }, _a[xField] = xField ? item[xField] : String(index), _a[rangeField] = range, _a));\n    }); // 构建 title * measure\n\n    item[measureField].forEach(function (d, i) {\n      var _a;\n\n      ds.push((_a = {\n        mKey: item[measureField].length > 1 ? measureField + \"_\" + i : \"\" + measureField\n      }, _a[xField] = xField ? item[xField] : String(index), _a[measureField] = d, _a));\n    }); // 构建 title * target\n\n    ds.push((_a = {\n      tKey: \"\" + targetField\n    }, _a[xField] = xField ? item[xField] : String(index), _a[targetField] = item[targetField], _a)); // 为了取最大值和最小值，先存储\n\n    scales.push(item[rangeField], item[measureField], item[targetField]);\n  }); // scales 是嵌套的需要拍平\n\n  var min = Math.min.apply(Math, scales.flat(Infinity));\n  var max = Math.max.apply(Math, scales.flat(Infinity)); // min 大于 0 从 0 开始\n\n  min = min > 0 ? 0 : min; // 垂直情况，需要反转数据\n\n  if (layout === 'vertical') {\n    ds.reverse();\n  }\n\n  return {\n    min: min,\n    max: max,\n    ds: ds\n  };\n}","map":null,"metadata":{},"sourceType":"module"}