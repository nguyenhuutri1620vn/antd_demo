{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { singleton, inject } from 'mana-syringe';\nimport { IGraphCommandService } from '../../command/interface';\nimport { COMMAND_REDOABLE, COMMAND_UNDOABLE, COMMAND_GLOBALS } from '../constant';\nimport { IModelContribution } from '../interface';\nlet CommandModelContribution = class CommandModelContribution {\n  /** 扩展Model */\n  registerModel(registry) {\n    /** 是否可以redo */\n    registry.registerModel({\n      id: COMMAND_REDOABLE.id,\n      getInitialValue: () => this.commands.isRedoable,\n      watchChange: model => __awaiter(this, void 0, void 0, function* () {\n        const disposable = this.commands.watchChange(() => {\n          model.setValue(this.commands.isRedoable);\n        });\n        return disposable;\n      })\n    });\n    /** 是否可以undo */\n\n    registry.registerModel({\n      id: COMMAND_UNDOABLE.id,\n      getInitialValue: () => this.commands.isUndoable,\n      watchChange: model => __awaiter(this, void 0, void 0, function* () {\n        const disposable = this.commands.watchChange(() => {\n          model.setValue(this.commands.isUndoable);\n        });\n        return disposable;\n      })\n    });\n    /** command 执行结果 */\n\n    registry.registerModel({\n      id: COMMAND_GLOBALS.id,\n      modelFactory: () => {\n        return this.commands.Globals;\n      }\n    });\n  }\n\n};\n\n__decorate([inject(IGraphCommandService), __metadata(\"design:type\", Object)], CommandModelContribution.prototype, \"commands\", void 0);\n\nCommandModelContribution = __decorate([singleton({\n  contrib: IModelContribution\n})], CommandModelContribution);\nexport { CommandModelContribution };","map":null,"metadata":{},"sourceType":"module"}