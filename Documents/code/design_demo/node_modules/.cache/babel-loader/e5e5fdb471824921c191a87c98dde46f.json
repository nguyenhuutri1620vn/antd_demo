{"ast":null,"code":"import { canUseDOM } from './executionEnvironment';\nconst memoized = {};\nconst prefixes = ['Webkit', 'ms', 'Moz', 'O'];\nconst testStyle = canUseDOM ? document.createElement('div').style : {};\nconst hyphenPattern = /-(.)/g;\n\nfunction camelize(str) {\n  return str.replace(hyphenPattern, (_, char) => char.toUpperCase());\n}\n\nfunction getWithPrefix(name) {\n  for (let i = 0; i < prefixes.length; i += 1) {\n    const prefixedName = prefixes[i] + name;\n\n    if (prefixedName in testStyle) {\n      return prefixedName;\n    }\n  }\n\n  return null;\n}\n\nexport function getVendorPrefix(property) {\n  const name = camelize(property);\n\n  if (memoized[name] === undefined) {\n    const capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\n    memoized[name] = name in testStyle ? name : getWithPrefix(capitalizedName);\n  }\n\n  return memoized[name];\n}","map":null,"metadata":{},"sourceType":"module"}