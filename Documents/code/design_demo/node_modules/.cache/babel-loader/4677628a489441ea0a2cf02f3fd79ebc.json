{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _class, _class2, _descriptor, _temp;\n\nimport { IDENTIFIER } from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\nexport var View = (_dec = injectable(), _dec2 = inject(IDENTIFIER.Systems), _dec3 = named(IDENTIFIER.RendererSystem), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function () {\n  function View() {\n    _classCallCheck(this, View);\n\n    _initializerDefineProperty(this, \"rendererSystem\", _descriptor, this);\n\n    this.camera = void 0;\n    this.scene = void 0;\n    this.viewport = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n    this.clearColor = [1, 1, 1, 1];\n  }\n\n  _createClass(View, [{\n    key: \"getCamera\",\n    value: function getCamera() {\n      return this.camera;\n    }\n  }, {\n    key: \"getScene\",\n    value: function getScene() {\n      return this.scene;\n    }\n  }, {\n    key: \"getViewport\",\n    value: function getViewport() {\n      return this.viewport;\n    }\n  }, {\n    key: \"getClearColor\",\n    value: function getClearColor() {\n      return this.clearColor;\n    }\n  }, {\n    key: \"setCamera\",\n    value: function setCamera(camera) {\n      this.camera = camera;\n      return this;\n    }\n  }, {\n    key: \"setScene\",\n    value: function setScene(scene) {\n      this.scene = scene;\n      return this;\n    }\n  }, {\n    key: \"setViewport\",\n    value: function setViewport(viewport) {\n      this.viewport = viewport;\n      return this;\n    }\n  }, {\n    key: \"setClearColor\",\n    value: function setClearColor(clearColor) {\n      this.clearColor = clearColor;\n      return this;\n    }\n  }, {\n    key: \"pick\",\n    value: function pick(position) {\n      return this.rendererSystem.pick(position, this);\n    }\n  }]);\n\n  return View;\n}(), _temp), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"rendererSystem\", [_dec2, _dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);","map":null,"metadata":{},"sourceType":"module"}