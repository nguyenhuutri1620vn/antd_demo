{"ast":null,"code":"import React from 'react';\nimport classNames from 'classnames';\nimport { MenuContext } from './context';\nexport class MenuItemInner extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this.onHotkey = () => {\n      this.triggerHandler();\n    };\n\n    this.onClick = e => {\n      this.triggerHandler(e);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      hotkey\n    } = this.props;\n\n    if (hotkey) {\n      this.props.context.registerHotkey(hotkey, this.onHotkey);\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      hotkey\n    } = this.props;\n\n    if (hotkey) {\n      this.props.context.unregisterHotkey(hotkey, this.onHotkey);\n    }\n  }\n\n  triggerHandler(e) {\n    if (!this.props.disabled && !this.props.hidden) {\n      if (this.props.name) {\n        this.props.context.onClick(this.props.name, e);\n      }\n\n      if (this.props.onClick) {\n        this.props.onClick();\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", Object.assign({}, MenuItemInner.getProps(this.props)), MenuItemInner.getContent(this.props, this.onClick));\n  }\n\n}\n\n(function (MenuItemInner) {\n  function getProps(props, extraCls) {\n    const {\n      className,\n      disabled,\n      active,\n      hidden\n    } = props;\n    const {\n      prefixCls\n    } = props.context;\n    const baseCls = `${prefixCls}-item`;\n    return {\n      className: classNames(baseCls, extraCls, {\n        [`${baseCls}-active`]: active,\n        [`${baseCls}-hidden`]: hidden,\n        [`${baseCls}-disabled`]: disabled\n      }, className)\n    };\n  }\n\n  MenuItemInner.getProps = getProps;\n\n  function getContent(props, onClick, innerExtra, outerExtra) {\n    const {\n      icon,\n      text,\n      hotkey,\n      children\n    } = props;\n    const {\n      prefixCls\n    } = props.context;\n    const baseCls = `${prefixCls}-item`;\n    return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      type: \"button\",\n      className: `${baseCls}-button`,\n      onClick: onClick\n    }, icon && React.isValidElement(icon) && React.createElement(\"span\", {\n      className: `${baseCls}-icon`\n    }, icon), React.createElement(\"span\", {\n      className: `${baseCls}-text`\n    }, text || children), hotkey && React.createElement(\"span\", {\n      className: `${baseCls}-hotkey`\n    }, hotkey), innerExtra), outerExtra);\n  }\n\n  MenuItemInner.getContent = getContent;\n})(MenuItemInner || (MenuItemInner = {}));\n\nexport const MenuItem = props => React.createElement(MenuContext.Consumer, null, context => React.createElement(MenuItemInner, Object.assign({\n  context: context\n}, props)));","map":null,"metadata":{},"sourceType":"module"}