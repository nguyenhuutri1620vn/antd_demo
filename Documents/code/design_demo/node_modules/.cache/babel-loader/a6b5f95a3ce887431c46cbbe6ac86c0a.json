{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport TransformAction from './scale-transform';\n/**\n * 缩放 Scale 的 Action\n * @ignore\n */\n\nvar ScaleTranslate =\n/** @class */\nfunction (_super) {\n  __extends(ScaleTranslate, _super);\n\n  function ScaleTranslate() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.zoomRatio = 0.05;\n    return _this; // 平移分类的度量\n    // private translateCategory(dim, scale, normalPoint) {\n    // }\n  }\n  /**\n   * 缩小\n   */\n\n\n  ScaleTranslate.prototype.zoomIn = function () {\n    this.zoom(this.zoomRatio);\n  };\n\n  ScaleTranslate.prototype.zoom = function (scale) {\n    var _this = this;\n\n    var dims = this.dims;\n    each(dims, function (dim) {\n      _this.zoomDim(dim, scale);\n    });\n    this.context.view.render(true);\n  };\n  /**\n   * 放大\n   */\n\n\n  ScaleTranslate.prototype.zoomOut = function () {\n    this.zoom(-1 * this.zoomRatio);\n  }; // 缩放度量\n\n\n  ScaleTranslate.prototype.zoomDim = function (dim, dRatio) {\n    if (this.hasDim(dim)) {\n      var scale = this.getScale(dim);\n\n      if (scale.isLinear) {\n        this.zoomLinear(dim, scale, dRatio);\n      } //  else { // 暂时仅处理连续字段\n      // this.zoomCategory(dim, scale, normalPoint);\n      // }\n\n    }\n  }; // linear 度量平移\n\n\n  ScaleTranslate.prototype.zoomLinear = function (dim, scale, dRatio) {\n    var view = this.context.view; // 只有第一次缓存，否则无法回滚\n\n    if (!this.cacheScaleDefs[dim]) {\n      this.cacheScaleDefs[dim] = {\n        // @ts-ignore\n        nice: scale.nice,\n        min: scale.min,\n        max: scale.max\n      };\n    } // 使用使用原始度量作为缩放标准\n\n\n    var scaleDef = this.cacheScaleDefs[dim];\n    var range = scaleDef.max - scaleDef.min;\n    var min = scale.min,\n        max = scale.max;\n    var d = dRatio * range;\n    var toMin = min - d;\n    var toMax = max + d;\n    var curRange = toMax - toMin;\n    var scaled = curRange / range;\n\n    if (toMax > toMin && scaled < 100 && scaled > 0.01) {\n      view.scale(scale.field, {\n        // @ts-ignore\n        nice: false,\n        min: min - d,\n        max: max + d\n      });\n    }\n  };\n\n  return ScaleTranslate;\n}(TransformAction);\n\nexport default ScaleTranslate;","map":null,"metadata":{},"sourceType":"module"}