{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { injectable } from 'mana-syringe';\nlet GraphMappingHelper = class GraphMappingHelper {\n  constructor() {\n    this.groupNodeMap = new Map(); // node 的 mapping\n\n    this.nodeMap = new Map();\n    this.nodeMappingRecord = new Map(); // port 的 mapping\n\n    this.portMap = new Map();\n    this.portMappingRecord = new Map(); // edge 的 mapping\n\n    this.edgeMap = new Map();\n    this.edgeMappingRecord = new Map(); // 区分类型\n\n    this.getNodesByType = nodes => {\n      return nodes.reduce((acc, node) => {\n        if (node.isGroup) {\n          acc.groupNodes.push(node);\n        } else {\n          acc.normalNodes.push(node);\n        }\n\n        return acc;\n      }, {\n        normalNodes: [],\n        groupNodes: []\n      });\n    }; // 增加已有节点\n\n\n    this.getNodePorts = node => {\n      if (Array.isArray(node.ports)) {\n        return node.ports;\n      }\n\n      if (node.ports && Array.isArray(node.ports.items)) {\n        return node.ports.items;\n      }\n\n      return [];\n    }; // 增加已有节点\n\n\n    this.addNodes = nodes => {\n      nodes.forEach(node => {\n        if (node.isGroup) {\n          this.groupNodeMap.set(node.id, node);\n        } else {\n          const ports = this.getNodePorts(node);\n          this.nodeMap.set(node.id, node);\n          ports.forEach(port => {\n            this.portMap.set(port.id, port);\n          });\n        }\n      });\n    }; // 增加已有edge\n\n\n    this.addEdge = edges => {\n      edges.forEach(edge => {\n        this.edgeMap.set(edge.id, edge);\n      });\n    }; // 添加node的映射关系\n\n\n    this.buildNodeMapping = (currentNode, nextNode) => {\n      const currentNodeId = currentNode.id || currentNode.originId;\n      const nextNodeId = nextNode.id;\n      this.nodeMappingRecord.set(currentNodeId, nextNodeId);\n      const ports = this.getNodePorts(currentNode);\n      ports.forEach((oldPort, index) => {\n        const newPort = nextNode.ports[index];\n\n        if (newPort) {\n          this.portMap.set(newPort.id, newPort);\n          this.portMappingRecord.set(oldPort.id, newPort.id);\n        }\n      });\n    }; // 更新Edge的NodeId和PortId\n\n\n    this.createEdgeBetweenNodes = edgeConfig => {\n      const {\n        source,\n        sourcePortId,\n        target,\n        targetPortId\n      } = edgeConfig;\n      return Object.assign(Object.assign({}, edgeConfig), {\n        source: this.nodeMappingRecord.get(source),\n        target: this.nodeMappingRecord.get(target),\n        sourcePortId: this.portMappingRecord.get(sourcePortId),\n        targetPortId: this.portMappingRecord.get(targetPortId)\n      });\n    }; // 更新GroupNode的NodeId\n\n\n    this.buildGroupRelations = groupNode => {\n      const {\n        groupChildren\n      } = groupNode;\n      const newGroupChildren = groupChildren.map(id => {\n        return this.nodeMappingRecord.get(id);\n      });\n      return Object.assign(Object.assign({}, groupNode), {\n        groupChildren: newGroupChildren\n      });\n    };\n  }\n\n};\nGraphMappingHelper = __decorate([injectable()], GraphMappingHelper);\nexport { GraphMappingHelper };","map":null,"metadata":{},"sourceType":"module"}