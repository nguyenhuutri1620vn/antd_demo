{"ast":null,"code":"import React from 'react';\nimport { createModule } from '../module';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nimport { KeybindingConfig } from '../config';\nexport const KeyBindings = props => {\n  const {\n    config\n  } = props;\n  /** 获取配置中心 */\n\n  const extensionRegistry = useExtensionRegistry();\n  /** 获取ContextService的配置 */\n\n  const keybindingConfig = React.useMemo(() => config ? config : new KeybindingConfig(), [config]);\n  React.useEffect(() => {\n    const disposable = extensionRegistry.addCoreModule({\n      config: keybindingConfig,\n      createModule\n    });\n    /** resolve */\n\n    keybindingConfig.setMountState();\n    return () => {\n      disposable.dispose();\n      keybindingConfig.dispose();\n    };\n  }, [extensionRegistry, keybindingConfig]);\n  return null;\n};\nexport const createKeybindingConfig = addOptions => value => {\n  /** bridge config and value */\n  const valueContainer = React.useMemo(() => ({\n    getValue: () => ({})\n  }), []);\n\n  valueContainer.getValue = () => value;\n\n  const hookConfig = React.useMemo(() => {\n    const config = new KeybindingConfig();\n    addOptions(config, valueContainer);\n    return config;\n  }, [valueContainer]);\n  return hookConfig;\n};","map":null,"metadata":{},"sourceType":"module"}