{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Action } from '..';\nvar DIM_X = 'x';\nvar DIM_Y = 'y';\n/**\n * Scale translate\n * @ignore\n */\n\nvar ScaleTranslate =\n/** @class */\nfunction (_super) {\n  __extends(ScaleTranslate, _super);\n\n  function ScaleTranslate() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.dims = [DIM_X, DIM_Y];\n    _this.cfgFields = ['dims'];\n    _this.cacheScaleDefs = {};\n    return _this;\n  } // 是否支持对应字段的平移\n\n\n  ScaleTranslate.prototype.hasDim = function (dim) {\n    return this.dims.includes(dim);\n  };\n\n  ScaleTranslate.prototype.getScale = function (dim) {\n    var view = this.context.view;\n\n    if (dim === 'x') {\n      return view.getXScale();\n    } else {\n      return view.getYScales()[0];\n    }\n  };\n\n  ScaleTranslate.prototype.resetDim = function (dim) {\n    var view = this.context.view;\n\n    if (this.hasDim(dim) && this.cacheScaleDefs[dim]) {\n      var scale = this.getScale(dim);\n      view.scale(scale.field, this.cacheScaleDefs[dim]);\n      this.cacheScaleDefs[dim] = null;\n    }\n  };\n  /**\n   * 回滚\n   */\n\n\n  ScaleTranslate.prototype.reset = function () {\n    this.resetDim(DIM_X);\n    this.resetDim(DIM_Y);\n    var view = this.context.view;\n    view.render(true);\n  };\n\n  return ScaleTranslate;\n}(Action);\n\nexport default ScaleTranslate;","map":null,"metadata":{},"sourceType":"module"}