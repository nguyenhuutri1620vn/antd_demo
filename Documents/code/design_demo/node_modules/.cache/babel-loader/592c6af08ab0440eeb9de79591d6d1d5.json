{"ast":null,"code":"var _jsxFileName = \"/home/trinh/Documents/code/design_demo/src/layouts/frontend/Slidebar.js\";\nimport { UnorderedListOutlined } from \"@ant-design/icons/lib/icons\";\nimport { List } from \"antd/lib/form/Form\";\nimport React, { useEffect } from \"react\";\n\nfunction Slidebar() {\n  const count = 3;\n  const fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat,picture&noinfo`;\n  const state = {\n    initLoading: true,\n    loading: false,\n    data: [],\n    list: []\n  };\n  useEffect = (() => {\n    fetch(fakeDataUrl).then(res => res.json()).then(res => {\n      this.setState({\n        initLoading: false,\n        data: res.results,\n        list: res.results\n      });\n    });\n  }, []);\n\n  const onLoadMore = () => {\n    this.setState({\n      loading: true,\n      list: state.data.concat([...new Array(count)].map(() => ({\n        loading: true,\n        name: {},\n        picture: {}\n      })))\n    });\n    fetch(fakeDataUrl).then(res => res.json()).then(res => {\n      const data = this.state.data.concat(res.results);\n      setState({\n        data,\n        list: data,\n        loading: false\n      }, () => {\n        // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n        // In real scene, you can using public method of react-virtualized:\n        // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n        window.dispatchEvent(new Event(\"resize\"));\n      });\n    });\n  };\n\n  const {\n    initLoading,\n    loading,\n    list\n  } = state;\n  const loadMore = !initLoading && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: 12,\n      height: 32,\n      lineHeight: \"32px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onLoadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"loading more\")) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slide-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slide-bar-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slide-bar-category-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UnorderedListOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), \" All Category\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slide-bar-category-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: \"demo-loadmore-list\",\n    loading: initLoading,\n    itemLayout: \"horizontal\",\n    loadMore: loadMore,\n    dataSource: list,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      actions: [/*#__PURE__*/React.createElement(\"a\", {\n        key: \"list-loadmore-edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }\n      }, \"edit\"), /*#__PURE__*/React.createElement(\"a\", {\n        key: \"list-loadmore-more\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }, \"more\")],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      avatar: true,\n      title: false,\n      loading: item.loading,\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: item.picture.large,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }),\n      title: /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://ant.design\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 28\n        }\n      }, item.name.last),\n      description: \"Ant Design, a design language for background applications, is refined by Ant UED Team\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, \"content\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Slidebar;","map":{"version":3,"sources":["/home/trinh/Documents/code/design_demo/src/layouts/frontend/Slidebar.js"],"names":["UnorderedListOutlined","List","React","useEffect","Slidebar","count","fakeDataUrl","state","initLoading","loading","data","list","fetch","then","res","json","setState","results","onLoadMore","concat","Array","map","name","picture","window","dispatchEvent","Event","loadMore","textAlign","marginTop","height","lineHeight","item","large","last"],"mappings":"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","sourcesContent":["import { UnorderedListOutlined } from \"@ant-design/icons/lib/icons\";\nimport { List } from \"antd/lib/form/Form\";\nimport React, { useEffect } from \"react\";\n\nfunction Slidebar() {\n  const count = 3;\n  const fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat,picture&noinfo`;\n\n  const state = {\n    initLoading: true,\n    loading: false,\n    data: [],\n    list: [],\n  };\n\n  useEffect =\n    (() => {\n      fetch(fakeDataUrl)\n        .then((res) => res.json())\n        .then((res) => {\n          this.setState({\n            initLoading: false,\n            data: res.results,\n            list: res.results,\n          });\n        });\n    },\n    []);\n\nconst onLoadMore = () => {\n    this.setState({\n      loading: true,\n      list: state.data.concat(\n        [...new Array(count)].map(() => ({\n          loading: true,\n          name: {},\n          picture: {},\n        }))\n      ),\n    });\n    fetch(fakeDataUrl)\n      .then((res) => res.json())\n      .then((res) => {\n        const data = this.state.data.concat(res.results);\n        \n        setState(\n          {\n            data,\n            list: data,\n            loading: false,\n          },\n          () => {\n            // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n            // In real scene, you can using public method of react-virtualized:\n            // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n            window.dispatchEvent(new Event(\"resize\"));\n          }\n        );\n      });\n  };\n  const { initLoading, loading, list } = state;\n  const loadMore =\n    !initLoading && !loading ? (\n      <div\n        style={{\n          textAlign: \"center\",\n          marginTop: 12,\n          height: 32,\n          lineHeight: \"32px\",\n        }}\n      >\n        <Button onClick={onLoadMore}>loading more</Button>\n      </div>\n    ) : null;\n\n  return (\n    <div className=\"slide-bar\">\n      <div className=\"slide-bar-category\">\n        <div className=\"slide-bar-category-title\">\n          <UnorderedListOutlined /> All Category\n        </div>\n        <div className=\"slide-bar-category-list\">\n          <List\n            className=\"demo-loadmore-list\"\n            loading={initLoading}\n            itemLayout=\"horizontal\"\n            loadMore={loadMore}\n            dataSource={list}\n            renderItem={(item) => (\n              <List.Item\n                actions={[\n                  <a key=\"list-loadmore-edit\">edit</a>,\n                  <a key=\"list-loadmore-more\">more</a>,\n                ]}\n              >\n                <Skeleton avatar title={false} loading={item.loading} active>\n                  <List.Item.Meta\n                    avatar={<Avatar src={item.picture.large} />}\n                    title={<a href=\"https://ant.design\">{item.name.last}</a>}\n                    description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\n                  />\n                  <div>content</div>\n                </Skeleton>\n              </List.Item>\n            )}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Slidebar;\n"]},"metadata":{},"sourceType":"module"}