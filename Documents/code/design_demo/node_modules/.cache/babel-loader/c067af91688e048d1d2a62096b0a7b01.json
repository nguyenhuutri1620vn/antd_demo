{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Deferred } from '../common/deferred';\nimport { Disposable } from '../common/disposable';\nexport var NsContext;\n\n(function (NsContext) {\n  NsContext.CONFIG_TYPE = 'CONTEXT_CONFIG';\n})(NsContext || (NsContext = {}));\n\nconst noop = () => Disposable.create(() => {});\n\nexport class KeybindingConfig {\n  constructor() {\n    /** CONFIG_TYPE */\n    this.CONFIG_TYPE = NsContext.CONFIG_TYPE;\n    /** 外部注册context的方法 */\n\n    this.keybindingFunc = noop;\n    /** 是否已加载 */\n\n    this.isMounted = new Deferred();\n\n    this.setKeybindingFunc = fn => {\n      this.keybindingFunc = fn;\n    };\n\n    this.setMountState = () => {\n      this.isMounted.resolve(true);\n    };\n\n    this.getConfig = () => __awaiter(this, void 0, void 0, function* () {\n      yield this.isMounted.promise;\n      return {\n        CONFIG_TYPE: this.CONFIG_TYPE,\n        registerKeybindingFunc: this.keybindingFunc\n      };\n    });\n\n    this.dispose = () => {\n      this.keybindingFunc = noop;\n      this.isMounted = new Deferred();\n    };\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}