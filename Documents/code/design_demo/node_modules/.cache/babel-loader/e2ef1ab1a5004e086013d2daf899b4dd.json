{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport LngLat from '../geo/lng_lat';\nimport { bezier, ease, interpolate, now } from '../util';\nimport DOM from '../utils/dom';\nvar wheelZoomDelta = 4.000244140625;\nvar defaultZoomRate = 1 / 100;\nvar wheelZoomRate = 1 / 450;\nvar maxScalePerFrame = 2;\n\nvar ScrollZoomHandler = function () {\n  function ScrollZoomHandler(map, handler) {\n    var _this = this;\n\n    _classCallCheck(this, ScrollZoomHandler);\n\n    _defineProperty(this, \"map\", void 0);\n\n    _defineProperty(this, \"el\", void 0);\n\n    _defineProperty(this, \"enabled\", void 0);\n\n    _defineProperty(this, \"active\", void 0);\n\n    _defineProperty(this, \"zooming\", void 0);\n\n    _defineProperty(this, \"aroundCenter\", void 0);\n\n    _defineProperty(this, \"around\", void 0);\n\n    _defineProperty(this, \"aroundPoint\", void 0);\n\n    _defineProperty(this, \"type\", void 0);\n\n    _defineProperty(this, \"lastValue\", void 0);\n\n    _defineProperty(this, \"timeout\", void 0);\n\n    _defineProperty(this, \"finishTimeout\", void 0);\n\n    _defineProperty(this, \"lastWheelEvent\", void 0);\n\n    _defineProperty(this, \"lastWheelEventTime\", void 0);\n\n    _defineProperty(this, \"startZoom\", void 0);\n\n    _defineProperty(this, \"targetZoom\", void 0);\n\n    _defineProperty(this, \"delta\", void 0);\n\n    _defineProperty(this, \"easing\", void 0);\n\n    _defineProperty(this, \"prevEase\", void 0);\n\n    _defineProperty(this, \"frameId\", void 0);\n\n    _defineProperty(this, \"handler\", void 0);\n\n    _defineProperty(this, \"defaultZoomRate\", void 0);\n\n    _defineProperty(this, \"wheelZoomRate\", void 0);\n\n    _defineProperty(this, \"onScrollFrame\", function () {\n      if (!_this.frameId) {\n        return;\n      }\n\n      _this.frameId = null;\n\n      if (!_this.isActive()) {\n        return;\n      }\n\n      var tr = _this.map.transform;\n\n      if (_this.delta !== 0) {\n        var zoomRate = _this.type === 'wheel' && Math.abs(_this.delta) > wheelZoomDelta ? _this.wheelZoomRate : _this.defaultZoomRate;\n        var scale = maxScalePerFrame / (1 + Math.exp(-Math.abs(_this.delta * zoomRate)));\n\n        if (_this.delta < 0 && scale !== 0) {\n          scale = 1 / scale;\n        }\n\n        var fromScale = typeof _this.targetZoom === 'number' ? tr.zoomScale(_this.targetZoom) : tr.scale;\n        _this.targetZoom = Math.min(tr.maxZoom, Math.max(tr.minZoom, tr.scaleZoom(fromScale * scale)));\n\n        if (_this.type === 'wheel') {\n          _this.startZoom = tr.zoom;\n          _this.easing = _this.smoothOutEasing(200);\n        }\n\n        _this.delta = 0;\n      }\n\n      var targetZoom = typeof _this.targetZoom === 'number' ? _this.targetZoom : tr.zoom;\n      var startZoom = _this.startZoom;\n      var easing = _this.easing;\n      var finished = false;\n      var zoom;\n\n      if (_this.type === 'wheel' && startZoom && easing) {\n        var t = Math.min((now() - _this.lastWheelEventTime) / 200, 1);\n        var k = easing(t);\n        zoom = interpolate(startZoom, targetZoom, k);\n\n        if (t < 1) {\n          if (!_this.frameId) {\n            _this.frameId = true;\n          }\n        } else {\n          finished = true;\n        }\n      } else {\n        zoom = targetZoom;\n        finished = true;\n      }\n\n      _this.active = true;\n\n      if (finished) {\n        _this.active = false;\n        _this.finishTimeout = setTimeout(function () {\n          _this.zooming = false;\n\n          _this.handler.triggerRenderFrame();\n\n          delete _this.targetZoom;\n          delete _this.finishTimeout;\n        }, 200);\n      }\n\n      return {\n        noInertia: true,\n        needsRenderFrame: !finished,\n        zoomDelta: zoom - tr.zoom,\n        around: _this.aroundPoint,\n        originalEvent: _this.lastWheelEvent\n      };\n    });\n\n    this.map = map;\n    this.el = map.getCanvasContainer();\n    this.handler = handler;\n    this.delta = 0;\n    this.defaultZoomRate = defaultZoomRate;\n    this.wheelZoomRate = wheelZoomRate;\n  }\n\n  _createClass(ScrollZoomHandler, [{\n    key: \"setZoomRate\",\n    value: function setZoomRate(zoomRate) {\n      this.defaultZoomRate = zoomRate;\n    }\n  }, {\n    key: \"setWheelZoomRate\",\n    value: function setWheelZoomRate(zoomRate) {\n      this.wheelZoomRate = zoomRate;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.enabled;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return !!this.active || this.finishTimeout !== undefined;\n    }\n  }, {\n    key: \"isZooming\",\n    value: function isZooming() {\n      return !!this.zooming;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable(options) {\n      if (this.isEnabled()) {\n        return;\n      }\n\n      this.enabled = true;\n      this.aroundCenter = options && options.around === 'center';\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      if (!this.isEnabled()) {\n        return;\n      }\n\n      this.enabled = false;\n    }\n  }, {\n    key: \"wheel\",\n    value: function wheel(e) {\n      if (!this.isEnabled()) {\n        return;\n      }\n\n      var value = e.deltaMode === window.WheelEvent.DOM_DELTA_LINE ? e.deltaY * 40 : e.deltaY;\n      var nowTime = now();\n      var timeDelta = nowTime - (this.lastWheelEventTime || 0);\n      this.lastWheelEventTime = nowTime;\n\n      if (value !== 0 && value % wheelZoomDelta === 0) {\n        this.type = 'wheel';\n      } else if (value !== 0 && Math.abs(value) < 4) {\n        this.type = 'trackpad';\n      } else if (timeDelta > 400) {\n        this.type = null;\n        this.lastValue = value;\n        this.timeout = setTimeout(this.onTimeout, 40, e);\n      } else if (!this.type) {\n        this.type = Math.abs(timeDelta * value) < 200 ? 'trackpad' : 'wheel';\n\n        if (this.timeout) {\n          clearTimeout(this.timeout);\n          this.timeout = null;\n          value += this.lastValue;\n        }\n      }\n\n      if (e.shiftKey && value) {\n        value = value / 4;\n      }\n\n      if (this.type) {\n        this.lastWheelEvent = e;\n        this.delta -= value;\n\n        if (!this.active) {\n          this.start(e);\n        }\n      }\n\n      e.preventDefault();\n    }\n  }, {\n    key: \"renderFrame\",\n    value: function renderFrame() {\n      return this.onScrollFrame();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.active = false;\n    }\n  }, {\n    key: \"onTimeout\",\n    value: function onTimeout(initialEvent) {\n      this.type = 'wheel';\n      this.delta -= this.lastValue;\n\n      if (!this.active && this.start) {\n        this.start(initialEvent);\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start(e) {\n      if (!this.delta) {\n        return;\n      }\n\n      if (this.frameId) {\n        this.frameId = null;\n      }\n\n      this.active = true;\n\n      if (!this.isZooming()) {\n        this.zooming = true;\n      }\n\n      if (this.finishTimeout) {\n        clearTimeout(this.finishTimeout);\n        delete this.finishTimeout;\n      }\n\n      var pos = DOM.mousePos(this.el, e);\n      this.around = LngLat.convert(this.aroundCenter ? this.map.getCenter() : this.map.unproject(pos));\n      this.aroundPoint = this.map.transform.locationPoint(this.around);\n\n      if (!this.frameId) {\n        this.frameId = true;\n        this.handler.triggerRenderFrame();\n      }\n    }\n  }, {\n    key: \"smoothOutEasing\",\n    value: function smoothOutEasing(duration) {\n      var easing = ease;\n\n      if (this.prevEase) {\n        var preEase = this.prevEase;\n        var t = (now() - preEase.start) / preEase.duration;\n        var speed = preEase.easing(t + 0.01) - preEase.easing(t);\n        var x = 0.27 / Math.sqrt(speed * speed + 0.0001) * 0.01;\n        var y = Math.sqrt(0.27 * 0.27 - x * x);\n        easing = bezier(x, y, 0.25, 1);\n      }\n\n      this.prevEase = {\n        start: now(),\n        duration: duration,\n        easing: easing\n      };\n      return easing;\n    }\n  }]);\n\n  return ScrollZoomHandler;\n}();\n\nexport default ScrollZoomHandler;","map":null,"metadata":{},"sourceType":"module"}