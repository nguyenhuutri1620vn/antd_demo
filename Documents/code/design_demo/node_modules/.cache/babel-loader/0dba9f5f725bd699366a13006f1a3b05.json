{"ast":null,"code":"import { FunctionExt } from '../../util';\nimport { Registry } from '../registry';\nimport { raw } from './raw';\nimport * as attrs from './main';\nexport var Attr;\n\n(function (Attr) {\n  function isValidDefinition(def, val, options) {\n    if (def != null) {\n      if (typeof def === 'string') {\n        return true;\n      }\n\n      if (typeof def.qualify !== 'function' || FunctionExt.call(def.qualify, this, val, options)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  Attr.isValidDefinition = isValidDefinition;\n})(Attr || (Attr = {}));\n\n(function (Attr) {\n  Attr.presets = Object.assign(Object.assign({}, raw), attrs);\n  Attr.registry = Registry.create({\n    type: 'attribute definition'\n  });\n  Attr.registry.register(Attr.presets, true);\n})(Attr || (Attr = {}));","map":null,"metadata":{},"sourceType":"module"}