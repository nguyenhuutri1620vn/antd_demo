{"ast":null,"code":"import React, { useState, useCallback } from 'react';\nimport { useXflowPrefixCls } from '@antv/xflow-core';\nimport { WorkspacePanel } from '../base-panel';\nimport { CollapsePanelBody } from './panel-body';\nimport { NodePanelHeader } from './panel-header';\nimport { NodePanelFooter } from './panel-footer';\nimport { NodePanelCollapseBtn } from './panel-collapse-btn';\nimport { usePanelLyaoutStyle } from './utils';\nimport { useCollapsePanelData } from './service';\nimport { NsCollapsePanelModel } from './interface';\nimport * as NsNodeCollapsePanel from './interface';\n\nconst CollapsePanelMain = props => {\n  const {\n    headerStyle,\n    bodyStyle,\n    footerStyle\n  } = usePanelLyaoutStyle(props);\n  const {\n    state,\n    onActiveKeyChange,\n    onKeywordChange\n  } = useCollapsePanelData(props);\n  return React.createElement(React.Fragment, null, React.createElement(NodePanelHeader, Object.assign({}, props, {\n    state: state,\n    style: headerStyle,\n    onKeywordChange: onKeywordChange\n  })), React.createElement(CollapsePanelBody, Object.assign({}, props, {\n    state: state,\n    style: bodyStyle,\n    onActiveKeyChange: onActiveKeyChange\n  })), React.createElement(NodePanelFooter, Object.assign({}, props, {\n    state: state,\n    style: footerStyle\n  })));\n};\n\nconst NodeCollapsePanel = props => {\n  const {\n    position,\n    collapsible,\n    onCollapseChange\n  } = props;\n  const {\n    width = 200,\n    left\n  } = position;\n  const prefixClz = useXflowPrefixCls('collapse-panel');\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const handleBtnClick = useCallback(() => {\n    setIsCollapsed(!isCollapsed);\n    onCollapseChange(!isCollapsed);\n  }, [isCollapsed, onCollapseChange]);\n  return React.createElement(WorkspacePanel, Object.assign({}, props, {\n    className: prefixClz,\n    position: Object.assign(Object.assign({}, position), {\n      left: !isCollapsed ? left : -width\n    }),\n    style: {\n      transition: 'left 0.5s'\n    }\n  }), React.createElement(CollapsePanelMain, Object.assign({}, props, {\n    prefixClz: prefixClz\n  })), collapsible && React.createElement(NodePanelCollapseBtn, Object.assign({}, props, {\n    prefixClz: prefixClz,\n    isCollapsed: isCollapsed,\n    onCollapseBtnClick: handleBtnClick,\n    style: {\n      position: 'absolute',\n      zIndex: 1,\n      width: 13,\n      right: -13,\n      bottom: 20,\n      padding: '12px 0px',\n      textAlign: 'center',\n      borderWidth: '1px 1px 1px 0',\n      borderStyle: 'solid solid solid',\n      borderColor: 'rgb(232, 232, 232) rgb(232, 232, 232) rgb(232, 232, 232)',\n      cursor: 'pointer'\n    }\n  })));\n};\n\nexport { NodeCollapsePanel, NsCollapsePanelModel, NsNodeCollapsePanel };","map":null,"metadata":{},"sourceType":"module"}