{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport G6 from '@antv/g6';\nimport { deepClone, Log } from '../../utils';\nimport { defaultMinimapCfg } from './constants';\nexport var getGraphSize = function (width, height, container) {\n  var CANVAS_WIDTH;\n  var CANVAS_HEIGHT;\n\n  if (container && container.current) {\n    CANVAS_WIDTH = container.current.offsetWidth;\n    CANVAS_HEIGHT = container.current.offsetHeight || 500;\n  }\n\n  if (!width && !CANVAS_WIDTH || !height && !CANVAS_HEIGHT) {\n    Log.warn('请为 Graph 指定 width 与 height！否则将使用默认值 500 * 500');\n    return [500, 500];\n  }\n\n  return [width || CANVAS_WIDTH || 500, height || CANVAS_HEIGHT || 500];\n}; // 展开&折叠事件\n\nexport var bindDefaultEvents = function (graph, collapseExpand) {\n  if (collapseExpand) {\n    var onClick_1 = function (e) {\n      var item = e.item;\n\n      if (e.target.get('name') === 'collapse-icon') {\n        graph.updateItem(item, {\n          collapsed: !item.getModel().collapsed\n        });\n        graph.layout();\n      }\n    };\n\n    graph.on('node:click', function (e) {\n      onClick_1(e);\n    });\n    graph.on('node:touchstart', function (e) {\n      onClick_1(e);\n    });\n  }\n}; // 默认箭头样式\n\nexport var getDefaultEdgeArrowCfg = function (d, arrowType, fill) {\n  if (d === void 0) {\n    d = 0;\n  }\n\n  if (arrowType === void 0) {\n    arrowType = 'vee';\n  }\n\n  if (fill === void 0) {\n    fill = '#ccc';\n  }\n\n  return {\n    endArrow: {\n      path: G6.Arrow[arrowType](10, 10, d),\n      fill: fill,\n      d: d\n    }\n  };\n}; // 统一处理 text&style\n\nexport var getContentAndStyle = function (cfg) {\n  if (typeof cfg === 'string' || typeof cfg === 'number') {\n    return {\n      text: cfg\n    };\n  }\n\n  var content = cfg.content,\n      style = cfg.style;\n  return {\n    text: content,\n    style: style\n  };\n}; // 统一处理 config，支持回调\n\nexport var getConfig = function (source, item, cfg) {\n  if (typeof source === 'function') {\n    return source(item, cfg);\n  }\n\n  return source || {};\n};\n\nvar uuid = function () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}; // 同一页面存在多 graph 时需要指定 graphId\n\n\nexport var getGraphId = function (graph) {\n  if (graph.current) {\n    return graph.current;\n  }\n\n  graph.current = \"IndentedTreeGraph-\".concat(uuid());\n  return graph.current;\n};\nexport var renderGraph = function (graph, data) {\n  var originData = deepClone(data);\n  graph.data(originData);\n  graph.render();\n};\nexport var processMinimap = function (cfg, graph) {\n  if (cfg === void 0) {\n    cfg = {};\n  }\n\n  if (!graph || graph.destroyed) return;\n\n  if (cfg.show) {\n    var curMminimapCfg = Object.assign(defaultMinimapCfg, cfg);\n    var minimap = new G6.Minimap(__assign({}, curMminimapCfg));\n    graph.addPlugin(minimap);\n    return minimap;\n  }\n\n  return null;\n};\n/**\n * min ma\n */\n\nexport var getMarkerPosition = function (direction, size) {\n  if (direction === void 0) {\n    direction = 'right';\n  }\n\n  var width = size[0],\n      height = size[1];\n  var x = 0;\n  var y = 0;\n\n  switch (direction) {\n    case 'top':\n      x = width / 2;\n      y = 0;\n      break;\n\n    case 'right':\n      x = width;\n      y = height / 2;\n      break;\n\n    case 'bottom':\n      x = width / 2;\n      y = height;\n      break;\n\n    case 'left':\n      x = 0;\n      y = height / 2;\n      break;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n};\n/**\n * 设置 props 默认值\n * props 会在对应图表和 hooks 里面使用，不想加个很长的赋值表达式。\n * layout 使用 merge\n */\n\nexport var useProps = function (props, defaultProps) {\n  return __assign(__assign(__assign({}, defaultProps), props), {\n    layout: __assign(__assign({}, defaultProps === null || defaultProps === void 0 ? void 0 : defaultProps.layout), props === null || props === void 0 ? void 0 : props.layout)\n  });\n};","map":null,"metadata":{},"sourceType":"module"}