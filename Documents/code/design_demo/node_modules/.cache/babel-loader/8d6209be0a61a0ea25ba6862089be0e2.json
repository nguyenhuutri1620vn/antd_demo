{"ast":null,"code":"import { $window } from '@antv/l7-utils';\nvar lastFrameTime = null;\nvar frameTimes = [];\nvar minFramerateTarget = 30;\nvar frameTimeTarget = 1000 / minFramerateTarget;\nvar performance = $window.performance;\nexport var PerformanceMarkers = {\n  create: 'create',\n  load: 'load',\n  fullLoad: 'fullLoad'\n};\nexport var PerformanceUtils = {\n  mark: function mark(marker) {\n    performance.mark(marker);\n  },\n  frame: function frame(timestamp) {\n    var currTimestamp = timestamp;\n\n    if (lastFrameTime != null) {\n      var frameTime = currTimestamp - lastFrameTime;\n      frameTimes.push(frameTime);\n    }\n\n    lastFrameTime = currTimestamp;\n  },\n  clearMetrics: function clearMetrics() {\n    lastFrameTime = null;\n    frameTimes = [];\n    performance.clearMeasures('loadTime');\n    performance.clearMeasures('fullLoadTime');\n\n    for (var marker in PerformanceMarkers) {\n      performance.clearMarks(PerformanceMarkers[marker]);\n    }\n  },\n  getPerformanceMetrics: function getPerformanceMetrics() {\n    var loadTime = performance.measure('loadTime', PerformanceMarkers.create, PerformanceMarkers.load).duration;\n    var fullLoadTime = performance.measure('fullLoadTime', PerformanceMarkers.create, PerformanceMarkers.fullLoad).duration;\n    var totalFrames = frameTimes.length;\n    var avgFrameTime = frameTimes.reduce(function (prev, curr) {\n      return prev + curr;\n    }, 0) / totalFrames / 1000;\n    var fps = 1 / avgFrameTime;\n    var droppedFrames = frameTimes.filter(function (frameTime) {\n      return frameTime > frameTimeTarget;\n    }).reduce(function (acc, curr) {\n      return acc + (curr - frameTimeTarget) / frameTimeTarget;\n    }, 0);\n    var percentDroppedFrames = droppedFrames / (totalFrames + droppedFrames) * 100;\n    return {\n      loadTime: loadTime,\n      fullLoadTime: fullLoadTime,\n      fps: fps,\n      percentDroppedFrames: percentDroppedFrames\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}