{"ast":null,"code":"import React from 'react';\nimport { XFlowHookConfig, createModule } from '../module';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nimport { HookConfig } from '../config';\nexport const HookRegistry = props => {\n  /** 获取配置中心 */\n  const extensionRegistry = useExtensionRegistry();\n  /** 获取ContextService的配置 */\n\n  const hookConfig = React.useMemo(() => props.config ? props.config : new XFlowHookConfig(), // 不要移除：保证config只生成一次\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  React.useEffect(() => {\n    const disposable = extensionRegistry.addCoreModule({\n      config: hookConfig,\n      createModule\n    });\n    return () => {\n      disposable.dispose();\n      hookConfig.dispose();\n    };\n  }, [extensionRegistry, hookConfig]);\n  return null;\n};\nexport const createHookConfig = addOptions => value => {\n  /** bridge config and value */\n  const valueContainer = React.useMemo(() => ({\n    getValue: () => ({})\n  }), []);\n\n  valueContainer.getValue = () => value;\n\n  const hookConfig = React.useMemo(() => {\n    const config = new HookConfig();\n    addOptions(config, valueContainer);\n    return config;\n  }, [valueContainer]);\n  return hookConfig;\n};","map":null,"metadata":{},"sourceType":"module"}