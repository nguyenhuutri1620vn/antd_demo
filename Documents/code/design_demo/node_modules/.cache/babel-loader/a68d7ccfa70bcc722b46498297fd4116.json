{"ast":null,"code":"import React from 'react';\nimport classNames from 'classnames';\nimport RcDropdown from 'rc-dropdown';\nexport class Dropdown extends React.Component {\n  // getTransitionName() {\n  //   const { placement = '', transitionName } = this.props\n  //   if (transitionName !== undefined) {\n  //     return transitionName\n  //   }\n  //   if (placement.indexOf('top') >= 0) {\n  //     return 'slide-down'\n  //   }\n  //   return 'slide-up'\n  // }\n  render() {\n    const {\n      children,\n      trigger,\n      disabled\n    } = this.props;\n    const prefixCls = `${this.props.prefixCls}-dropdown`;\n    const child = React.Children.only(children);\n    const dropdownTrigger = React.cloneElement(child, {\n      className: classNames(children.props.className, `${prefixCls}-trigger`),\n      disabled\n    });\n    const triggers = disabled ? [] : Array.isArray(trigger) ? trigger : [trigger];\n    let alignPoint = false;\n\n    if (triggers && triggers.indexOf('contextMenu') !== -1) {\n      alignPoint = true;\n    }\n\n    const overlay = React.Children.only(this.props.overlay);\n    const fixedOverlay = React.createElement(\"div\", {\n      className: `${prefixCls}-overlay`\n    }, overlay);\n    return React.createElement(RcDropdown, Object.assign({}, this.props, {\n      prefixCls: prefixCls,\n      overlay: fixedOverlay,\n      alignPoint: alignPoint,\n      trigger: triggers\n    }), dropdownTrigger);\n  }\n\n}\n\n(function (Dropdown) {\n  Dropdown.defaultProps = {\n    trigger: 'hover',\n    prefixCls: 'x6',\n    mouseEnterDelay: 0.15,\n    mouseLeaveDelay: 0.1,\n    placement: 'bottomLeft'\n  };\n})(Dropdown || (Dropdown = {}));","map":null,"metadata":{},"sourceType":"module"}