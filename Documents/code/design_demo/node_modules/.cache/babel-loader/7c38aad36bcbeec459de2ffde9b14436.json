{"ast":null,"code":"import Vector from './utils/vector';\n/**\n * cosine-similarity算法 计算余弦相似度\n * @param item 元素\n * @param targetItem 目标元素\n */\n\nvar cosineSimilarity = function cosineSimilarity(item, targetItem) {\n  // 目标元素向量\n  var targetItemVector = new Vector(targetItem); // 目标元素向量的模长\n\n  var targetNodeNorm2 = targetItemVector.norm2(); // 元素向量\n\n  var itemVector = new Vector(item); // 元素向量的模长\n\n  var itemNorm2 = itemVector.norm2(); // 计算元素向量和目标元素向量的点积\n\n  var dot = targetItemVector.dot(itemVector);\n  var norm2Product = targetNodeNorm2 * itemNorm2; // 计算元素向量和目标元素向量的余弦相似度\n\n  var cosineSimilarity = norm2Product ? dot / norm2Product : 0;\n  return cosineSimilarity;\n};\n\nexport default cosineSimilarity;","map":null,"metadata":{},"sourceType":"module"}