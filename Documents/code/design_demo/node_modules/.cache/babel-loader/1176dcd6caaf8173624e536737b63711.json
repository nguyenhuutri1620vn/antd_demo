{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Base } from './base';\nimport { SizeSensor } from '../util';\nexport class SizeManager extends Base {\n  hasScroller() {\n    return this.graph.scroller.widget != null;\n  }\n\n  getContainer() {\n    return this.hasScroller() ? this.graph.scroller.widget.container : this.graph.container;\n  }\n\n  init() {\n    const autoResize = this.options.autoResize;\n\n    if (autoResize) {\n      const target = typeof autoResize === 'boolean' ? this.getContainer() : autoResize;\n      SizeSensor.bind(target, () => {\n        const container = this.getContainer(); // container is border-box\n\n        const width = container.offsetWidth;\n        const height = container.offsetHeight;\n        this.resize(width, height);\n      });\n    }\n  }\n\n  resize(width, height) {\n    if (this.hasScroller()) {\n      this.resizeScroller(width, height);\n    } else {\n      this.resizeGraph(width, height);\n    }\n  }\n\n  resizeGraph(width, height) {\n    this.graph.transform.resize(width, height);\n  }\n\n  resizeScroller(width, height) {\n    this.graph.scroller.resize(width, height);\n  }\n\n  resizePage(width, height) {\n    const instance = this.graph.scroller.widget;\n\n    if (instance) {\n      instance.updatePageSize(width, height);\n    }\n  }\n\n  dispose() {\n    SizeSensor.clear(this.getContainer());\n  }\n\n}\n\n__decorate([Base.dispose()], SizeManager.prototype, \"dispose\", null);","map":null,"metadata":{},"sourceType":"module"}