{"ast":null,"code":"import React from 'react';\nimport { createModule } from '../module';\nimport { ModelServiceConfig } from '../config';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nexport const ModelServiceRegistry = props => {\n  const {\n    config\n  } = props;\n  /** 获取配置中心 */\n\n  const extensionRegistry = useExtensionRegistry();\n  /** 获取ModelService的配置 */\n\n  const modelServiceConfig = React.useMemo(() => config ? config : new ModelServiceConfig(),\n  /* eslint-disable-next-line  */\n  []);\n  React.useEffect(() => {\n    const disposable = extensionRegistry.addCoreModule({\n      config: modelServiceConfig,\n      createModule\n    });\n    modelServiceConfig.setMountState();\n    return () => {\n      disposable.dispose();\n      modelServiceConfig.dispose();\n    }; // 不要移除：保证 只生执行一次\n    // eslint-disable-next-line\n  }, []);\n  return null;\n};\nModelServiceRegistry.defaultProps = {\n  XFlowModuleType: 'ModelServiceConfig'\n};\nexport const createModelServiceConfig = addOptions => value => {\n  /** bridge config and value */\n  const valueContainer = React.useMemo(() => ({\n    getValue: () => ({})\n  }), []);\n\n  valueContainer.getValue = () => value;\n\n  const hookConfig = React.useMemo(() => {\n    const config = new ModelServiceConfig();\n    addOptions(config, valueContainer);\n    return config;\n  }, [valueContainer]);\n  return hookConfig;\n};","map":null,"metadata":{},"sourceType":"module"}