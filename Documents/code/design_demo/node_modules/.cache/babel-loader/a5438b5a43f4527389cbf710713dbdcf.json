{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { Dot } from '@antv/l7plot';\nimport useL7Plot from '../../hooks/useL7Plot';\nimport { getChart } from '../../util';\nimport ErrorBoundary from '../../errorBoundary';\nimport ChartLoading from '../../util/createLoading';\nvar DotMap = forwardRef(function (props, ref) {\n  var chartRef = props.chartRef,\n      _a = props.containerStyle,\n      containerStyle = _a === void 0 ? {\n    height: 'inherit'\n  } : _a,\n      className = props.className,\n      loading = props.loading,\n      loadingTemplate = props.loadingTemplate,\n      errorTemplate = props.errorTemplate,\n      config = __rest(props, [\"chartRef\", \"containerStyle\", \"className\", \"loading\", \"loadingTemplate\", \"errorTemplate\"]);\n\n  var _b = useL7Plot(Dot, config),\n      plotRef = _b.plotRef,\n      containerRef = _b.containerRef;\n\n  useEffect(function () {\n    getChart(chartRef, plotRef.current);\n  }, [plotRef.current]);\n  useImperativeHandle(ref, function () {\n    return {\n      getChart: function () {\n        return plotRef.current;\n      }\n    };\n  });\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate\n  }), React.createElement(\"div\", {\n    className: className,\n    style: containerStyle,\n    ref: containerRef\n  }));\n});\nexport default DotMap;","map":null,"metadata":{},"sourceType":"module"}