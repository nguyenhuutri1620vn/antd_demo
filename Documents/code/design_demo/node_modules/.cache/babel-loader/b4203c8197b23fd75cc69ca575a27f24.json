{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport G6 from '@antv/g6';\nimport { defaultLabelStyle, Margin, defaultTitleLabelCfg, cardTitlePadding } from './constants';\nimport { getConfig, getContentAndStyle, getMarkerPosition } from './utils';\nexport var registerCardNode = function () {\n  G6.registerNode('card', {\n    draw: function (cfg, group) {\n      var _a;\n\n      if (cfg === void 0) {\n        cfg = {};\n      }\n\n      var title = cfg.title,\n          body = cfg.body,\n          footer = cfg.footer,\n          collapseExpand = cfg.collapseExpand,\n          children = cfg.children,\n          markerPosition = cfg.markerPosition;\n      var size = cfg.size || [100, 30];\n      var height = 0; // 统计容器总高度，动态设置\n\n      if (typeof size === 'number') size = [size, size];\n\n      var style = __assign({\n        radius: 2,\n        fill: '#fff'\n      }, cfg.style);\n\n      var color = style.stroke || cfg.color || '#5B8FF9';\n      var radius = style.radius; // node box\n\n      var shape = group.addShape('rect', {\n        attrs: __assign({\n          x: 0,\n          y: 0,\n          width: size[0],\n          height: size[1],\n          stroke: color\n        }, style),\n        name: 'main-box',\n        draggable: true\n      }); // node title\n\n      var titleTextShape;\n\n      if (title) {\n        var _b = getContentAndStyle(title),\n            text = _b.text,\n            _c = _b.style,\n            titleStyle = _c === void 0 ? cfg.titleStyle : _c;\n\n        titleTextShape = group.addShape('text', {\n          attrs: __assign(__assign({\n            textBaseline: 'top',\n            x: Margin,\n            y: cardTitlePadding,\n            text: text\n          }, defaultTitleLabelCfg), getConfig(titleStyle, group)),\n          name: 'title'\n        });\n      }\n\n      var titleHeight = (titleTextShape ? titleTextShape.getBBox() : {\n        height: size[1] / 2\n      }).height; // title rect\n\n      var titleRectShape = group.addShape('rect', {\n        attrs: {\n          x: 0,\n          y: 0,\n          width: size[0],\n          height: titleHeight + 2 * cardTitlePadding,\n          fill: color,\n          radius: [radius, radius, 0, 0]\n        },\n        name: 'title-rect',\n        draggable: true\n      });\n      titleTextShape === null || titleTextShape === void 0 ? void 0 : titleTextShape.toFront(); // collapse marker\n\n      var markerShape;\n\n      if (collapseExpand && children) {\n        markerShape = group.addShape('marker', {\n          attrs: __assign(__assign(__assign({}, getMarkerPosition(markerPosition, size)), {\n            r: 6,\n            cursor: 'pointer',\n            symbol: cfg.collapsed ? G6.Marker.expand : G6.Marker.collapse,\n            stroke: color,\n            lineWidth: 1,\n            fill: '#fff'\n          }), getConfig(cfg.markerStyle, group, __assign(__assign({}, cfg), {\n            name: 'collapse-icon'\n          }))),\n          name: 'collapse-icon'\n        });\n      }\n\n      var titleRectBoxHeight = titleRectShape.getBBox().height;\n      height += titleRectBoxHeight; // body\n\n      var bodyShape;\n\n      if (body) {\n        var _d = getContentAndStyle(body),\n            text = _d.text,\n            _e = _d.style,\n            bodyStyle = _e === void 0 ? cfg.bodyStyle : _e;\n\n        bodyShape = group.addShape('text', {\n          attrs: __assign(__assign({\n            textBaseline: 'top',\n            x: Margin,\n            y: height + Margin,\n            text: text\n          }, defaultLabelStyle), getConfig(bodyStyle, group)),\n          name: \"body\"\n        });\n        height += bodyShape.getBBox().height;\n      } // footer\n\n\n      var footerTextShape;\n\n      if (footer) {\n        if (bodyShape) {\n          height += Margin;\n        }\n\n        var _f = getContentAndStyle(footer),\n            labelText = _f.text,\n            _g = _f.style,\n            labelStyle = _g === void 0 ? cfg.footerStyle : _g;\n\n        footerTextShape = group.addShape('text', {\n          attrs: __assign(__assign({\n            textBaseline: 'top',\n            x: Margin,\n            y: height + Margin,\n            text: labelText\n          }, defaultLabelStyle), getConfig(labelStyle, group)),\n          name: \"footer-label\"\n        });\n\n        var _h = footerTextShape.getBBox(),\n            width = _h.width,\n            contentHeight = _h.height;\n\n        var footerValueHeight = 0;\n\n        if (typeof cfg.footer === 'object' && ((_a = cfg.footer) === null || _a === void 0 ? void 0 : _a.value)) {\n          var _j = getContentAndStyle({\n            content: cfg.footer.value,\n            style: cfg.footer.valueStyle\n          }),\n              valueText = _j.text,\n              _k = _j.style,\n              valueStyle = _k === void 0 ? cfg.footerValueStyle || cfg.footerStyle : _k;\n\n          var valueTextShape = group.addShape('text', {\n            attrs: __assign(__assign({\n              textBaseline: 'top',\n              x: width + Margin * 2,\n              y: height + Margin,\n              text: valueText\n            }, defaultLabelStyle), getConfig(valueStyle, group)),\n            name: \"footer-value\"\n          });\n          var valueHeight = valueTextShape.getBBox().height;\n          footerValueHeight = valueHeight;\n        }\n\n        height += Math.max(contentHeight, footerValueHeight);\n      } // 调整容器宽高\n\n\n      if (bodyShape) {\n        var desTextShapeBBox = bodyShape.getBBox();\n        var width = size[0] > desTextShapeBBox.width + 16 ? size[0] : desTextShapeBBox.width + 16;\n        shape.attr({\n          width: width,\n          height: height + 16\n        });\n        titleRectShape === null || titleRectShape === void 0 ? void 0 : titleRectShape.attr('width', width);\n        markerShape === null || markerShape === void 0 ? void 0 : markerShape.attr(__assign({}, getMarkerPosition(markerPosition, [width, height + titleHeight + 2 * cardTitlePadding])));\n      }\n\n      return shape;\n    },\n    update: undefined\n  }, 'single-node');\n};\nexport var registerIconNode = function () {\n  G6.registerNode('icon-node', {\n    options: {\n      size: [60, 20],\n      stroke: '#91d5ff',\n      fill: '#91d5ff'\n    },\n    draw: function (cfg, group) {\n      if (cfg === void 0) {\n        cfg = {};\n      } // @ts-ignore\n\n\n      var styles = this.getShapeStyle(cfg);\n      var _a = cfg.labelCfg,\n          labelCfg = _a === void 0 ? {} : _a,\n          labelStyle = cfg.labelStyle,\n          label = cfg.label,\n          markerStyle = cfg.markerStyle,\n          showMarker = cfg.showMarker,\n          title = cfg.title,\n          titleStyle = cfg.titleStyle;\n      var keyShape = group.addShape('rect', {\n        attrs: __assign(__assign({}, styles), {\n          x: 0,\n          y: 0\n        })\n      });\n      var keyShapeHeight = keyShape.getBBox().height;\n      var headShape;\n\n      if (cfg.leftIcon) {\n        var _b = cfg.leftIcon,\n            _c = _b.x,\n            x = _c === void 0 ? 8 : _c,\n            y = _b.y,\n            _d = _b.width,\n            width = _d === void 0 ? 24 : _d,\n            _e = _b.height,\n            height = _e === void 0 ? 24 : _e,\n            style = _b.style;\n\n        if (style) {\n          group.addShape('rect', {\n            attrs: __assign({\n              x: 1,\n              y: 1,\n              width: 38,\n              height: styles.height - 2\n            }, style)\n          });\n        }\n\n        headShape = group.addShape('image', {\n          attrs: {\n            x: x,\n            y: y || keyShapeHeight / 2 - height / 2,\n            width: width,\n            height: height,\n            img: cfg.leftIcon.img\n          },\n          name: 'image-shape'\n        });\n      }\n\n      if (showMarker) {\n        group.addShape('marker', {\n          attrs: __assign({\n            x: styles.width / 3,\n            y: styles.height + 6,\n            r: 6,\n            stroke: '#73d13d',\n            cursor: 'pointer',\n            symbol: G6.Marker.expand\n          }, getConfig(markerStyle, group, __assign(__assign({}, cfg), {\n            name: 'add-item'\n          }))),\n          name: 'add-item'\n        });\n        group.addShape('marker', {\n          attrs: __assign({\n            x: styles.width * 2 / 3,\n            y: styles.height + 6,\n            r: 6,\n            stroke: '#ff4d4f',\n            cursor: 'pointer',\n            symbol: G6.Marker.collapse\n          }, getConfig(markerStyle, group, __assign(__assign({}, cfg), {\n            name: 'remove-item'\n          }))),\n          name: 'remove-item'\n        });\n      }\n\n      if (label) {\n        var textCfg = labelStyle ? getConfig(labelStyle, group, cfg) : labelCfg.style;\n        var y = title ? styles.height / 2 - (textCfg.fontSize * 1 || 12) - Margin / 2 : styles.height / 2;\n        group.addShape('text', {\n          attrs: __assign({\n            text: label,\n            x: styles.width / 2,\n            y: y,\n            textAlign: headShape ? 'start' : 'center',\n            textBaseline: title ? 'top' : 'middle'\n          }, textCfg)\n        });\n      }\n\n      if (title) {\n        var titleCfg = titleStyle ? getConfig(titleStyle, group, cfg) : labelCfg.style;\n        group.addShape('text', {\n          attrs: __assign({\n            text: title,\n            x: styles.width / 2,\n            y: styles.height / 2 + Margin / 2,\n            textAlign: headShape ? 'start' : 'center',\n            textBaseline: 'top'\n          }, titleCfg)\n        });\n      }\n\n      return keyShape;\n    }\n  }, 'rect');\n};","map":null,"metadata":{},"sourceType":"module"}