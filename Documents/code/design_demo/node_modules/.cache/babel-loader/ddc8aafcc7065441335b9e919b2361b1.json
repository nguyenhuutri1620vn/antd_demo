{"ast":null,"code":"import React from 'react';\nimport { Empty, Spin } from 'antd';\nimport { SchemaForm } from './schema-form';\nimport { makeControlMap, xflowDefaultControls } from './schema-form/control-map/index';\nexport const PanelBody = props => {\n  const {\n    schema = {\n      tabs: []\n    },\n    triggerUpdate,\n    onFieldsChange,\n    afterUpdatingCb,\n    defaultControlRender,\n    loading,\n    controlMapService,\n    defaultControls = []\n  } = props;\n  const controlMapCache = React.useMemo(() => {\n    const controlMap = makeControlMap([...xflowDefaultControls, ...defaultControls]);\n\n    if (controlMapService) {\n      controlMapService(controlMap);\n    }\n\n    return controlMap;\n  }, [controlMapService, defaultControls]);\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: `${props.prefixClz}-body`,\n      style: Object.assign(Object.assign({}, props.style), {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      })\n    }, React.createElement(Spin, {\n      spinning: true\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: `${props.prefixClz}-body`,\n    style: props.style\n  }, schema.tabs.length > 0 && React.createElement(SchemaForm, {\n    schema: schema,\n    onFieldsChange: onFieldsChange,\n    controlMap: controlMapCache,\n    defaultControlRender: defaultControlRender,\n    afterUpdatingCb: afterUpdatingCb,\n    triggerUpdate: triggerUpdate\n  }), schema.tabs.length === 0 && React.createElement(Empty, {\n    style: {\n      paddingTop: '64px'\n    }\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}