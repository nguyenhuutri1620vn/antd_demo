{"ast":null,"code":"import { StringInput } from './string-input';\nimport { Checkbox } from './checkbox';\nimport { TextArea } from './text-area';\nimport { Select } from './select';\nimport { Datetime } from './datetime';\nimport { Float } from './float';\nimport { ControlShape } from '../../interface';\nexport const xflowDefaultControls = [[ControlShape.INPUT, StringInput], [ControlShape.CHECKBOX, Checkbox], [ControlShape.TEXTAREA, TextArea], [ControlShape.DATETIME, Datetime], [ControlShape.SELECT, Select], [ControlShape.FLOAT, Float]];\nexport const makeControlMap = controls => {\n  const controlMap = new Map();\n  controls.forEach(item => {\n    const [key, control] = item;\n    const uuid = key.toLowerCase();\n\n    if (controlMap.has(uuid)) {\n      console.error(`${key} is duplicated in controlMap:`, controlMap);\n    }\n\n    controlMap.set(uuid, control);\n  });\n  return controlMap;\n};\nexport const getControlFromMap = function (key, controlMap) {\n  let defaultControl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : StringInput;\n\n  if (controlMap.has(key)) {\n    return controlMap.get(key);\n  }\n\n  const uuid = key.toLowerCase();\n\n  if (controlMap.has(uuid)) {\n    return controlMap.get(uuid);\n  }\n\n  console.warn(`${key} is not exist in controlmap, fallback to defaultControl`);\n  return defaultControl;\n};","map":null,"metadata":{},"sourceType":"module"}