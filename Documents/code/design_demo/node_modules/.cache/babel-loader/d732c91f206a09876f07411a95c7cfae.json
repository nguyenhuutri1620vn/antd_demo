{"ast":null,"code":"// 类型检测\nexport var isType = function (value, type) {\n  var toString = {}.toString;\n  return toString.call(value) === \"[object \".concat(type, \"]\");\n};\nexport var isNumber = function (value) {\n  return isType(value, 'Number');\n}; // 创建节点路径\n\nexport var createPath = function (paths, offsetX, offsetY) {\n  if (offsetX === void 0) {\n    offsetX = 0;\n  }\n\n  if (offsetY === void 0) {\n    offsetY = 0;\n  }\n\n  if (!paths.length) {\n    return null;\n  }\n\n  var path = ''; // @ts-ignore\n\n  paths.forEach(function (item) {\n    var c = item[0],\n        x = item[1],\n        y = item[2],\n        c2x = item[3],\n        c2y = item[4];\n    path += isNumber(y) ? \" \".concat(c, \" \").concat(x + offsetX, \" \").concat(y + offsetY) : \" \".concat(c);\n\n    if (c2y) {\n      path += \" \".concat(c2x + offsetX, \" \").concat(c2y + offsetY);\n    }\n  });\n  return path;\n};","map":null,"metadata":{},"sourceType":"module"}