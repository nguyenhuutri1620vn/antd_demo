{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport ChartLoading from '../../utils/createLoading';\nimport ErrorBoundary from '../../errorBoundary';\nimport useGraph from '../../hooks/useGraphs';\nimport useProps from '../../hooks/useProps';\nimport { defaultStateStyles } from '../../constants';\nimport { registerOrganizationCardNode } from './customItem';\nregisterOrganizationCardNode();\nvar defaultNodeStyle = {\n  fill: '#91d5ff',\n  stroke: '#40a9ff',\n  radius: 2\n};\nvar defaultLayout = {\n  type: 'compactBox',\n  direction: 'TB',\n  getId: function getId(d) {\n    return d.id;\n  },\n  getHeight: function getHeight() {\n    return 16;\n  },\n  getWidth: function getWidth() {\n    return 16;\n  },\n  getVGap: function getVGap() {\n    return 40;\n  },\n  getHGap: function getHGap() {\n    return 70;\n  }\n};\nvar defaultProps = {\n  nodeCfg: {\n    type: 'organization-card',\n    size: [100, 44],\n    style: defaultNodeStyle,\n    padding: 6,\n    anchorPoints: [[0.5, 0], [0.5, 1]],\n    nodeStateStyles: defaultStateStyles,\n    label: {\n      style: function (cfg, group, type) {\n        var styles = {\n          icon: {\n            width: 32,\n            height: 32\n          },\n          value: {\n            fill: '#fff'\n          },\n          text: {\n            fill: '#000'\n          }\n        };\n        return type ? styles[type] : {};\n      }\n    }\n  },\n  edgeCfg: {\n    type: 'polyline',\n    endArrow: {\n      type: 'triangle',\n      fill: '#91d5ff'\n    },\n    edgeStateStyles: defaultStateStyles,\n    style: {\n      stroke: '#91d5ff'\n    }\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas'],\n  layout: defaultLayout,\n  animate: true,\n  markerPosition: 'right',\n  autoFit: true,\n  fitCenter: true,\n  style: {\n    position: 'relative',\n    height: 'inherit',\n    backgroundColor: '#fff'\n  }\n};\n\nvar OrganizationGraph = function (props) {\n  var uProps = useProps(props, defaultProps).uProps;\n\n  var className = uProps.className,\n      style = uProps.style,\n      loading = uProps.loading,\n      loadingTemplate = uProps.loadingTemplate,\n      errorTemplate = uProps.errorTemplate,\n      rest = __rest(uProps, [\"className\", \"style\", \"loading\", \"loadingTemplate\", \"errorTemplate\"]);\n\n  var container = useGraph('TreeGraph', rest, {\n    name: 'OrganizationGraph'\n  }).container;\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate\n  }), React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\n\nexport default OrganizationGraph;","map":null,"metadata":{},"sourceType":"module"}