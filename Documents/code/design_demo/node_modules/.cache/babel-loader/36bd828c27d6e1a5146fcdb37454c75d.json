{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { MapMouseEvent, MapTouchEvent, MapWheelEvent } from './events';\n\nvar MapEventHandler = function () {\n  function MapEventHandler(map, options) {\n    _classCallCheck(this, MapEventHandler);\n\n    _defineProperty(this, \"mousedownPos\", void 0);\n\n    _defineProperty(this, \"clickTolerance\", void 0);\n\n    _defineProperty(this, \"map\", void 0);\n\n    this.map = map;\n    this.clickTolerance = options.clickTolerance;\n  }\n\n  _createClass(MapEventHandler, [{\n    key: \"reset\",\n    value: function reset() {\n      delete this.mousedownPos;\n    }\n  }, {\n    key: \"wheel\",\n    value: function wheel(e) {\n      return this.firePreventable(new MapWheelEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"mousedown\",\n    value: function mousedown(e, point) {\n      this.mousedownPos = point;\n      return this.firePreventable(new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"mouseup\",\n    value: function mouseup(e) {\n      this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"click\",\n    value: function click(e, point) {\n      if (this.mousedownPos && this.mousedownPos.dist(point) >= this.clickTolerance) {\n        return;\n      }\n\n      this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"dblclick\",\n    value: function dblclick(e) {\n      return this.firePreventable(new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"mouseover\",\n    value: function mouseover(e) {\n      this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"mouseout\",\n    value: function mouseout(e) {\n      this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"touchstart\",\n    value: function touchstart(e) {\n      return this.firePreventable(new MapTouchEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"touchmove\",\n    value: function touchmove(e) {\n      this.map.emit(e.type, new MapTouchEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"touchend\",\n    value: function touchend(e) {\n      this.map.emit(e.type, new MapTouchEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"touchcancel\",\n    value: function touchcancel(e) {\n      this.map.emit(e.type, new MapTouchEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"firePreventable\",\n    value: function firePreventable(mapEvent) {\n      this.map.emit(mapEvent.type, mapEvent);\n\n      if (mapEvent.defaultPrevented) {\n        return {};\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return true;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return false;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      return false;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      return false;\n    }\n  }]);\n\n  return MapEventHandler;\n}();\n\nexport { MapEventHandler as default };","map":null,"metadata":{},"sourceType":"module"}