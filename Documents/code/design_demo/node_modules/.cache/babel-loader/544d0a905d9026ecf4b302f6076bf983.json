{"ast":null,"code":"import React from 'react';\nimport { XFlowConstants } from '@antv/xflow-core';\nimport { Popover } from 'antd';\nexport const renderNode = props => {\n  const {\n    nodeConfig,\n    onMouseDown,\n    graphConfig,\n    modelService,\n    commandService\n  } = props;\n\n  if (!graphConfig) {\n    return React.createElement(\"div\", null);\n  }\n\n  if (nodeConfig.renderComponent) {\n    return React.createElement(\"div\", {\n      onMouseDown: onMouseDown\n    }, React.createElement(nodeConfig.renderComponent, {\n      data: nodeConfig,\n      isNodePanel: true\n    }));\n  }\n\n  const renderKey = graphConfig.nodeTypeParser(nodeConfig) || XFlowConstants.XFLOW_DEFAULT_NODE;\n  const reactComponent = graphConfig.nodeRender.get(renderKey);\n  return React.createElement(\"div\", {\n    onMouseDown: onMouseDown\n  }, React.createElement(reactComponent, {\n    commandService,\n    modelService,\n    data: nodeConfig,\n    isNodeTreePanel: true\n  }));\n};\nexport const PanelNode = props => {\n  const [isVisible, setVisible] = React.useState(false);\n  const {\n    prefixClz,\n    graphConfig,\n    commandService,\n    modelService,\n    popoverContent,\n    onMouseDown,\n    item\n  } = props;\n  return React.createElement(React.Fragment, null, popoverContent ? React.createElement(Popover, {\n    placement: \"right\",\n    destroyTooltipOnHide: true,\n    content: popoverContent,\n    visible: isVisible,\n    onVisibleChange: val => {\n      setVisible(val);\n    }\n  }, React.createElement(\"div\", {\n    className: `${prefixClz}-node-wrapper`,\n    onMouseEnter: () => {\n      setVisible(true);\n    }\n  }, renderNode({\n    graphConfig,\n    commandService: commandService,\n    onMouseDown,\n    modelService,\n    nodeConfig: item\n  }))) : React.createElement(\"div\", {\n    className: `${prefixClz}-node-wrapper`\n  }, renderNode({\n    graphConfig,\n    commandService: commandService,\n    onMouseDown,\n    modelService,\n    nodeConfig: item\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}