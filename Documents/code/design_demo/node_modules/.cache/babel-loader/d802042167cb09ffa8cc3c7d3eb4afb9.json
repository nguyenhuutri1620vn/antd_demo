{"ast":null,"code":"import { PriorityQueue } from './priorityqueue';\nexport var Dijkstra;\n\n(function (Dijkstra) {\n  function run(adjacencyList, source) {\n    let weight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (u, v) => 1;\n    const dist = {};\n    const previous = {};\n    const scanned = {};\n    const queue = new PriorityQueue();\n    dist[source] = 0;\n    Object.keys(adjacencyList).forEach(v => {\n      if (v !== source) {\n        dist[v] = Infinity;\n      }\n\n      queue.insert(dist[v], v, v);\n    });\n\n    while (!queue.isEmpty()) {\n      const u = queue.remove();\n      scanned[u] = true;\n      const neighbours = adjacencyList[u] || [];\n\n      for (let i = 0; i < neighbours.length; i += 1) {\n        const v = neighbours[i];\n\n        if (!scanned[v]) {\n          const alt = dist[u] + weight(u, v);\n\n          if (alt < dist[v]) {\n            dist[v] = alt;\n            previous[v] = u;\n            queue.updatePriority(v, alt);\n          }\n        }\n      }\n    }\n\n    return previous;\n  }\n\n  Dijkstra.run = run;\n})(Dijkstra || (Dijkstra = {}));","map":null,"metadata":{},"sourceType":"module"}