{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Action, Util } from '@antv/g2';\nimport { each, get } from '@antv/util';\nimport { renderStatistic } from '../../../../utils/statistic';\nimport { getCurrentElement } from '../util';\n/**\n * Pie 中心文本事件的 Action\n */\n\nvar StatisticAction =\n/** @class */\nfunction (_super) {\n  __extends(StatisticAction, _super);\n\n  function StatisticAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StatisticAction.prototype.getAnnotations = function (_view) {\n    var view = _view || this.context.view; // @ts-ignore\n\n    return view.getController('annotation').option;\n  };\n\n  StatisticAction.prototype.getInitialAnnotation = function () {\n    return this.initialAnnotation;\n  };\n\n  StatisticAction.prototype.init = function () {\n    var _this = this;\n\n    var view = this.context.view;\n    view.removeInteraction('tooltip');\n    view.on('afterchangesize', function () {\n      var annotations = _this.getAnnotations(view);\n\n      _this.initialAnnotation = annotations;\n    });\n  };\n\n  StatisticAction.prototype.change = function (arg) {\n    var _a = this.context,\n        view = _a.view,\n        event = _a.event;\n\n    if (!this.initialAnnotation) {\n      this.initialAnnotation = this.getAnnotations();\n    }\n\n    var data = get(event, ['data', 'data']);\n\n    if (event.type.match('legend-item')) {\n      var delegateObject = Util.getDelegationObject(this.context); // @ts-ignore\n\n      var colorField_1 = view.getGroupedFields()[0];\n\n      if (delegateObject && colorField_1) {\n        var item_1 = delegateObject.item;\n        data = view.getData().find(function (d) {\n          return d[colorField_1] === item_1.value;\n        });\n      }\n    }\n\n    if (data) {\n      var annotations = get(arg, 'annotations', []);\n      var statistic = get(arg, 'statistic', {}); // 先清空标注，再重新渲染\n\n      view.getController('annotation').clear(true); // 先进行其他 annotations，再去渲染统计文本\n\n      each(annotations, function (annotation) {\n        if (typeof annotation === 'object') {\n          view.annotation()[annotation.type](annotation);\n        }\n      });\n      renderStatistic(view, {\n        statistic: statistic,\n        plotType: 'pie'\n      }, data);\n      view.render(true);\n    } // 交互的时候，把 shape 提前\n\n\n    var ele = getCurrentElement(this.context);\n\n    if (ele) {\n      ele.shape.toFront();\n    }\n  };\n\n  StatisticAction.prototype.reset = function () {\n    var view = this.context.view;\n    var annotationController = view.getController('annotation');\n    annotationController.clear(true);\n    var initialStatistic = this.getInitialAnnotation();\n    each(initialStatistic, function (a) {\n      view.annotation()[a.type](a);\n    });\n    view.render(true);\n  };\n\n  return StatisticAction;\n}(Action);\n\nexport { StatisticAction };","map":null,"metadata":{},"sourceType":"module"}