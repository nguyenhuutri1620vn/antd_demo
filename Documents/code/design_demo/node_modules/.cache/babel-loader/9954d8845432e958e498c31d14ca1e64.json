{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Node } from '../model/node';\nimport { ObjectExt } from '../util';\nexport class Base extends Node {\n  get label() {\n    return this.getLabel();\n  }\n\n  set label(val) {\n    this.setLabel(val);\n  }\n\n  getLabel() {\n    return this.getAttrByPath('text/text');\n  }\n\n  setLabel(label, options) {\n    if (label == null) {\n      this.removeLabel();\n    } else {\n      this.setAttrByPath('text/text', label, options);\n    }\n\n    return this;\n  }\n\n  removeLabel() {\n    this.removeAttrByPath('text/text');\n    return this;\n  }\n\n}\n\n(function (Base) {\n  Base.bodyAttr = {\n    fill: '#ffffff',\n    stroke: '#333333',\n    strokeWidth: 2\n  };\n  Base.labelAttr = {\n    fontSize: 14,\n    fill: '#000000',\n    refX: 0.5,\n    refY: 0.5,\n    textAnchor: 'middle',\n    textVerticalAnchor: 'middle',\n    fontFamily: 'Arial, helvetica, sans-serif'\n  };\n  Base.config({\n    attrs: {\n      text: Object.assign({}, Base.labelAttr)\n    },\n\n    propHooks(metadata) {\n      const {\n        label\n      } = metadata,\n            others = __rest(metadata, [\"label\"]);\n\n      if (label) {\n        ObjectExt.setByPath(others, 'attrs/text/text', label);\n      }\n\n      return others;\n    }\n\n  });\n})(Base || (Base = {}));","map":null,"metadata":{},"sourceType":"module"}