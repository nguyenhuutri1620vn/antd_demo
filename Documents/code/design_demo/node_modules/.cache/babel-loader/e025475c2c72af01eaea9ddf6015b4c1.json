{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from 'react';\nimport { Input } from 'antd';\nimport { usePanelContext } from '@antv/xflow';\nexport var NodePanelHeader = function (props) {\n  var prefixClz = props.prefixClz,\n      onKeywordChange = props.onKeywordChange;\n  var propsProxy = usePanelContext().propsProxy;\n  var panelProps = propsProxy.getValue();\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"\".concat(prefixClz, \"-header\"),\n    style: __assign({\n      zIndex: 1\n    }, props.style)\n  }, panelProps.header && React.isValidElement(panelProps.header) && panelProps.header, panelProps.searchService && React.createElement(\"div\", {\n    className: \"\".concat(prefixClz, \"-header-search\")\n  }, React.createElement(Input, {\n    placeholder: \"\\u641C\\u7D22\\u7EC4\\u4EF6\",\n    allowClear: true,\n    onChange: function (e) {\n      return onKeywordChange(e.target.value);\n    },\n    style: {\n      width: '100%',\n      border: 0\n    }\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}