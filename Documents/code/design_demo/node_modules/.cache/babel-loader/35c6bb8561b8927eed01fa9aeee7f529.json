{"ast":null,"code":"import { filter, isNil, isNumber } from '@antv/util';\nimport extended from '../util/extended';\n/**\n * 计算分类 ticks\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\n\nexport default function calculateCatTicks(cfg) {\n  var values = cfg.values,\n      tickInterval = cfg.tickInterval,\n      tickCount = cfg.tickCount;\n  var ticks = values;\n\n  if (isNumber(tickInterval)) {\n    return filter(ticks, function (__, i) {\n      return i % tickInterval === 0;\n    });\n  }\n\n  var min = cfg.min,\n      max = cfg.max;\n\n  if (isNil(min)) {\n    min = 0;\n  }\n\n  if (isNil(max)) {\n    max = values.length - 1;\n  }\n\n  if (isNumber(tickCount) && tickCount < max - min) {\n    // 简单过滤，部分情况下小数的倍数也可以是整数\n    // tslint:disable-next-line: no-shadowed-variable\n    var ticks_1 = extended(min, max, tickCount, false, [1, 2, 5, 3, 4, 7, 6, 8, 9]).ticks;\n    var valid = filter(ticks_1, function (tick) {\n      return tick >= min && tick <= max;\n    });\n    return valid.map(function (index) {\n      return values[index];\n    });\n  }\n\n  return values.slice(min, max + 1);\n}","map":null,"metadata":{},"sourceType":"module"}