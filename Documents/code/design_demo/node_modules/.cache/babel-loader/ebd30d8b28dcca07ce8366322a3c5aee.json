{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Heatmap = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar util_1 = require(\"@antv/util\");\n\nvar plot_1 = require(\"../../core/plot\");\n\nvar constants_1 = require(\"./constants\");\n\nvar heatmap_layer_1 = require(\"../../layers/heatmap-layer\");\n\nvar layer_group_1 = require(\"../../core/layer/layer-group\");\n\nvar Heatmap =\n/** @class */\nfunction (_super) {\n  (0, tslib_1.__extends)(Heatmap, _super);\n\n  function Heatmap() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * 地图类型\n     */\n\n\n    _this.type = plot_1.Plot.PlotType.Heatmap;\n    return _this;\n  }\n  /**\n   * 获取默认配置\n   */\n\n\n  Heatmap.prototype.getDefaultOptions = function () {\n    return Heatmap.DefaultOptions;\n  };\n  /**\n   * 创建图层\n   */\n\n\n  Heatmap.prototype.createLayers = function (source) {\n    this.heatmapLayer = new heatmap_layer_1.HeatmapLayer((0, tslib_1.__assign)({\n      source: source\n    }, (0, util_1.pick)(this.options, heatmap_layer_1.HeatmapLayer.LayerOptionsKeys)));\n    var layerGroup = new layer_group_1.LayerGroup([this.heatmapLayer]);\n\n    if (this.options.label) {\n      this.labelLayer = this.createLabelLayer(this.source, this.options.label, this.options);\n      layerGroup.addLayer(this.labelLayer);\n    }\n\n    return layerGroup;\n  };\n  /**\n   * 更新图层\n   */\n\n\n  Heatmap.prototype.updateLayers = function (options) {\n    var heatMapLayerConfig = (0, util_1.pick)(options, heatmap_layer_1.HeatmapLayer.LayerOptionsKeys);\n    this.heatmapLayer.update(heatMapLayerConfig);\n    this.updateLabelLayer(this.source, options.label, this.options, this.labelLayer);\n  };\n  /**\n   * 实现 legend 配置项\n   */\n\n\n  Heatmap.prototype.getLegendOptions = function () {\n    var _a;\n\n    var sizeLegendItems = this.heatmapLayer.layer.getLegendItems('size');\n\n    if (Array.isArray(sizeLegendItems) && sizeLegendItems.length !== 0) {\n      var min = sizeLegendItems[0].value;\n      var max = sizeLegendItems[sizeLegendItems.length - 1].value;\n      var colors = (_a = this.heatmapLayer.options.style) === null || _a === void 0 ? void 0 : _a.colorsRamp.map(function (_a) {\n        var color = _a.color;\n        return color;\n      });\n      return {\n        type: 'continue',\n        min: min,\n        max: max,\n        colors: colors\n      };\n    }\n\n    return {};\n  };\n  /**\n   * 默认配置项\n   */\n\n\n  Heatmap.DefaultOptions = constants_1.DEFAULT_OPTIONS;\n  return Heatmap;\n}(plot_1.Plot);\n\nexports.Heatmap = Heatmap;","map":null,"metadata":{},"sourceType":"script"}