{"ast":null,"code":"export { ManaSyringe } from '@antv/xflow-core';\n/** XFlow 基础 interface */\n\nexport { NsGraph } from '@antv/xflow-core';\n/*******************************************************\n * 核心组件：\n * 1. Application：XFlow\n * 2. Application Extension：XFlowAppExtensionMoudle\n * 3. Graph：XFlowCanvas\n *****************************************************/\n\nexport { // 组件\nXFlow, XFlowCanvas, XFlowAppExtensionMoudle, // app context\nXFlowAppProvider, XFlowAppContext, useXFlowApp, // config provider context：使用全局Config\nuseXflowPrefixCls, XFlowConfigProviderContext, // extension context: 注册扩展\nExtensionRegistryContext, useExtensionRegistry } from '@antv/xflow-core';\n/** graphProvider：注入Graph时 需要 */\n\nexport { IGraphProvider, createGraphConfig } from '@antv/xflow-core';\n/** app：用于extension扩展*/\n\nexport { IApplication, IApplicationContribution } from '@antv/xflow-core';\n/** Command Service */\n\nexport { ICommandHandler, IGraphCommandService, ICommandContextProvider, IGraphCommandContribution, IGraphCommandFactory, GraphCommandRegistry, commandRegistryModule } from '@antv/xflow-core';\n/** Command 常量 */\n\nexport { XFlowNodeCommands, XFlowEdgeCommands, XFlowGroupCommands, XFlowGraphCommands, XFlowModelCommands,\n/** 创建 Command hook config */\ncreateCmdConfig } from '@antv/xflow-core';\n/** React Node Context */\n\nexport { AppContext, useAppContext, getNodeReactComponent } from '@antv/xflow-core';\n/*******************************************************\n *  XFlow Hooks： 钩子函数\n *****************************************************/\n\nexport { // 扩展Hooks\nIHookService, IHookContribution, // 创建 React config hook\ncreateHookConfig } from '@antv/xflow-core';\n/*******************************************************\n *  Model Service：全局状态\n *****************************************************/\n\nexport { MODELS, IModelService, IModelContribution, createModelServiceConfig } from '@antv/xflow-core';\nexport { RxModel, NsModel } from '@antv/xflow-core';\nexport { useModel, createComponentModel, useModelAsync, useIsMountedRef } from '@antv/xflow-core';\n/*******************************************************\n *  Toolbar：工具栏\n *****************************************************/\n\n/** Toolbar 配置 */\n\nexport { // component\nToolbarRegistry, // ioc 扩展\nIToolbarService, IToolbarContribution } from '@antv/xflow-core';\n/*******************************************************\n *  Menu：菜单\n *****************************************************/\n\n/** Menu 配置 */\n\nexport { // 扩展 Service\nIMenuService, IMenuContribution, // menu item\nMenuItemType, // Component\nMenuRegistry } from '@antv/xflow-core';\n/*******************************************************\n *  KeyBindings：快捷键\n *****************************************************/\n\n/** KeyBindings 配置 */\n\nexport { KeyBindings, createKeybindingConfig, KeybindingConfig, IKeyBindingContribution } from '@antv/xflow-core';\n/*******************************************************\n *  UTILS：工具方法\n *****************************************************/\n\n/** utils：dispose */\n\nexport { Disposable, DisposableCollection } from '@antv/xflow-core';\n/** utils：defer 延迟 */\n\nexport { Deferred } from '@antv/xflow-core';\n/** utils：延迟 */\n\nexport { delay } from '@antv/xflow-core';\n/** utils：uuid */\n\nexport { uuidv4 } from '@antv/xflow-core';\n/** utils：绝对定位 */\n\nexport { usePositionStyle } from '@antv/xflow-core';\n/** utils：insertCss */\n\nexport { insertCss, isReactComponent } from '@antv/xflow-core';\n/*******************************************************\n * Icon：Antd Icon\n *****************************************************/\n\n/** ICON */\n\nexport { IconStore } from '@antv/xflow-core';\n/** 全局常量 */\n\nexport { XFlowConstants } from '@antv/xflow-core';","map":null,"metadata":{},"sourceType":"module"}