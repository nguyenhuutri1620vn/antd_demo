{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { MarkerSymbols } from '../../../util/marker';\nimport { getStyle } from '../util/get-style';\nexport var SHAPES = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'];\nexport var HOLLOW_SHAPES = ['cross', 'tick', 'plus', 'hyphen', 'line'];\n/**\n * @ignore\n * Draws points\n * @param shape\n * @param cfg\n * @param container\n * @param shapeName\n * @param isStroke\n * @returns points\n */\n\nexport function drawPoints(shape, cfg, container, shapeName, isStroke) {\n  var style = getStyle(cfg, isStroke, !isStroke, 'r');\n  var points = shape.parsePoints(cfg.points);\n  var pointPosition = points[0];\n\n  if (cfg.isStack) {\n    pointPosition = points[1];\n  } else if (points.length > 1) {\n    var group = container.addGroup();\n\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n      var point = points_1[_i];\n      group.addShape({\n        type: 'marker',\n        attrs: __assign(__assign(__assign({}, style), {\n          symbol: MarkerSymbols[shapeName] || shapeName\n        }), point)\n      });\n    }\n\n    return group;\n  }\n\n  return container.addShape({\n    type: 'marker',\n    attrs: __assign(__assign(__assign({}, style), {\n      symbol: MarkerSymbols[shapeName] || shapeName\n    }), pointPosition)\n  });\n}","map":null,"metadata":{},"sourceType":"module"}