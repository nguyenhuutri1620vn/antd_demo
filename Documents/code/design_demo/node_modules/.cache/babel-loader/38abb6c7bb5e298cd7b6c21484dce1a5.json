{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _dec, _class;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { isMini } from '@antv/l7-utils';\nimport { injectable } from 'inversify';\nimport regl from 'l7regl';\nimport 'reflect-metadata';\nimport ReglAttribute from './ReglAttribute';\nimport ReglBuffer from './ReglBuffer';\nimport ReglElements from './ReglElements';\nimport ReglFramebuffer from './ReglFramebuffer';\nimport ReglModel from './ReglModel';\nimport ReglTexture2D from './ReglTexture2D';\nvar ReglRendererService = (_dec = injectable(), _dec(_class = function () {\n  function ReglRendererService() {\n    var _this = this;\n\n    _classCallCheck(this, ReglRendererService);\n\n    _defineProperty(this, \"extensionObject\", void 0);\n\n    _defineProperty(this, \"gl\", void 0);\n\n    _defineProperty(this, \"$container\", void 0);\n\n    _defineProperty(this, \"canvas\", void 0);\n\n    _defineProperty(this, \"width\", void 0);\n\n    _defineProperty(this, \"height\", void 0);\n\n    _defineProperty(this, \"isDirty\", void 0);\n\n    _defineProperty(this, \"createModel\", function (options) {\n      return new ReglModel(_this.gl, options);\n    });\n\n    _defineProperty(this, \"createAttribute\", function (options) {\n      return new ReglAttribute(_this.gl, options);\n    });\n\n    _defineProperty(this, \"createBuffer\", function (options) {\n      return new ReglBuffer(_this.gl, options);\n    });\n\n    _defineProperty(this, \"createElements\", function (options) {\n      return new ReglElements(_this.gl, options);\n    });\n\n    _defineProperty(this, \"createTexture2D\", function (options) {\n      return new ReglTexture2D(_this.gl, options);\n    });\n\n    _defineProperty(this, \"createFramebuffer\", function (options) {\n      return new ReglFramebuffer(_this.gl, options);\n    });\n\n    _defineProperty(this, \"useFramebuffer\", function (framebuffer, drawCommands) {\n      _this.gl({\n        framebuffer: framebuffer ? framebuffer.get() : null\n      })(drawCommands);\n    });\n\n    _defineProperty(this, \"clear\", function (options) {\n      var color = options.color,\n          depth = options.depth,\n          stencil = options.stencil,\n          _options$framebuffer = options.framebuffer,\n          framebuffer = _options$framebuffer === void 0 ? null : _options$framebuffer;\n      var reglClearOptions = {\n        color: color,\n        depth: depth,\n        stencil: stencil\n      };\n      reglClearOptions.framebuffer = framebuffer === null ? framebuffer : framebuffer.get();\n\n      _this.gl.clear(reglClearOptions);\n    });\n\n    _defineProperty(this, \"viewport\", function (_ref) {\n      var x = _ref.x,\n          y = _ref.y,\n          width = _ref.width,\n          height = _ref.height;\n\n      _this.gl._gl.viewport(x, y, width, height);\n\n      _this.width = width;\n      _this.height = height;\n\n      _this.gl._refresh();\n    });\n\n    _defineProperty(this, \"readPixels\", function (options) {\n      var framebuffer = options.framebuffer,\n          x = options.x,\n          y = options.y,\n          width = options.width,\n          height = options.height;\n      var readPixelsOptions = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n\n      if (framebuffer) {\n        readPixelsOptions.framebuffer = framebuffer.get();\n      }\n\n      return _this.gl.read(readPixelsOptions);\n    });\n\n    _defineProperty(this, \"getViewportSize\", function () {\n      return {\n        width: _this.gl._gl.drawingBufferWidth,\n        height: _this.gl._gl.drawingBufferHeight\n      };\n    });\n\n    _defineProperty(this, \"getContainer\", function () {\n      if (isMini) {\n        return _this.canvas;\n      } else {\n        var _this$canvas;\n\n        return (_this$canvas = _this.canvas) === null || _this$canvas === void 0 ? void 0 : _this$canvas.parentElement;\n      }\n    });\n\n    _defineProperty(this, \"getCanvas\", function () {\n      return _this.canvas;\n    });\n\n    _defineProperty(this, \"getGLContext\", function () {\n      return _this.gl._gl;\n    });\n\n    _defineProperty(this, \"destroy\", function () {\n      _this.gl.destroy();\n    });\n  }\n\n  _createClass(ReglRendererService, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(canvas, cfg) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.canvas = canvas;\n                _context.next = 3;\n                return new Promise(function (resolve, reject) {\n                  regl({\n                    canvas: _this2.canvas,\n                    attributes: {\n                      alpha: true,\n                      antialias: cfg.antialias,\n                      premultipliedAlpha: true,\n                      preserveDrawingBuffer: cfg.preserveDrawingBuffer,\n                      stencil: cfg.stencil\n                    },\n                    extensions: ['OES_element_index_uint', 'OES_standard_derivatives', 'ANGLE_instanced_arrays'],\n                    optionalExtensions: ['oes_texture_float_linear', 'OES_texture_float', 'EXT_texture_filter_anisotropic', 'EXT_blend_minmax', 'WEBGL_depth_texture'],\n                    profile: true,\n                    onDone: function onDone(err, r) {\n                      if (err || !r) {\n                        reject(err);\n                      }\n\n                      resolve(r);\n                    }\n                  });\n                });\n\n              case 3:\n                this.gl = _context.sent;\n                this.extensionObject = {\n                  OES_texture_float: this.testExtension('OES_texture_float')\n                };\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init(_x, _x2) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"getPointSizeRange\",\n    value: function getPointSizeRange() {\n      return this.gl._gl.getParameter(this.gl._gl.ALIASED_POINT_SIZE_RANGE);\n    }\n  }, {\n    key: \"testExtension\",\n    value: function testExtension(name) {\n      return !!this.getGLContext().getExtension(name);\n    }\n  }, {\n    key: \"setState\",\n    value: function setState() {\n      this.gl({\n        cull: {\n          enable: false,\n          face: 'back'\n        },\n        viewport: {\n          x: 0,\n          y: 0,\n          height: this.width,\n          width: this.height\n        },\n        blend: {\n          enable: true,\n          equation: 'add'\n        },\n        framebuffer: null\n      });\n\n      this.gl._refresh();\n    }\n  }, {\n    key: \"setBaseState\",\n    value: function setBaseState() {\n      this.gl({\n        cull: {\n          enable: false,\n          face: 'back'\n        },\n        viewport: {\n          x: 0,\n          y: 0,\n          height: this.width,\n          width: this.height\n        },\n        blend: {\n          enable: false,\n          equation: 'add'\n        },\n        framebuffer: null\n      });\n\n      this.gl._refresh();\n    }\n  }, {\n    key: \"setCustomLayerDefaults\",\n    value: function setCustomLayerDefaults() {\n      var gl = this.getGLContext();\n      gl.disable(gl.CULL_FACE);\n    }\n  }, {\n    key: \"setDirty\",\n    value: function setDirty(flag) {\n      this.isDirty = flag;\n    }\n  }, {\n    key: \"getDirty\",\n    value: function getDirty() {\n      return this.isDirty;\n    }\n  }]);\n\n  return ReglRendererService;\n}()) || _class);\nexport { ReglRendererService as default };","map":null,"metadata":{},"sourceType":"module"}