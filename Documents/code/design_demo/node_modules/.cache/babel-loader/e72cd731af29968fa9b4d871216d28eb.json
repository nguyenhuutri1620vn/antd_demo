{"ast":null,"code":"import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { InputNumber as AInputNumber } from 'antd';\n\nfunction transformValue(val) {\n  var result = Number(val);\n  return Number.isNaN(result) ? undefined : result;\n}\n\nexport var InputNumber = function (props) {\n  var disabled = props.disabled,\n      placeholder = props.placeholder,\n      value = props.value,\n      onChange = props.onChange;\n\n  var _a = useState(transformValue(value)),\n      innerValue = _a[0],\n      setInnerValue = _a[1];\n\n  var mountedRef = useRef(false);\n  useEffect(function () {\n    if (!mountedRef.current) {\n      mountedRef.current = true;\n    }\n\n    setInnerValue(transformValue(value));\n  }, [value]);\n  var onValueChange = useCallback(function (nextValue) {\n    setInnerValue(nextValue);\n\n    if (typeof onChange === 'function') {\n      if (nextValue === undefined) {\n        onChange('');\n      } else if (typeof transformValue(nextValue) === 'number') {\n        onChange(transformValue(nextValue));\n      }\n    }\n  }, [onChange]);\n  return React.createElement(AInputNumber, {\n    style: {\n      width: '100%'\n    },\n    size: \"small\",\n    placeholder: placeholder,\n    value: innerValue,\n    onChange: onValueChange,\n    disabled: disabled\n  });\n};","map":null,"metadata":{},"sourceType":"module"}