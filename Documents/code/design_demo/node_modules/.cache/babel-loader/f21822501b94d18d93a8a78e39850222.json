{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { BRUSH_FILTER_EVENTS, VIEW_LIFE_CIRCLE } from '@antv/g2';\nimport { Plot } from '../../core/plot';\nimport { deepAssign } from '../../utils';\nimport { adaptor, transformOptions, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nimport './interactions';\n\nvar Scatter =\n/** @class */\nfunction (_super) {\n  __extends(Scatter, _super);\n\n  function Scatter(container, options) {\n    var _this = _super.call(this, container, options) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'scatter'; // 监听 brush 事件，处理 meta\n\n    _this.on(VIEW_LIFE_CIRCLE.BEFORE_RENDER, function (evt) {\n      var _a, _b; // 运行时，读取 option\n\n\n      var _c = _this,\n          options = _c.options,\n          chart = _c.chart;\n\n      if (((_a = evt.data) === null || _a === void 0 ? void 0 : _a.source) === BRUSH_FILTER_EVENTS.FILTER) {\n        var filteredData = _this.chart.filterData(_this.chart.getData());\n\n        meta({\n          chart: chart,\n          options: __assign(__assign({}, options), {\n            data: filteredData\n          })\n        });\n      }\n\n      if (((_b = evt.data) === null || _b === void 0 ? void 0 : _b.source) === BRUSH_FILTER_EVENTS.RESET) {\n        meta({\n          chart: chart,\n          options: options\n        });\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * 获取 散点图 默认配置项\n   * 供外部使用\n   */\n\n\n  Scatter.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   * @param data\n   */\n\n\n  Scatter.prototype.changeData = function (data) {\n    this.updateOption(transformOptions(deepAssign({}, this.options, {\n      data: data\n    })));\n\n    var _a = this,\n        options = _a.options,\n        chart = _a.chart;\n\n    meta({\n      chart: chart,\n      options: options\n    });\n    this.chart.changeData(data);\n  };\n  /**\n   * 获取 散点图 的适配器\n   */\n\n\n  Scatter.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  Scatter.prototype.getDefaultOptions = function () {\n    return Scatter.getDefaultOptions();\n  };\n\n  return Scatter;\n}(Plot);\n\nexport { Scatter };","map":null,"metadata":{},"sourceType":"module"}