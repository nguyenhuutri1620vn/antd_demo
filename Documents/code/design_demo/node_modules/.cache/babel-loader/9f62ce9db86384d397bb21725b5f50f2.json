{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nexport var NsUndoCmd;\n\n(function (NsUndoCmd) {\n  /** Command Id: 用于注册named factory */\n  NsUndoCmd.command = XFlowGraphCommands.UNDO_CMD;\n  /** hookName */\n\n  NsUndoCmd.hookKey = 'undoCommand';\n})(NsUndoCmd || (NsUndoCmd = {}));\n\nlet GraphUndoCommand =\n/** 创建节点命令 */\nclass GraphUndoCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.ctx;\n      const {\n        args,\n        hooks: runtimeHook\n      } = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      yield hooks.undoCommand.call(\n      /** 执行hooks pipeline处理args */\n      args,\n      /** 执行 callback */\n      () => __awaiter(this, void 0, void 0, function* () {\n        const cmds = ctx.getCommands();\n\n        if (cmds.isUndoable) {\n          cmds.undoCommand();\n        }\n        /** 设置结果 */\n\n\n        this.ctx.addUndo(Disposable.create(() => {\n          cmds.redoCommand();\n        }));\n        return {};\n      }),\n      /** 外部的 hook */\n      runtimeHook);\n      return this;\n    });\n    /** undo cmd */\n\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    /** redo cmd */\n\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  /** isUndoable */\n\n\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphUndoCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], GraphUndoCommand.prototype, \"init\", null);\n\nGraphUndoCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsUndoCmd.command.id\n  }\n})\n/** 创建节点命令 */\n], GraphUndoCommand);\nexport { GraphUndoCommand };","map":null,"metadata":{},"sourceType":"module"}