{"ast":null,"code":"import React, { useState, useMemo } from 'react';\nimport { Form } from 'antd';\nimport { makeUpdaterByDependencies, makeFormItemControlledProps, isEmptyParamValue } from './util';\nexport const FormItemWrapper = props => {\n  const {\n    schema,\n    children\n  } = props;\n  const [updateReasonField, setUpdateReasonField] = useState();\n  const {\n    dependencies,\n    value,\n    defaultValue,\n    hidden,\n    disabled\n  } = schema;\n  const updater = useMemo(() => {\n    return (dependencies === null || dependencies === void 0 ? void 0 : dependencies.length) ? makeUpdaterByDependencies(dependencies, setUpdateReasonField) : undefined;\n  }, [dependencies]);\n\n  if (typeof children !== 'function') {\n    throw new Error('[Schema Form]: chilren of FormItemWrapper should be a render prop.');\n  }\n\n  const initValue = isEmptyParamValue(value) ? defaultValue : value;\n\n  if (updater) {\n    return React.createElement(Form.Item, {\n      noStyle: true,\n      shouldUpdate: updater\n    }, form => {\n      const {\n        hidden: isHidden,\n        disabled: isDisabled\n      } = makeFormItemControlledProps(form, schema, updateReasonField);\n      return children({\n        hidden: isHidden,\n        disabled: isDisabled,\n        initialValue: initValue\n      });\n    });\n  }\n\n  return children({\n    hidden,\n    disabled,\n    initialValue: initValue\n  });\n};","map":null,"metadata":{},"sourceType":"module"}