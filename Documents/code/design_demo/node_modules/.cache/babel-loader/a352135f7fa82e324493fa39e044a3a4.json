{"ast":null,"code":"import React from 'react';\nimport classnames from 'classnames';\nimport addEventListener from 'rc-util/lib/Dom/addEventListener';\nimport { MenubarItem } from './item';\nimport { MenubarContext } from './context';\nexport class Menubar extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onDocumentClick = () => {\n      this.setState({\n        active: false\n      });\n      this.unbindDocEvent();\n    };\n\n    this.activeMenubar = () => {\n      this.setState({\n        active: true\n      });\n\n      if (!this.removeDocClickEvent) {\n        this.removeDocClickEvent = addEventListener(document.documentElement, 'click', this.onDocumentClick).remove;\n      }\n    };\n\n    this.state = {\n      active: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.unbindDocEvent();\n  }\n\n  unbindDocEvent() {\n    if (this.removeDocClickEvent) {\n      this.removeDocClickEvent();\n      this.removeDocClickEvent = null;\n    }\n  }\n\n  render() {\n    const {\n      prefixCls,\n      className,\n      children,\n      extra\n    } = this.props;\n    const baseCls = `${prefixCls}-menubar`;\n    const contextValue = {\n      prefixCls: baseCls,\n      activeMenubar: this.activeMenubar,\n      menubarActived: this.state.active === true\n    };\n    return React.createElement(\"div\", {\n      className: classnames(baseCls, className)\n    }, React.createElement(\"div\", {\n      className: `${baseCls}-content`\n    }, React.createElement(\"div\", {\n      className: `${baseCls}-content-inner`\n    }, React.createElement(MenubarContext.Provider, {\n      value: contextValue\n    }, children)), extra && React.createElement(\"div\", {\n      className: `${baseCls}-content-extras`\n    }, extra)));\n  }\n\n}\n\n(function (Menubar) {\n  Menubar.Item = MenubarItem;\n  Menubar.defaultProps = {\n    prefixCls: 'x6'\n  };\n})(Menubar || (Menubar = {}));","map":null,"metadata":{},"sourceType":"module"}