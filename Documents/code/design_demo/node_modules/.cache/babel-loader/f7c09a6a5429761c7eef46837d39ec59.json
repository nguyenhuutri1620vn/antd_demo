{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\n/**\n * 这个是一个图表开发的 模板代码！\n */\n\nvar Venn =\n/** @class */\nfunction (_super) {\n  __extends(Venn, _super);\n\n  function Venn() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'venn';\n    return _this;\n  }\n\n  Venn.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * 获取 韦恩图 默认配置\n   */\n\n\n  Venn.prototype.getDefaultOptions = function () {\n    return Venn.getDefaultOptions();\n  };\n  /**\n   * 获取适配器\n   */\n\n\n  Venn.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  /**\n   * 覆写父类的方法\n   */\n\n\n  Venn.prototype.triggerResize = function () {\n    if (!this.chart.destroyed) {\n      // 首先自适应容器的宽高\n      this.chart.forceFit(); // g2 内部执行 changeSize，changeSize 中执行 render(true)\n\n      this.chart.clear();\n      this.execAdaptor(); // 核心：宽高更新之后计算布局\n      // 渲染\n\n      this.chart.render(true);\n    }\n  };\n\n  return Venn;\n}(Plot);\n\nexport { Venn };","map":null,"metadata":{},"sourceType":"module"}