{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _geometryShape;\n\nexport var ShapeType3D;\n\n(function (ShapeType3D) {\n  ShapeType3D[\"CYLINDER\"] = \"cylinder\";\n  ShapeType3D[\"SQUARECOLUMN\"] = \"squareColumn\";\n  ShapeType3D[\"TRIANGLECOLUMN\"] = \"triangleColumn\";\n  ShapeType3D[\"HEXAGONCOLUMN\"] = \"hexagonColumn\";\n  ShapeType3D[\"PENTAGONCOLUMN\"] = \"pentagonColumn\";\n})(ShapeType3D || (ShapeType3D = {}));\n\nexport var ShapeType2D;\n\n(function (ShapeType2D) {\n  ShapeType2D[\"CIRCLE\"] = \"circle\";\n  ShapeType2D[\"SQUARE\"] = \"square\";\n  ShapeType2D[\"TRIANGLE\"] = \"triangle\";\n  ShapeType2D[\"HEXAGON\"] = \"hexagon\";\n  ShapeType2D[\"PENTAGON\"] = \"pentagon\";\n})(ShapeType2D || (ShapeType2D = {}));\n\nexport function polygonPath(pointCount) {\n  var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var step = Math.PI * 2 / pointCount;\n  var line = [];\n\n  for (var i = 0; i < pointCount; i++) {\n    line.push(step * i + start * Math.PI / 12);\n  }\n\n  var path = line.map(function (t) {\n    var x = Math.sin(t + Math.PI / 4);\n    var y = Math.cos(t + Math.PI / 4);\n    return [x, y, 0];\n  });\n  return path;\n}\nexport function circle() {\n  return polygonPath(30);\n}\nexport function square() {\n  return polygonPath(4);\n}\nexport function triangle() {\n  return polygonPath(3);\n}\nexport function hexagon() {\n  return polygonPath(6, 1);\n}\nexport function pentagon() {\n  return polygonPath(5);\n}\nexport var geometryShape = (_geometryShape = {}, _defineProperty(_geometryShape, ShapeType2D.CIRCLE, circle), _defineProperty(_geometryShape, ShapeType2D.HEXAGON, hexagon), _defineProperty(_geometryShape, ShapeType2D.TRIANGLE, triangle), _defineProperty(_geometryShape, ShapeType2D.SQUARE, square), _defineProperty(_geometryShape, ShapeType2D.PENTAGON, pentagon), _defineProperty(_geometryShape, ShapeType3D.CYLINDER, circle), _defineProperty(_geometryShape, ShapeType3D.HEXAGONCOLUMN, hexagon), _defineProperty(_geometryShape, ShapeType3D.TRIANGLECOLUMN, triangle), _defineProperty(_geometryShape, ShapeType3D.SQUARECOLUMN, square), _defineProperty(_geometryShape, ShapeType3D.PENTAGONCOLUMN, pentagon), _geometryShape);","map":null,"metadata":{},"sourceType":"module"}