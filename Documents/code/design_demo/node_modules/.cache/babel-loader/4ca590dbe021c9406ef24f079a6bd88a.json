{"ast":null,"code":"// represents a body(a point mass) and its position\nexport default class Body {\n  constructor(params) {\n    /**\n     * the id of this body, the same with the node id\n     * @type  {number}\n     */\n    this.id = params.id || 0;\n    /**\n     * the position of this body\n     * @type  {number}\n     */\n\n    this.rx = params.rx;\n    /**\n     * the position of this body\n     * @type  {number}\n     */\n\n    this.ry = params.ry;\n    /**\n     * the force acting on this body\n     * @type  {number}\n     */\n\n    this.fx = 0;\n    /**\n     * the force acting on this body\n     * @type  {number}\n     */\n\n    this.fy = 0;\n    /**\n     * the mass of this body, =1 for a node\n     * @type  {number}\n     */\n\n    this.mass = params.mass;\n    /**\n     * the degree of the node represented by this body\n     * @type  {number}\n     */\n\n    this.degree = params.degree;\n    /**\n     * the parameter for repulsive force, = kr\n     * @type  {number}\n     */\n\n    this.g = params.g || 0;\n  } // returns the euclidean distance\n\n\n  distanceTo(bo) {\n    const dx = this.rx - bo.rx;\n    const dy = this.ry - bo.ry;\n    return Math.hypot(dx, dy);\n  }\n\n  setPos(x, y) {\n    this.rx = x;\n    this.ry = y;\n  } // resets the forces\n\n\n  resetForce() {\n    this.fx = 0;\n    this.fy = 0;\n  }\n\n  addForce(b) {\n    const dx = b.rx - this.rx;\n    const dy = b.ry - this.ry;\n    let dist = Math.hypot(dx, dy);\n    dist = dist < 0.0001 ? 0.0001 : dist; // the repulsive defined by force atlas 2\n\n    const F = this.g * (this.degree + 1) * (b.degree + 1) / dist;\n    this.fx += F * dx / dist;\n    this.fy += F * dy / dist;\n  } // if quad contains this body\n\n\n  in(quad) {\n    return quad.contains(this.rx, this.ry);\n  } // returns a new body\n\n\n  add(bo) {\n    const nenwMass = this.mass + bo.mass;\n    const x = (this.rx * this.mass + bo.rx * bo.mass) / nenwMass;\n    const y = (this.ry * this.mass + bo.ry * bo.mass) / nenwMass;\n    const dg = this.degree + bo.degree;\n    const params = {\n      rx: x,\n      ry: y,\n      mass: nenwMass,\n      degree: dg\n    };\n    return new Body(params);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}