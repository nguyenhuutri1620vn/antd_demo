{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { Event } from './Event';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLVideoElement } from './HTMLVideoElement';\nimport { Image } from './Image';\nimport { $location } from './location';\n\nvar Body = function (_HTMLElement) {\n  _inherits(Body, _HTMLElement);\n\n  var _super = _createSuper(Body);\n\n  function Body() {\n    _classCallCheck(this, Body);\n\n    return _super.call(this, 'body', 0);\n  }\n\n  _createClass(Body, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener, options) {}\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {}\n  }]);\n\n  return Body;\n}(HTMLElement);\n\nvar DocumentElement = function (_HTMLElement2) {\n  _inherits(DocumentElement, _HTMLElement2);\n\n  var _super2 = _createSuper(DocumentElement);\n\n  function DocumentElement() {\n    _classCallCheck(this, DocumentElement);\n\n    return _super2.call(this, 'html', 0);\n  }\n\n  _createClass(DocumentElement, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener) {}\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {}\n  }]);\n\n  return DocumentElement;\n}(HTMLElement);\n\nvar events = {};\nexport var $document = {\n  readyState: 'complete',\n  visibilityState: 'visible',\n  hidden: false,\n  fullscreen: true,\n  scripts: [],\n  style: {},\n  location: $location,\n  ontouchstart: null,\n  ontouchmove: null,\n  ontouchend: null,\n  onvisibilitychange: null,\n  parentNode: null,\n  parentElement: null,\n  head: null,\n  body: null,\n  documentElement: {\n    style: []\n  },\n  createElement: function createElement(tagName) {\n    tagName = tagName.toLowerCase();\n\n    if (tagName === 'canvas') {\n      return my.createOffscreenCanvas(1024, 128, '2d');\n    } else if (tagName === 'img') {\n      return new Image();\n    } else if (tagName === 'video') {\n      return new HTMLVideoElement();\n    }\n\n    return new HTMLElement(tagName);\n  },\n  createElementNS: function createElementNS(nameSpace, tagName) {\n    return this.createElement(tagName);\n  },\n  createTextNode: function createTextNode(text) {\n    return text;\n  },\n  getElementById: function getElementById(id) {\n    return null;\n  },\n  getElementsByTagName: function getElementsByTagName(tagName) {\n    tagName = tagName.toLowerCase();\n    return [];\n  },\n  getElementsByTagNameNS: function getElementsByTagNameNS(nameSpace, tagName) {\n    return this.getElementsByTagName(tagName);\n  },\n  getElementsByName: function getElementsByName(tagName) {\n    return [];\n  },\n  querySelector: function querySelector(query) {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll(query) {\n    return [];\n  },\n  addEventListener: function addEventListener(type, listener, options) {\n    if (!events[type]) {\n      events[type] = [];\n    }\n\n    events[type].push(listener);\n  },\n  removeEventListener: function removeEventListener(type, listener) {\n    var listeners = events[type];\n\n    if (listeners && listeners.length > 0) {\n      for (var i = listeners.length; i--; i > 0) {\n        if (listeners[i] === listener) {\n          listeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n  },\n  dispatchEvent: function dispatchEvent(event) {\n    var type = event.type;\n    var listeners = events[type];\n\n    if (listeners) {\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i](event);\n      }\n    }\n\n    if (event.target && typeof event.target['on' + type] === 'function') {\n      event.target['on' + type](event);\n    }\n  },\n  createEvent: function createEvent(type) {\n    return new Event(type);\n  }\n};\n$document.documentElement = new DocumentElement();\n$document.head = new HTMLElement('head');\n$document.body = new Body();","map":null,"metadata":{},"sourceType":"module"}