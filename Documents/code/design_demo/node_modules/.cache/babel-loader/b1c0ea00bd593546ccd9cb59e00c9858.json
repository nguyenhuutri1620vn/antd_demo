{"ast":null,"code":"import _construct from \"@babel/runtime/helpers/construct\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\nvar _excluded = [\"id\", \"style\", \"minZoom\", \"maxZoom\", \"token\", \"mapInstance\", \"plugin\", \"version\"];\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport AMapLoader from '@amap/amap-jsapi-loader';\nimport { CoordinateSystem, MapServiceEvent, TYPES } from '@antv/l7-core';\nimport { DOM } from '@antv/l7-utils';\nimport { mat4, vec3 } from 'gl-matrix';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { toPaddingOptions } from '../utils';\nimport { Version } from '../version';\n\nfunction loadStyles(css, doc) {\n  var isMiniAli = typeof my !== 'undefined' && !!my && typeof my.showToast === 'function' && my.isFRM !== true;\n  var isWeChatMiniProgram = typeof wx !== 'undefined' && wx !== null && (typeof wx.request !== 'undefined' || typeof wx.miniProgram !== 'undefined');\n\n  if (isMiniAli || isWeChatMiniProgram) {\n    return;\n  }\n\n  if (!doc) doc = document;\n\n  if (!doc) {\n    return;\n  }\n\n  var head = doc.head || doc.getElementsByTagName('head')[0];\n\n  if (!head) {\n    head = doc.createElement('head');\n    var body = doc.body || doc.getElementsByTagName('body')[0];\n\n    if (body) {\n      body.parentNode.insertBefore(head, body);\n    } else {\n      doc.documentElement.appendChild(head);\n    }\n  }\n\n  var style = doc.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(doc.createTextNode(css));\n  }\n\n  head.appendChild(style);\n  return style;\n}\n\nloadStyles(\".amap-logo{\\n display: none !important;\\n}\\n\");\nimport { MapTheme } from './theme';\nimport Viewport from './Viewport';\nvar mapdivCount = 0;\nwindow.forceWebGL = true;\nvar AMAP_API_KEY = 'ff533602d57df6f8ab3b0fea226ae52f';\nvar AMAP_VERSION = '2.0';\nvar AMAP_SCRIPT_ID = 'amap-script';\nvar amapLoaded = false;\nvar pendingResolveQueue = [];\nvar AMapService = (_dec = injectable(), _dec2 = inject(TYPES.IGlobalConfigService), _dec3 = inject(TYPES.MapConfig), _dec4 = inject(TYPES.ICoordinateSystemService), _dec5 = inject(TYPES.IEventEmitter), _dec(_class = (_class2 = function () {\n  function AMapService() {\n    var _this = this;\n\n    _classCallCheck(this, AMapService);\n\n    _defineProperty(this, \"version\", Version['GAODE2.x']);\n\n    _defineProperty(this, \"map\", void 0);\n\n    _defineProperty(this, \"sceneCenter\", void 0);\n\n    _defineProperty(this, \"sceneCenterMKT\", void 0);\n\n    _defineProperty(this, \"bgColor\", 'rgba(0, 0, 0, 0)');\n\n    _initializerDefineProperty(this, \"configService\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"config\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"coordinateSystemService\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"eventEmitter\", _descriptor4, this);\n\n    _defineProperty(this, \"markerContainer\", void 0);\n\n    _defineProperty(this, \"$mapContainer\", void 0);\n\n    _defineProperty(this, \"viewport\", void 0);\n\n    _defineProperty(this, \"cameraChangedCallback\", void 0);\n\n    _defineProperty(this, \"handleViewChanged\", function (e) {\n      var _this$map$customCoord = _this.map.customCoords.getCameraParams(),\n          fov = _this$map$customCoord.fov,\n          near = _this$map$customCoord.near,\n          far = _this$map$customCoord.far,\n          aspect = _this$map$customCoord.aspect,\n          position = _this$map$customCoord.position,\n          lookAt = _this$map$customCoord.lookAt,\n          up = _this$map$customCoord.up;\n\n      _this.emit('mapchange');\n\n      var zoom = e.zoom;\n\n      var center = _this.map.customCoords.getCenter();\n\n      if (_this.cameraChangedCallback) {\n        _this.viewport.syncWithMapCamera({\n          aspect: aspect,\n          far: far,\n          fov: fov,\n          cameraPosition: position,\n          lookAt: lookAt,\n          up: up,\n          near: near,\n          zoom: zoom - 1,\n          center: center,\n          offsetOrigin: [position[0], position[1]]\n        });\n\n        _this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.P20_2);\n\n        _this.cameraChangedCallback(_this.viewport);\n      }\n    });\n  }\n\n  _createClass(AMapService, [{\n    key: \"setBgColor\",\n    value: function setBgColor(color) {\n      this.bgColor = color;\n    }\n  }, {\n    key: \"setCustomCoordCenter\",\n    value: function setCustomCoordCenter(center) {\n      var _this$map$getProjecti;\n\n      this.sceneCenter = center;\n      this.sceneCenterMKT = (_this$map$getProjecti = this.map.getProjection()).project.apply(_this$map$getProjecti, _toConsumableArray(this.sceneCenter));\n    }\n  }, {\n    key: \"getCustomCoordCenter\",\n    value: function getCustomCoordCenter() {\n      return this.sceneCenterMKT;\n    }\n  }, {\n    key: \"lngLatToCoord\",\n    value: function lngLatToCoord(lnglat) {\n      var proj = this.map.getProjection();\n      var project = proj.project;\n\n      if (!this.sceneCenter) {\n        this.map.customCoords.setCenter(lnglat);\n        this.setCustomCoordCenter(lnglat);\n      }\n\n      return this._sub(project(lnglat[0], lnglat[1]), this.sceneCenterMKT);\n    }\n  }, {\n    key: \"lngLatToCoords\",\n    value: function lngLatToCoords(lnglatArray) {\n      var _this2 = this;\n\n      return lnglatArray.map(function (lnglats) {\n        if (typeof lnglats[0] === 'number') {\n          return _this2.lngLatToCoord(lnglats);\n        } else {\n          return lnglats.map(function (lnglat) {\n            return _this2.lngLatToCoord(lnglat);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"addMarkerContainer\",\n    value: function addMarkerContainer() {\n      if (!this.map) {\n        return;\n      }\n\n      var mapContainer = this.map.getContainer();\n\n      if (mapContainer !== null) {\n        var amap = mapContainer.getElementsByClassName('amap-maps')[0];\n        amap.style.zIndex = 'auto';\n        this.markerContainer = DOM.create('div', 'l7-marker-container2', amap);\n      }\n    }\n  }, {\n    key: \"getMarkerContainer\",\n    value: function getMarkerContainer() {\n      return this.markerContainer;\n    }\n  }, {\n    key: \"on\",\n    value: function on(type, handler) {\n      if (MapServiceEvent.indexOf(type) !== -1) {\n        this.eventEmitter.on(type, handler);\n      } else {\n        this.map.on(type, handler);\n      }\n    }\n  }, {\n    key: \"off\",\n    value: function off(type, handler) {\n      if (MapServiceEvent.indexOf(type) !== -1) {\n        this.eventEmitter.off(type, handler);\n      } else {\n        this.map.off(type, handler);\n      }\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this.map.getContainer();\n    }\n  }, {\n    key: \"getMapCanvasContainer\",\n    value: function getMapCanvasContainer() {\n      var _this$map$getContaine;\n\n      return (_this$map$getContaine = this.map.getContainer()) === null || _this$map$getContaine === void 0 ? void 0 : _this$map$getContaine.getElementsByClassName('amap-maps')[0];\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      var size = this.map.getSize();\n      return [size.getWidth(), size.getHeight()];\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return 'amap2';\n    }\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      return this.map.getZoom() - 1;\n    }\n  }, {\n    key: \"setZoom\",\n    value: function setZoom(zoom) {\n      return this.map.setZoom(zoom + 1);\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter(options) {\n      if (options !== null && options !== void 0 && options.padding) {\n        var originCenter = this.getCenter();\n\n        var _this$getSize = this.getSize(),\n            _this$getSize2 = _slicedToArray(_this$getSize, 2),\n            w = _this$getSize2[0],\n            h = _this$getSize2[1];\n\n        var padding = toPaddingOptions(options.padding);\n        var px = this.lngLatToPixel([originCenter.lng, originCenter.lat]);\n        var offsetPx = [(padding.right - padding.left) / 2, (padding.bottom - padding.top) / 2];\n        var newCenter = this.pixelToLngLat([px.x - offsetPx[0], px.y - offsetPx[1]]);\n        return newCenter;\n      }\n\n      var center = this.map.getCenter();\n      return {\n        lng: center.getLng(),\n        lat: center.getLat()\n      };\n    }\n  }, {\n    key: \"setCenter\",\n    value: function setCenter(lnglat, options) {\n      if (options !== null && options !== void 0 && options.padding) {\n        var padding = toPaddingOptions(options.padding);\n        var px = this.lngLatToPixel(lnglat);\n        var offsetPx = [(padding.right - padding.left) / 2, (padding.bottom - padding.top) / 2];\n        var newCenter = this.pixelToLngLat([px.x + offsetPx[0], px.y + offsetPx[1]]);\n        this.map.setCenter([newCenter.lng, newCenter.lat]);\n      } else {\n        this.map.setCenter(lnglat);\n      }\n    }\n  }, {\n    key: \"getPitch\",\n    value: function getPitch() {\n      return this.map.getPitch();\n    }\n  }, {\n    key: \"getRotation\",\n    value: function getRotation() {\n      return 360 - this.map.getRotation();\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      var bounds = this.map.getBounds();\n      var NE = bounds.getNorthEast();\n      var SW = bounds.getSouthWest();\n      var center = this.getCenter();\n      var maxlng = center.lng > NE.getLng() || center.lng < SW.getLng() ? 180 - NE.getLng() : NE.getLng();\n      var minlng = center.lng < SW.getLng() ? SW.getLng() - 180 : SW.getLng();\n      return [[minlng, SW.getLat()], [maxlng, NE.getLat()]];\n    }\n  }, {\n    key: \"getMinZoom\",\n    value: function getMinZoom() {\n      var zooms = this.map.getZooms();\n      return zooms[0] - 1;\n    }\n  }, {\n    key: \"getMaxZoom\",\n    value: function getMaxZoom() {\n      var zooms = this.map.getZooms();\n      return zooms[1] - 1;\n    }\n  }, {\n    key: \"setRotation\",\n    value: function setRotation(rotation) {\n      return this.map.setRotation(rotation);\n    }\n  }, {\n    key: \"setPitch\",\n    value: function setPitch(pitch) {\n      return this.map.setPitch(pitch);\n    }\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn() {\n      this.map.zoomIn();\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      this.map.zoomOut();\n    }\n  }, {\n    key: \"panTo\",\n    value: function panTo(p) {\n      this.map.panTo(p);\n    }\n  }, {\n    key: \"panBy\",\n    value: function panBy() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.map.panBy(x, y);\n    }\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds(extent) {\n      this.map.setBounds(new AMap.Bounds([extent[0][0], extent[0][1], extent[1][0], extent[1][1]]));\n    }\n  }, {\n    key: \"setZoomAndCenter\",\n    value: function setZoomAndCenter(zoom, center) {\n      this.map.setZoomAndCenter(zoom, center);\n    }\n  }, {\n    key: \"setMapStyle\",\n    value: function setMapStyle(style) {\n      this.map.setMapStyle(this.getMapStyle(style));\n    }\n  }, {\n    key: \"setMapStatus\",\n    value: function setMapStatus(option) {\n      this.map.setStatus(option);\n    }\n  }, {\n    key: \"pixelToLngLat\",\n    value: function pixelToLngLat(pixel) {\n      var lngLat = this.map.pixelToLngLat(new AMap.Pixel(pixel[0], pixel[1]));\n      return {\n        lng: lngLat.getLng(),\n        lat: lngLat.getLat()\n      };\n    }\n  }, {\n    key: \"lngLatToPixel\",\n    value: function lngLatToPixel(lnglat) {\n      var p = this.map.lnglatToPixel(new AMap.LngLat(lnglat[0], lnglat[1]));\n      return {\n        x: p.getX(),\n        y: p.getY()\n      };\n    }\n  }, {\n    key: \"containerToLngLat\",\n    value: function containerToLngLat(pixel) {\n      var ll = new AMap.Pixel(pixel[0], pixel[1]);\n      var lngLat = this.map.containerToLngLat(ll);\n      return {\n        lng: lngLat === null || lngLat === void 0 ? void 0 : lngLat.getLng(),\n        lat: lngLat === null || lngLat === void 0 ? void 0 : lngLat.getLat()\n      };\n    }\n  }, {\n    key: \"lngLatToContainer\",\n    value: function lngLatToContainer(lnglat) {\n      var ll = new AMap.LngLat(lnglat[0], lnglat[1]);\n      var pixel = this.map.lngLatToContainer(ll);\n      return {\n        x: pixel.getX(),\n        y: pixel.getY()\n      };\n    }\n  }, {\n    key: \"lngLatToMercator\",\n    value: function lngLatToMercator(lnglat, altitude) {\n      return {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n    }\n  }, {\n    key: \"getModelMatrix\",\n    value: function getModelMatrix(lnglat, altitude, rotate) {\n      var scale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [1, 1, 1];\n      var origin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n      var flat = this.map.customCoords.lngLatToCoord(lnglat);\n      var modelMatrix = mat4.create();\n      mat4.translate(modelMatrix, modelMatrix, vec3.fromValues(flat[0], flat[1], altitude));\n      mat4.scale(modelMatrix, modelMatrix, vec3.fromValues(scale[0], scale[1], scale[2]));\n      mat4.rotateX(modelMatrix, modelMatrix, rotate[0]);\n      mat4.rotateY(modelMatrix, modelMatrix, rotate[1]);\n      mat4.rotateZ(modelMatrix, modelMatrix, rotate[2]);\n      return modelMatrix;\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var _this$config, id, _this$config$style, style, _this$config$minZoom, minZoom, _this$config$maxZoom, maxZoom, _this$config$token, token, mapInstance, _this$config$plugin, plugin, _this$config$version, version, rest;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$config = this.config, id = _this$config.id, _this$config$style = _this$config.style, style = _this$config$style === void 0 ? 'light' : _this$config$style, _this$config$minZoom = _this$config.minZoom, minZoom = _this$config$minZoom === void 0 ? 0 : _this$config$minZoom, _this$config$maxZoom = _this$config.maxZoom, maxZoom = _this$config$maxZoom === void 0 ? 18 : _this$config$maxZoom, _this$config$token = _this$config.token, token = _this$config$token === void 0 ? AMAP_API_KEY : _this$config$token, mapInstance = _this$config.mapInstance, _this$config$plugin = _this$config.plugin, plugin = _this$config$plugin === void 0 ? [] : _this$config$plugin, _this$config$version = _this$config.version, version = _this$config$version === void 0 ? AMAP_VERSION : _this$config$version, rest = _objectWithoutProperties(_this$config, _excluded);\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  var resolveMap = function resolveMap() {\n                    if (mapInstance) {\n                      var _this3$map$customCoor;\n\n                      _this3.map = mapInstance;\n                      _this3.$mapContainer = _this3.map.getContainer();\n\n                      var mapInitCenter = _this3.map.getCenter();\n\n                      (_this3$map$customCoor = _this3.map.customCoords) === null || _this3$map$customCoor === void 0 ? void 0 : _this3$map$customCoor.setCenter([mapInitCenter.lng, mapInitCenter.lat]);\n\n                      _this3.setCustomCoordCenter([mapInitCenter.lng, mapInitCenter.lat]);\n\n                      setTimeout(function () {\n                        _this3.map.on('viewchange', _this3.handleViewChanged);\n\n                        resolve();\n                      }, 30);\n                    } else {\n                      _this3.$mapContainer = _this3.creatAmapContainer(id);\n\n                      var mapConstructorOptions = _objectSpread({\n                        mapStyle: _this3.getMapStyle(style),\n                        zooms: [minZoom, maxZoom],\n                        viewMode: '3D'\n                      }, rest);\n\n                      if (mapConstructorOptions.zoom) {\n                        mapConstructorOptions.zoom += 1;\n                      }\n\n                      var map = new AMap.Map(_this3.$mapContainer, mapConstructorOptions);\n                      _this3.map = map;\n\n                      var _mapInitCenter = map.getCenter();\n\n                      map.customCoords.setCenter([_mapInitCenter.lng, _mapInitCenter.lat]);\n\n                      _this3.setCustomCoordCenter([_mapInitCenter.lng, _mapInitCenter.lat]);\n\n                      map.on('viewchange', _this3.handleViewChanged);\n                      setTimeout(function () {\n                        resolve();\n                      }, 10);\n                    }\n                  };\n\n                  _this3.viewport = new Viewport();\n\n                  if (!amapLoaded && !mapInstance) {\n                    if (token === AMAP_API_KEY) {\n                      console.warn(_this3.configService.getSceneWarninfo('MapToken'));\n                    }\n\n                    amapLoaded = true;\n                    plugin.push('Map3D');\n                    AMapLoader.load({\n                      key: token,\n                      version: version,\n                      plugins: plugin\n                    }).then(function (AMap) {\n                      resolveMap();\n\n                      if (pendingResolveQueue.length) {\n                        pendingResolveQueue.forEach(function (r) {\n                          return r();\n                        });\n                        pendingResolveQueue = [];\n                      }\n                    }).catch(function (e) {\n                      throw new Error(e);\n                    });\n                  } else {\n                    if (amapLoaded && window.AMap || mapInstance) {\n                      resolveMap();\n                    } else {\n                      pendingResolveQueue.push(resolveMap);\n                    }\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"meterToCoord\",\n    value: function meterToCoord(center, outer) {\n      var meterDis = AMap.GeometryUtil.distance(_construct(AMap.LngLat, _toConsumableArray(center)), _construct(AMap.LngLat, _toConsumableArray(outer)));\n\n      var _this$lngLatToCoord = this.lngLatToCoord(center),\n          _this$lngLatToCoord2 = _slicedToArray(_this$lngLatToCoord, 2),\n          x1 = _this$lngLatToCoord2[0],\n          y1 = _this$lngLatToCoord2[1];\n\n      var _this$lngLatToCoord3 = this.lngLatToCoord(outer),\n          _this$lngLatToCoord4 = _slicedToArray(_this$lngLatToCoord3, 2),\n          x2 = _this$lngLatToCoord4[0],\n          y2 = _this$lngLatToCoord4[1];\n\n      var coordDis = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n      return coordDis / meterDis;\n    }\n  }, {\n    key: \"exportMap\",\n    value: function exportMap(type) {\n      var _this$getContainer;\n\n      var renderCanvas = (_this$getContainer = this.getContainer()) === null || _this$getContainer === void 0 ? void 0 : _this$getContainer.getElementsByClassName('amap-layer')[0];\n      var layersPng = type === 'jpg' ? renderCanvas === null || renderCanvas === void 0 ? void 0 : renderCanvas.toDataURL('image/jpeg') : renderCanvas === null || renderCanvas === void 0 ? void 0 : renderCanvas.toDataURL('image/png');\n      return layersPng;\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(name) {\n      var _this$eventEmitter;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_this$eventEmitter = this.eventEmitter).emit.apply(_this$eventEmitter, [name].concat(args));\n    }\n  }, {\n    key: \"once\",\n    value: function once(name) {\n      var _this$eventEmitter2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      (_this$eventEmitter2 = this.eventEmitter).once.apply(_this$eventEmitter2, [name].concat(args));\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this$$mapContainer, _this$$mapContainer$p;\n\n      this.map.destroy();\n      (_this$$mapContainer = this.$mapContainer) === null || _this$$mapContainer === void 0 ? void 0 : (_this$$mapContainer$p = _this$$mapContainer.parentNode) === null || _this$$mapContainer$p === void 0 ? void 0 : _this$$mapContainer$p.removeChild(this.$mapContainer);\n      delete window.initAMap;\n      var $jsapi = document.getElementById(AMAP_SCRIPT_ID);\n\n      if ($jsapi) {\n        document.head.removeChild($jsapi);\n      }\n    }\n  }, {\n    key: \"getMapContainer\",\n    value: function getMapContainer() {\n      return this.$mapContainer;\n    }\n  }, {\n    key: \"onCameraChanged\",\n    value: function onCameraChanged(callback) {\n      this.cameraChangedCallback = callback;\n    }\n  }, {\n    key: \"initViewPort\",\n    value: function initViewPort() {\n      var _this$map$customCoord3;\n\n      var _this$map$customCoord2 = (_this$map$customCoord3 = this.map.customCoords) === null || _this$map$customCoord3 === void 0 ? void 0 : _this$map$customCoord3.getCameraParams(),\n          fov = _this$map$customCoord2.fov,\n          near = _this$map$customCoord2.near,\n          far = _this$map$customCoord2.far,\n          aspect = _this$map$customCoord2.aspect,\n          position = _this$map$customCoord2.position,\n          lookAt = _this$map$customCoord2.lookAt,\n          up = _this$map$customCoord2.up;\n\n      this.emit('mapchange');\n      var center = this.map.customCoords.getCenter();\n      var zoom = this.map.getZoom();\n\n      if (this.cameraChangedCallback) {\n        this.viewport.syncWithMapCamera({\n          aspect: aspect,\n          far: far,\n          fov: fov,\n          cameraPosition: position,\n          lookAt: lookAt,\n          near: near,\n          up: up,\n          zoom: zoom - 1,\n          center: center,\n          offsetOrigin: [position[0], position[1]]\n        });\n        this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.P20_2);\n        this.cameraChangedCallback(this.viewport);\n      }\n    }\n  }, {\n    key: \"_sub\",\n    value: function _sub(a, b) {\n      var r = [0, 0];\n      r[0] = a[0] - b[0];\n      r[1] = a[1] - b[1];\n      return r;\n    }\n  }, {\n    key: \"getMapStyle\",\n    value: function getMapStyle(name) {\n      return MapTheme[name] ? MapTheme[name] : name;\n    }\n  }, {\n    key: \"creatAmapContainer\",\n    value: function creatAmapContainer(id) {\n      var $wrapper = id;\n\n      if (typeof id === 'string') {\n        $wrapper = document.getElementById(id);\n      }\n\n      var $amapdiv = document.createElement('div');\n      $amapdiv.style.cssText += \"\\n      position: absolute;\\n      top: 0;\\n      height: 100%;\\n      width: 100%;\\n    \";\n      $amapdiv.id = 'l7_amap_div' + mapdivCount++;\n      $wrapper.appendChild($amapdiv);\n      return $amapdiv;\n    }\n  }]);\n\n  return AMapService;\n}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"configService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"config\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"coordinateSystemService\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"eventEmitter\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexport { AMapService as default };","map":null,"metadata":{},"sourceType":"module"}