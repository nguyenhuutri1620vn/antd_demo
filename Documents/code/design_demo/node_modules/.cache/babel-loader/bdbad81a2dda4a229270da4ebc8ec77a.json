{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from 'react';\nimport { CanvasToolbar as XFlowToolbarPanel } from '@antv/xflow';\nimport { useToolbarConfig } from './util';\nexport var ToolbarPanel = function (props) {\n  var _a = props.layout,\n      layout = _a === void 0 ? 'horizontal' : _a,\n      _b = props.position,\n      position = _b === void 0 ? {\n    top: 0,\n    left: 240,\n    right: 240,\n    bottom: 0\n  } : _b,\n      _c = props.show,\n      show = _c === void 0 ? true : _c,\n      className = props.className,\n      style = props.style;\n  var toolbarConfig = useToolbarConfig(props);\n\n  if (!show) {\n    return null;\n  }\n\n  return React.createElement(XFlowToolbarPanel, {\n    className: className,\n    layout: layout,\n    config: toolbarConfig,\n    style: __assign({\n      borderBottom: '1px solid #ccc'\n    }, style),\n    position: position\n  });\n};\nexport default ToolbarPanel;","map":null,"metadata":{},"sourceType":"module"}