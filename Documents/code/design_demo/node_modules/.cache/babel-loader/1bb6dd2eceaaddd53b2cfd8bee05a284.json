{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { wrap as _wrap } from '../util';\nexport var earthRadius = 6371008.8;\n\nvar LngLat = function () {\n  function LngLat(lng, lat) {\n    _classCallCheck(this, LngLat);\n\n    _defineProperty(this, \"lng\", void 0);\n\n    _defineProperty(this, \"lat\", void 0);\n\n    if (isNaN(lng) || isNaN(lat)) {\n      throw new Error(\"Invalid LngLat object: (\".concat(lng, \", \").concat(lat, \")\"));\n    }\n\n    this.lng = +lng;\n    this.lat = +lat;\n\n    if (this.lat > 90 || this.lat < -90) {\n      throw new Error('Invalid LngLat latitude value: must be between -90 and 90');\n    }\n  }\n\n  _createClass(LngLat, [{\n    key: \"wrap\",\n    value: function wrap() {\n      return new LngLat(_wrap(this.lng, -180, 180), this.lat);\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return [this.lng, this.lat];\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"LngLat(\".concat(this.lng, \", \").concat(this.lat, \")\");\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(lngLat) {\n      var rad = Math.PI / 180;\n      var lat1 = this.lat * rad;\n      var lat2 = lngLat.lat * rad;\n      var a = Math.sin(lat1) * Math.sin(lat2) + Math.cos(lat1) * Math.cos(lat2) * Math.cos((lngLat.lng - this.lng) * rad);\n      var maxMeters = earthRadius * Math.acos(Math.min(a, 1));\n      return maxMeters;\n    }\n  }], [{\n    key: \"convert\",\n    value: function convert(input) {\n      if (input instanceof LngLat) {\n        return input;\n      }\n\n      if (Array.isArray(input) && (input.length === 2 || input.length === 3)) {\n        return new LngLat(Number(input[0]), Number(input[1]));\n      }\n\n      if (!Array.isArray(input) && _typeof(input) === 'object' && input !== null) {\n        var lng = 'lng' in input ? input.lng : input.lon;\n        return new LngLat(Number(lng), Number(input.lat));\n      }\n\n      throw new Error('`LngLatLike` argument must be specified as a LngLat instance, an object {lng: <lng>, lat: <lat>}, an object {lon: <lng>, lat: <lat>}, or an array of [<lng>, <lat>]');\n    }\n  }]);\n\n  return LngLat;\n}();\n\nexport { LngLat as default };","map":null,"metadata":{},"sourceType":"module"}