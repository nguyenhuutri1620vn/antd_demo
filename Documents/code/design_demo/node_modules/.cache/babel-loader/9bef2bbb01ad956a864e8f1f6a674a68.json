{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport { XFlow, XFlowCanvas, CanvasContextMenu, KeyBindings, uuidv4 // CanvasMiniMap,\n} from '@antv/xflow';\nimport { NodeTreePanel } from '../components/canvas-node-tree-panel';\nimport { CanvasScaleToolbar } from '../components/canvas-scale-toolbar';\nimport { treeDataService, searchService, onNodeDrop } from '../components/node-panel';\nimport { FormPanel } from '../components/editor-panel';\nimport { ToolbarPanel } from '../components/toolbar';\nimport { useMenuConfig } from '../components/menu';\nimport Theme from '../theme';\nimport { setProps, setInstance, excLoadData } from '../util';\nimport { useCmdConfig } from './service/command';\nimport AppContext from '../context';\nimport { appendUtils } from './appendUtils';\nimport { useGraphConfig, useGraphHook } from './service';\nimport { useKeybindingConfig } from './service/keyBinding';\n\nvar Flowchart = function (props) {\n  var className = props.className,\n      style = props.style,\n      _a = props.theme,\n      theme = _a === void 0 ? 'light' : _a,\n      detailPanelProps = props.detailPanelProps,\n      toolbarPanelProps = props.toolbarPanelProps,\n      _b = props.nodePanelProps,\n      nodePanelProps = _b === void 0 ? {} : _b,\n      _c = props.scaleToolbarPanelProps,\n      scaleToolbarPanelProps = _c === void 0 ? {} : _c,\n      _d = props.contextMenuPanelProps,\n      contextMenuPanelProps = _d === void 0 ? {} : _d,\n      _e = props.canvasProps,\n      canvasProps = _e === void 0 ? {} : _e,\n      keyBindingProps = props.keyBindingProps,\n      // miniMapProps = {},\n  onDestroy = props.onDestroy,\n      onConfigReady = props.onConfigReady,\n      isAutoCenter = props.isAutoCenter,\n      data = props.data,\n      onReady = props.onReady;\n  var uuidv4Ref = useRef(uuidv4());\n  var container = useRef();\n  setProps(props, uuidv4Ref.current, container);\n  var _f = canvasProps.position,\n      position = _f === void 0 ? {\n    top: 40,\n    left: 240,\n    right: 240,\n    bottom: 0\n  } : _f; // const { position: miniMapPosition = { bottom: 12, right: 12 }, show: showMinimMap = true } = miniMapProps;\n\n  var graphRef = useRef();\n  var graphConfig = useGraphConfig(props);\n  var menuConfig = useMenuConfig();\n  var hookConfig = useGraphHook({\n    flowchartId: uuidv4Ref.current\n  });\n  var commandConfig = useCmdConfig({\n    flowchartId: uuidv4Ref.current\n  }); // 需要 getProps\n\n  var keybindingConfig = keyBindingProps || useKeybindingConfig();\n  var _g = scaleToolbarPanelProps.show,\n      show = _g === void 0 ? true : _g;\n  var _h = nodePanelProps.show,\n      nodePanelShow = _h === void 0 ? true : _h;\n  var _j = contextMenuPanelProps.show,\n      showMenu = _j === void 0 ? true : _j;\n  var loadData = useCallback(function (app) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (data) {\n          excLoadData(app, data);\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  }, [data]);\n  useEffect(function () {\n    return function () {\n      var _a;\n\n      (_a = graphRef.current) === null || _a === void 0 ? void 0 : _a.dispose();\n    };\n  }, []);\n  return React.createElement(AppContext.Provider, {\n    value: {\n      theme: Theme[theme],\n      flowchartId: uuidv4Ref.current\n    }\n  }, React.createElement(\"div\", {\n    className: \"xflow-canvas-container\",\n    \"data-flowchart-id\": uuidv4Ref.current,\n    ref: container,\n    style: {\n      width: '100%',\n      height: '100%',\n      backgroundColor: '#fff'\n    }\n  }, React.createElement(XFlow, {\n    className: className,\n    style: style,\n    commandConfig: commandConfig,\n    hookConfig: hookConfig,\n    onAppDestroy: onDestroy,\n    isAutoCenter: isAutoCenter,\n    onAppConfigReady: onConfigReady,\n    onLoad: function (app) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var X6Graph;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , app.getGraphInstance()];\n\n            case 1:\n              X6Graph = _a.sent();\n              setInstance(X6Graph, app, uuidv4Ref.current); // @ts-ignore\n\n              X6Graph.flowchartId = uuidv4Ref.current;\n              graphRef.current = X6Graph;\n              loadData(app);\n              onReady === null || onReady === void 0 ? void 0 : onReady(appendUtils(X6Graph, app), app);\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  }, React.createElement(ToolbarPanel, __assign({}, toolbarPanelProps, {\n    flowchartId: uuidv4Ref.current\n  })), nodePanelShow && React.createElement(NodeTreePanel, __assign({\n    flowchartId: uuidv4Ref.current,\n    searchService: searchService,\n    treeDataService: treeDataService,\n    onNodeDrop: onNodeDrop\n  }, nodePanelProps)), React.createElement(XFlowCanvas, {\n    config: graphConfig,\n    position: position\n  }, show && React.createElement(CanvasScaleToolbar, __assign({\n    position: {\n      top: 12,\n      right: 12\n    }\n  }, scaleToolbarPanelProps)), showMenu && React.createElement(CanvasContextMenu, {\n    config: menuConfig\n  })), React.createElement(FormPanel, __assign({}, detailPanelProps)), keyBindingProps !== false && React.createElement(KeyBindings, {\n    config: keybindingConfig\n  }))));\n};\n\nexport default Flowchart;","map":null,"metadata":{},"sourceType":"module"}