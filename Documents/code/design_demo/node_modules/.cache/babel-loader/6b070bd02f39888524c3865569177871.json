{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport React from 'react';\nimport { // app service\nIconStore } from '@antv/xflow-core';\nimport { Menu } from '@antv/x6-react-components';\nexport const renderMenuOptions = props => {\n  const {\n    idx,\n    menuOptions: menuItem,\n    target,\n    modelService,\n    commandService,\n    onHide\n  } = props;\n  const {\n    id,\n    label,\n    isEnabled = true,\n    isVisible = true,\n    iconName,\n    submenu = [],\n    active,\n    hotkey,\n    render,\n    onClick\n  } = menuItem;\n\n  if (!isVisible) {\n    return null;\n  }\n  /** 分隔符：separator */\n\n\n  if (menuItem.type === 'separator') {\n    return React.createElement(Menu.Divider, {\n      key: String(menuItem.id) + idx\n    });\n  }\n  /** 根结点：root */\n\n\n  if (menuItem.type === 'root') {\n    return React.createElement(Menu, {\n      hasIcon: true\n    }, submenu.map((item, submenuIdx) => renderMenuOptions({\n      idx: submenuIdx,\n      target,\n      commandService,\n      modelService,\n      menuOptions: item,\n      onHide\n    })));\n  }\n  /** 子菜单：submenu */\n\n\n  if (menuItem.submenu && Array.isArray(menuItem.submenu)) {\n    const Icon = IconStore.get(iconName);\n    const isDisable = !isEnabled;\n    return React.createElement(Menu.SubMenu, {\n      key: String(id),\n      text: label,\n      disabled: isDisable || submenu.length === 0,\n      icon: Icon ? React.createElement(Icon, null) : null,\n      active: active,\n      hotkey: hotkey\n    }, submenu.map((item, submenuIdx) => renderMenuOptions({\n      idx: submenuIdx,\n      target,\n      commandService,\n      modelService,\n      menuOptions: item,\n      onHide\n    })));\n  }\n  /** 叶子节点 */\n\n\n  const Icon = IconStore.get(iconName);\n\n  if (render) {\n    return React.createElement(render, {\n      menuItem,\n      target,\n      commandService,\n      modelService,\n      onHide\n    }, [React.createElement(Menu.Item, {\n      key: String(id),\n      text: label,\n      disabled: !isEnabled,\n      icon: Icon ? React.createElement(Icon, null) : null,\n      active: active,\n      hotkey: hotkey\n    })]);\n  }\n\n  return React.createElement(Menu.Item, {\n    key: String(id),\n    text: label,\n    disabled: !isEnabled,\n    icon: Icon ? React.createElement(Icon, null) : null,\n    active: active,\n    hotkey: hotkey,\n    onClick: () => __awaiter(void 0, void 0, void 0, function* () {\n      yield onClick({\n        menuItem,\n        target,\n        commandService,\n        modelService\n      });\n      onHide && onHide();\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}