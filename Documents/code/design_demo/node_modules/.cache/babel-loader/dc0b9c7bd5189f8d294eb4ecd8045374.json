{"ast":null,"code":"import { Geometry } from '../geometry';\nexport class Segment extends Geometry {\n  constructor() {\n    super(...arguments);\n    this.isVisible = true;\n    this.isSegment = true;\n    this.isSubpathStart = false;\n  }\n\n  get end() {\n    return this.endPoint;\n  }\n\n  get start() {\n    if (this.previousSegment == null) {\n      throw new Error('Missing previous segment. (This segment cannot be the ' + 'first segment of a path, or segment has not yet been ' + 'added to a path.)');\n    }\n\n    return this.previousSegment.end;\n  }\n\n  closestPointT(p, options) {\n    if (this.closestPointNormalizedLength) {\n      return this.closestPointNormalizedLength(p);\n    }\n\n    throw new Error('Neither `closestPointT` nor `closestPointNormalizedLength` method is implemented.');\n  } // eslint-disable-next-line\n\n\n  lengthAtT(t, options) {\n    if (t <= 0) {\n      return 0;\n    }\n\n    const length = this.length();\n\n    if (t >= 1) {\n      return length;\n    }\n\n    return length * t;\n  }\n\n  divideAtT(t) {\n    if (this.divideAt) {\n      return this.divideAt(t);\n    }\n\n    throw new Error('Neither `divideAtT` nor `divideAt` method is implemented.');\n  }\n\n  pointAtT(t) {\n    if (this.pointAt) {\n      return this.pointAt(t);\n    }\n\n    throw new Error('Neither `pointAtT` nor `pointAt` method is implemented.');\n  }\n\n  tangentAtT(t) {\n    if (this.tangentAt) {\n      return this.tangentAt(t);\n    }\n\n    throw new Error('Neither `tangentAtT` nor `tangentAt` method is implemented.');\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}