{"ast":null,"code":"import { __awaiter } from \"tslib\";\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nimport 'reflect-metadata';\n/** Toolbar扩展点依赖 */\n\nimport { KeyBindingRegistry } from './keybinding-registry';\nimport { IKeyBindingContribution, IKeyBindingOptionProvider } from './interface';\nimport { Contribution, Module, Syringe } from 'mana-syringe';\nexport const registerKeybindingConfig = (register, config) => {\n  register(IKeyBindingOptionProvider, {\n    useDynamic: () => {\n      return {\n        getOption: () => __awaiter(void 0, void 0, void 0, function* () {\n          return config.getConfig();\n        })\n      };\n    },\n    lifecycle: Syringe.Lifecycle.singleton\n  });\n};\n/** 依赖扩展模块，必须要加载 */\n\nexport const createModule = keyBindingConfig => {\n  return Module(register => {\n    /** 绑定 context 配置 */\n    registerKeybindingConfig(register, keyBindingConfig);\n    /** 注册 IContextContribution */\n\n    Contribution.register(register, IKeyBindingContribution);\n    /** 注册 KeyBindingRegistry 到 IFrontendApplicationContribution  */\n\n    /** 注册 KeyBindingRegistry */\n\n    /** 注册 KeyBindingRegistry alias  IKeybindingService */\n\n    register(KeyBindingRegistry);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}