{"ast":null,"code":"import React, { useState, useRef } from 'react';\nimport { render, createPortal } from 'react-dom';\nimport { Button } from 'antd';\nimport { SketchPicker } from 'react-color';\nimport { prefix } from '../constants';\n\nvar ColorPicker = function (props) {\n  var label = props.label,\n      _a = props.value,\n      value = _a === void 0 ? '' : _a,\n      onChange = props.onChange;\n\n  var _b = useState(false),\n      show = _b[0],\n      setShow = _b[1];\n\n  var colorRef = useRef(value);\n\n  var PickContainer = function () {\n    return React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"-pick-color-container\")\n    }, React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"-popover\")\n    }, React.createElement(SketchPicker, {\n      style: {\n        width: '100%'\n      },\n      onChange: function (color) {\n        colorRef.current = color.hex;\n      }\n    }), React.createElement(\"div\", {\n      className: \"foolter\"\n    }, React.createElement(Button, {\n      onClick: function () {\n        setShow(false);\n      }\n    }, \"\\u53D6\\u6D88\"), React.createElement(Button, {\n      type: \"primary\",\n      onClick: function () {\n        onChange === null || onChange === void 0 ? void 0 : onChange(colorRef.current);\n        setShow(false);\n      }\n    }, \"\\u786E\\u8BA4\"))));\n  };\n\n  var CreatePickColorContainer = function (visible) {\n    var existElements = document.getElementsByClassName(\"\".concat(prefix, \"-pick-color-container\"));\n\n    if (existElements.length) {\n      Array.from(existElements).forEach(function (ele) {\n        var _a;\n\n        (_a = ele.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(ele);\n      });\n    }\n\n    if (!visible) {\n      return;\n    }\n\n    var div = document.createElement('div');\n    render(createPortal(React.createElement(PickContainer, null), document.getElementsByTagName('body')[0]), div);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"group\"\n  }, label && React.createElement(\"label\", null, label), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"-color-container\"),\n    onClick: function () {\n      setShow(true);\n    }\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"-color\"),\n    style: {\n      backgroundColor: value,\n      height: '100%'\n    }\n  })), CreatePickColorContainer(show));\n};\n\nexport default ColorPicker;","map":null,"metadata":{},"sourceType":"module"}