{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useState } from 'react'; // import { JsonSchemaForm } from '@antv/xflow';\n\nimport { WorkspacePanel } from '@antv/xflow';\nimport { DoubleRightOutlined, DoubleLeftOutlined } from '@ant-design/icons';\nimport { JsonSchemaForm } from '../canvas-json-schema-form';\nimport { defaultFormSchemaService } from './form-schema-service';\nimport { defaultControlMapService } from './control-map-service';\nexport var CONTAINER_CLASS = 'flowchart-editor-panel-collpase';\nexport var FormPanel = function (props) {\n  var _a = props.controlMapService,\n      controlMapService = _a === void 0 ? defaultControlMapService : _a,\n      _b = props.formSchemaService,\n      formSchemaService = _b === void 0 ? defaultFormSchemaService : _b,\n      _c = props.position,\n      position = _c === void 0 ? {\n    width: 240,\n    top: 0,\n    bottom: 0,\n    right: 0\n  } : _c,\n      _d = props.show,\n      show = _d === void 0 ? true : _d,\n      rest = __rest(props, [\"controlMapService\", \"formSchemaService\", \"position\", \"show\"]);\n\n  if (!show) {\n    return null;\n  }\n\n  var _e = position.width,\n      width = _e === void 0 ? 200 : _e,\n      right = position.right;\n\n  var _f = useState(false),\n      collpased = _f[0],\n      setCollpased = _f[1];\n\n  return React.createElement(WorkspacePanel, {\n    className: CONTAINER_CLASS,\n    position: __assign(__assign({}, position), {\n      right: !collpased ? right : -width\n    })\n  }, React.createElement(\"div\", {\n    className: \"\".concat(CONTAINER_CLASS, \"-wrapper\")\n  }, React.createElement(JsonSchemaForm, __assign({\n    targetType: ['node', 'edge', 'canvas', 'group'],\n    controlMapService: controlMapService,\n    formSchemaService: formSchemaService,\n    header: null,\n    position: __assign(__assign({}, position), {\n      top: 0\n    }),\n    prefixClz: \"charts-form-editor\"\n  }, rest)), React.createElement(\"div\", {\n    className: \"\".concat(CONTAINER_CLASS, \"-icon\"),\n    style: {\n      top: 21,\n      left: !collpased ? -10 : -20,\n      borderRadius: !collpased ? '50%' : '50% 0 0  50%',\n      borderRight: !collpased ? '' : 'none'\n    },\n    onClick: function () {\n      setCollpased(!collpased);\n    }\n  }, collpased ? React.createElement(DoubleLeftOutlined, null) : React.createElement(DoubleRightOutlined, null))));\n};","map":null,"metadata":{},"sourceType":"module"}