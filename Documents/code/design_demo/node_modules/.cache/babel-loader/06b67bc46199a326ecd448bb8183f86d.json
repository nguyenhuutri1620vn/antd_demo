{"ast":null,"code":"import jQuery from 'jquery';\nlet millimeterSize;\nconst supportedUnits = {\n  px(val) {\n    return val;\n  },\n\n  mm(val) {\n    return millimeterSize * val;\n  },\n\n  cm(val) {\n    return millimeterSize * val * 10;\n  },\n\n  in(val) {\n    return millimeterSize * val * 25.4;\n  },\n\n  pt(val) {\n    return millimeterSize * (25.4 * val / 72);\n  },\n\n  pc(val) {\n    return millimeterSize * (25.4 * val / 6);\n  }\n\n}; // eslint-disable-next-line\n\nexport var Unit;\n\n(function (Unit) {\n  function measure(cssWidth, cssHeight, unit) {\n    const div = jQuery('<div/>').css({\n      display: 'inline-block',\n      position: 'absolute',\n      left: -15000,\n      top: -15000,\n      width: cssWidth + (unit || ''),\n      height: cssHeight + (unit || '')\n    }).appendTo(document.body);\n    const size = {\n      width: div.width() || 0,\n      height: div.height() || 0\n    };\n    div.remove();\n    return size;\n  }\n\n  Unit.measure = measure;\n\n  function toPx(val, unit) {\n    if (millimeterSize == null) {\n      millimeterSize = measure(`1`, `1`, 'mm').width;\n    }\n\n    const convert = unit ? supportedUnits[unit] : null;\n\n    if (convert) {\n      return convert(val);\n    }\n\n    return val;\n  }\n\n  Unit.toPx = toPx;\n})(Unit || (Unit = {}));","map":null,"metadata":{},"sourceType":"module"}