{"ast":null,"code":"function max(x) {\n  if (x.length === 0) {\n    throw new Error('max requires at least one data point');\n  }\n\n  var value = x[0];\n\n  for (var i = 1; i < x.length; i++) {\n    if (x[i] > value) {\n      value = x[i];\n    }\n  }\n\n  return value * 1;\n}\n\nfunction min(x) {\n  if (x.length === 0) {\n    throw new Error('min requires at least one data point');\n  }\n\n  var value = x[0];\n\n  for (var i = 1; i < x.length; i++) {\n    if (x[i] < value) {\n      value = x[i];\n    }\n  }\n\n  return value * 1;\n}\n\nfunction sum(x) {\n  if (x.length === 0) {\n    return 0;\n  }\n\n  var sumNum = x[0] * 1;\n\n  for (var i = 1; i < x.length; i++) {\n    sumNum += x[i] * 1;\n  }\n\n  return sumNum;\n}\n\nfunction mean(x) {\n  if (x.length === 0) {\n    throw new Error('mean requires at least one data point');\n  }\n\n  return sum(x) / x.length;\n}\n\nfunction mode(x) {\n  if (x.length === 0) {\n    throw new Error('mean requires at least one data point');\n  }\n\n  if (x.length < 3) {\n    return x[0];\n  }\n\n  x.sort();\n  var last = x[0];\n  var value = NaN;\n  var maxSeen = 0;\n  var seenThis = 1;\n\n  for (var i = 1; i < x.length + 1; i++) {\n    if (x[i] !== last) {\n      if (seenThis > maxSeen) {\n        maxSeen = seenThis;\n        value = last;\n      }\n\n      seenThis = 1;\n      last = x[i];\n    } else {\n      seenThis++;\n    }\n  }\n\n  return value * 1;\n}\n\nexport { sum, max, min, mean, mode };\nexport var statMap = {\n  min: min,\n  max: max,\n  mean: mean,\n  sum: sum,\n  mode: mode\n};\nexport function getColumn(data, columnName) {\n  return data.map(function (item) {\n    return item[columnName];\n  });\n}\nexport function getSatByColumn(type, column) {\n  return statMap[type](column);\n}","map":null,"metadata":{},"sourceType":"module"}