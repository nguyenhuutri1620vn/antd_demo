{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { deepMix, isString } from '@antv/util';\nimport { parsePathString } from '@antv/path-util';\nimport { pathToPoints, getClosedSpline, roundedHull, paddedHull } from '../util/path';\nimport { isPolygonsIntersect } from '../util/math';\nimport { genConvexHull } from '../element/hull/convexHull';\nimport { genBubbleSet } from '../element/hull/bubbleset';\n/**\n * 用于包裹内部的成员的轮廓。\n * convex hull(凸包)：http://geomalgorithms.com/a10-_hull-1.html#Monotone%20Chain\n * bubble: 使用 bubbleset算法，refer: http://vialab.science.uoit.ca/wp-content/papercite-data/pdf/col2009c.pdf\n * 通过配置 padding 可以调节包裹轮廓对节点的松紧程度\n */\n\nvar Hull =\n/** @class */\nfunction () {\n  function Hull(graph, cfg) {\n    this.cfg = deepMix(this.getDefaultCfg(), cfg);\n    this.graph = graph;\n    this.id = this.cfg.id;\n    this.group = this.cfg.group;\n    this.members = this.cfg.members.map(function (item) {\n      return isString(item) ? graph.findById(item) : item;\n    });\n    this.nonMembers = this.cfg.nonMembers.map(function (item) {\n      return isString(item) ? graph.findById(item) : item;\n    });\n    this.setPadding();\n    this.setType();\n    this.path = this.calcPath(this.members, this.nonMembers);\n    this.render();\n  }\n\n  Hull.prototype.getDefaultCfg = function () {\n    return {\n      id: 'g6-hull',\n      type: 'round-convex',\n      members: [],\n      nonMembers: [],\n      style: {\n        fill: 'lightblue',\n        stroke: 'blue',\n        opacity: 0.2\n      },\n      padding: 10\n    };\n  };\n\n  Hull.prototype.setPadding = function () {\n    var nodeSize = this.members.length && this.members[0].getKeyShape().getCanvasBBox().width / 2;\n    this.padding = this.cfg.padding > 0 ? this.cfg.padding + nodeSize : 10 + nodeSize;\n    this.cfg.bubbleCfg = {\n      nodeR0: this.padding - nodeSize,\n      nodeR1: this.padding - nodeSize,\n      morphBuffer: this.padding - nodeSize\n    };\n  };\n\n  Hull.prototype.setType = function () {\n    this.type = this.cfg.type;\n\n    if (this.members.length < 3) {\n      this.type = 'round-convex';\n    }\n\n    if (this.type !== 'round-convex' && this.type !== 'smooth-convex' && this.type !== 'bubble') {\n      console.warn('The hull type should be either round-convex, smooth-convex or bubble, round-convex is used by default.');\n      this.type = 'round-convex';\n    }\n  };\n\n  Hull.prototype.calcPath = function (members, nonMembers) {\n    var contour, path, hull;\n\n    switch (this.type) {\n      case 'round-convex':\n        contour = genConvexHull(members);\n        hull = roundedHull(contour.map(function (p) {\n          return [p.x, p.y];\n        }), this.padding);\n        path = parsePathString(hull);\n        break;\n\n      case 'smooth-convex':\n        contour = genConvexHull(members);\n\n        if (contour.length === 2) {\n          hull = roundedHull(contour.map(function (p) {\n            return [p.x, p.y];\n          }), this.padding);\n          path = parsePathString(hull);\n        } else if (contour.length > 2) {\n          hull = paddedHull(contour.map(function (p) {\n            return [p.x, p.y];\n          }), this.padding);\n          path = getClosedSpline(hull);\n        }\n\n        break;\n\n      case 'bubble':\n        contour = genBubbleSet(members, nonMembers, this.cfg.bubbleCfg);\n        path = contour.length >= 2 && getClosedSpline(contour);\n        break;\n\n      default:\n    }\n\n    return path;\n  };\n\n  Hull.prototype.render = function () {\n    this.group.addShape('path', {\n      attrs: __assign({\n        path: this.path\n      }, this.cfg.style),\n      id: this.id,\n      name: this.cfg.id,\n      capture: false\n    });\n    this.group.toBack();\n  };\n  /**\n   * 增加hull的成员，同时如果该成员原先在nonMembers中，则从nonMembers中去掉\n   * @param item 节点实例\n   * @return boolean 添加成功返回 true，否则返回 false\n   */\n\n\n  Hull.prototype.addMember = function (item) {\n    if (!item) return;\n    if (isString(item)) item = this.graph.findById(item);\n    this.members.push(item);\n    var index = this.nonMembers.indexOf(item);\n\n    if (index > -1) {\n      this.nonMembers.splice(index, 1);\n    }\n\n    this.updateData(this.members, this.nonMembers);\n    return true;\n  };\n  /**\n   * 增加hull需要排除的节点，同时如果该成员原先在members中，则从members中去掉\n   * @param item 节点实例\n   * @return boolean 添加成功返回 true，否则返回 false\n   */\n\n\n  Hull.prototype.addNonMember = function (item) {\n    if (!item) return;\n    if (isString(item)) item = this.graph.findById(item);\n    this.nonMembers.push(item);\n    var index = this.members.indexOf(item);\n\n    if (index > -1) {\n      this.members.splice(index, 1);\n    }\n\n    this.updateData(this.members, this.nonMembers);\n    return true;\n  };\n  /**\n   * 移除hull中的成员\n   * @param node 节点实例\n   * @return boolean 移除成功返回 true，否则返回 false\n   */\n\n\n  Hull.prototype.removeMember = function (item) {\n    if (!item) return;\n    if (isString(item)) item = this.graph.findById(item);\n    var index = this.members.indexOf(item);\n\n    if (index > -1) {\n      this.members.splice(index, 1);\n      this.updateData(this.members, this.nonMembers);\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * @param node 节点实例\n   * @return boolean 移除成功返回 true，否则返回 false\n   */\n\n\n  Hull.prototype.removeNonMember = function (item) {\n    if (!item) return;\n    if (isString(item)) item = this.graph.findById(item);\n    var index = this.nonMembers.indexOf(item);\n\n    if (index > -1) {\n      this.nonMembers.splice(index, 1);\n      this.updateData(this.members, this.nonMembers);\n      return true;\n    }\n\n    return false;\n  };\n\n  Hull.prototype.updateData = function (members, nonMembers) {\n    var _this = this;\n\n    this.group.findById(this.id).remove();\n    if (members) this.members = members.map(function (item) {\n      return isString(item) ? _this.graph.findById(item) : item;\n    });\n    if (nonMembers) this.nonMembers = nonMembers.map(function (item) {\n      return isString(item) ? _this.graph.findById(item) : item;\n    });\n    this.path = this.calcPath(this.members, this.nonMembers);\n    this.render();\n  };\n\n  Hull.prototype.updateStyle = function (cfg) {\n    var path = this.group.findById(this.id);\n    path.attr(__assign({}, cfg));\n  };\n  /**\n   * 更新 hull\n   * @param cfg hull 配置项\n   */\n\n\n  Hull.prototype.updateCfg = function (cfg) {\n    var _this = this;\n\n    this.cfg = deepMix(this.cfg, cfg);\n    this.id = this.cfg.id;\n    this.group = this.cfg.group;\n\n    if (cfg.members) {\n      this.members = this.cfg.members.map(function (item) {\n        return isString(item) ? _this.graph.findById(item) : item;\n      });\n    }\n\n    if (cfg.nonMembers) {\n      this.nonMembers = this.cfg.nonMembers.map(function (item) {\n        return isString(item) ? _this.graph.findById(item) : item;\n      });\n    } // TODO padding 设置太大，会影响到 contain 结果\n\n\n    this.setPadding();\n    this.setType();\n    this.path = this.calcPath(this.members, this.nonMembers);\n    this.render();\n  };\n  /**\n   * 判断是否在hull内部\n   * @param item\n   */\n\n\n  Hull.prototype.contain = function (item) {\n    var _this = this;\n\n    var nodeItem;\n\n    if (isString(item)) {\n      nodeItem = this.graph.findById(item);\n    } else {\n      nodeItem = item;\n    }\n\n    var shapePoints;\n    var shape = nodeItem.getKeyShape();\n\n    if (nodeItem.get('type') === 'path') {\n      shapePoints = pathToPoints(shape.attr('path'));\n    } else {\n      var shapeBBox = shape.getCanvasBBox();\n      shapePoints = [[shapeBBox.minX, shapeBBox.minY], [shapeBBox.maxX, shapeBBox.minY], [shapeBBox.maxX, shapeBBox.maxY], [shapeBBox.minX, shapeBBox.maxY]];\n    }\n\n    shapePoints = shapePoints.map(function (canvasPoint) {\n      var point = _this.graph.getPointByCanvas(canvasPoint[0], canvasPoint[1]);\n\n      return [point.x, point.y];\n    });\n    return isPolygonsIntersect(shapePoints, pathToPoints(this.path));\n  };\n\n  Hull.prototype.destroy = function () {\n    this.group.remove();\n    this.cfg = null;\n  };\n\n  return Hull;\n}();\n\nexport default Hull;","map":null,"metadata":{},"sourceType":"module"}