{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { useXFlowApp, createComponentModel, DisposableCollection } from '@antv/xflow-core';\nimport React from 'react';\nexport const useToolbarModel = props => {\n  const {\n    config\n  } = props;\n  const modelId = config.moduleId;\n  const app = useXFlowApp();\n  const [state, setState, toolbarModel, isModelReady] = createComponentModel({\n    name: modelId,\n    layout: props.layout,\n    mainGroups: [],\n    extraGroups: [],\n    customRender: null\n  });\n  /** 注册全局的model */\n\n  React.useEffect(() => {\n    const toDispose = new DisposableCollection();\n    const deferredModel = app.modelService.findDeferredModel(modelId);\n\n    if (!deferredModel) {\n      const {\n        toolbarCustomRender,\n        toolbarModelService\n      } = config.getConfig();\n      const d = app.modelService.registerModel({\n        id: modelId,\n        modelFactory: () => toolbarModel,\n        watchChange: self => __awaiter(void 0, void 0, void 0, function* () {\n          if (toolbarModelService) {\n            yield toolbarModelService(self, app.modelService, toDispose);\n          }\n\n          if (toolbarCustomRender) {\n            const updateCustomRender = customRender => {\n              self.setValue(m => m.customRender = customRender);\n            };\n\n            yield toolbarCustomRender(app.modelService, updateCustomRender);\n          }\n\n          return toDispose;\n        })\n      });\n      toDispose.push(d);\n    }\n\n    return () => {\n      toDispose.dispose();\n    };\n    /* eslint-disable-next-line  */\n  }, []);\n  return {\n    isModelReady,\n    state,\n    setState,\n    toolbarModel\n  };\n};","map":null,"metadata":{},"sourceType":"module"}