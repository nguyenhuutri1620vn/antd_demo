{"ast":null,"code":"/**\n * @fileOverview random layout\n * @author shiwu.wyy@antfin.com\n */\nimport { Base } from \"./base\";\n/**\n * 随机布局\n */\n\nexport class RandomLayout extends Base {\n  constructor(options) {\n    super();\n    /** 布局中心 */\n\n    this.center = [0, 0];\n    /** 宽度 */\n\n    this.width = 300;\n    /** 高度 */\n\n    this.height = 300;\n    this.nodes = [];\n    this.edges = [];\n    /** 迭代结束的回调函数 */\n\n    this.onLayoutEnd = () => {};\n\n    this.updateCfg(options);\n  }\n\n  getDefaultCfg() {\n    return {\n      center: [0, 0],\n      width: 300,\n      height: 300\n    };\n  }\n  /**\n   * 执行布局\n   */\n\n\n  execute() {\n    const self = this;\n    const nodes = self.nodes;\n    const layoutScale = 0.9;\n    const center = self.center;\n\n    if (!self.width && typeof window !== \"undefined\") {\n      self.width = window.innerWidth;\n    }\n\n    if (!self.height && typeof window !== \"undefined\") {\n      self.height = window.innerHeight;\n    }\n\n    if (nodes) {\n      nodes.forEach(node => {\n        node.x = (Math.random() - 0.5) * layoutScale * self.width + center[0];\n        node.y = (Math.random() - 0.5) * layoutScale * self.height + center[1];\n      });\n    }\n\n    if (self.onLayoutEnd) self.onLayoutEnd();\n    return {\n      nodes,\n      edges: this.edges\n    };\n  }\n\n  getType() {\n    return \"random\";\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}