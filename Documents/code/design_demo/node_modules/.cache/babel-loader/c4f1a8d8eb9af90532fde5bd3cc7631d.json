{"ast":null,"code":"/**\n * @fileOverview Force Layout Grid Align layout\n * @author wenyanqi\n */\nimport { Base } from \"../base\";\nimport layout from './core';\nexport class ERLayout extends Base {\n  constructor(options) {\n    super();\n    this.width = 300;\n    this.height = 300;\n    this.nodeMinGap = 50;\n    /** 迭代结束的回调函数 */\n\n    this.onLayoutEnd = () => {};\n\n    if (options) {\n      this.updateCfg(options);\n    }\n  }\n\n  getDefaultCfg() {\n    return {\n      width: 300,\n      height: 300,\n      nodeMinGap: 50\n    };\n  }\n  /**\n   * 执行布局\n   */\n\n\n  execute() {\n    const self = this;\n    const nodes = self.nodes;\n    const edges = self.edges; // 节点初始化，size初始化\n\n    nodes === null || nodes === void 0 ? void 0 : nodes.forEach(node => {\n      if (!node.size) {\n        node.size = [50, 50];\n      }\n    });\n    return layout({\n      nodes,\n      edges\n    }, {\n      width: this.width,\n      height: this.height,\n      nodeMinGap: this.nodeMinGap\n    }).then(() => {\n      if (self.onLayoutEnd) self.onLayoutEnd();\n    });\n  }\n\n  getType() {\n    return \"er\";\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}