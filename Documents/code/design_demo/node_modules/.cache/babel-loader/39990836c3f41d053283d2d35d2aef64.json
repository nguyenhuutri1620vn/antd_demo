{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar defaultOptions = {\n  panStep: 100,\n  bearingStep: 15,\n  pitchStep: 10\n};\n\nvar KeyboardHandler = function () {\n  function KeyboardHandler() {\n    _classCallCheck(this, KeyboardHandler);\n\n    _defineProperty(this, \"enabled\", void 0);\n\n    _defineProperty(this, \"active\", void 0);\n\n    _defineProperty(this, \"panStep\", void 0);\n\n    _defineProperty(this, \"bearingStep\", void 0);\n\n    _defineProperty(this, \"pitchStep\", void 0);\n\n    var stepOptions = defaultOptions;\n    this.panStep = stepOptions.panStep;\n    this.bearingStep = stepOptions.bearingStep;\n    this.pitchStep = stepOptions.pitchStep;\n  }\n\n  _createClass(KeyboardHandler, [{\n    key: \"reset\",\n    value: function reset() {\n      this.active = false;\n    }\n  }, {\n    key: \"keydown\",\n    value: function keydown(e) {\n      var _this = this;\n\n      if (e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      var zoomDir = 0;\n      var bearingDir = 0;\n      var pitchDir = 0;\n      var xDir = 0;\n      var yDir = 0;\n\n      switch (e.keyCode) {\n        case 61:\n        case 107:\n        case 171:\n        case 187:\n          zoomDir = 1;\n          break;\n\n        case 189:\n        case 109:\n        case 173:\n          zoomDir = -1;\n          break;\n\n        case 37:\n          if (e.shiftKey) {\n            bearingDir = -1;\n          } else {\n            e.preventDefault();\n            xDir = -1;\n          }\n\n          break;\n\n        case 39:\n          if (e.shiftKey) {\n            bearingDir = 1;\n          } else {\n            e.preventDefault();\n            xDir = 1;\n          }\n\n          break;\n\n        case 38:\n          if (e.shiftKey) {\n            pitchDir = 1;\n          } else {\n            e.preventDefault();\n            yDir = -1;\n          }\n\n          break;\n\n        case 40:\n          if (e.shiftKey) {\n            pitchDir = -1;\n          } else {\n            e.preventDefault();\n            yDir = 1;\n          }\n\n          break;\n\n        default:\n          return;\n      }\n\n      return {\n        cameraAnimation: function cameraAnimation(map) {\n          var zoom = map.getZoom();\n          map.easeTo({\n            duration: 300,\n            easeId: 'keyboardHandler',\n            easing: easeOut,\n            zoom: zoomDir ? Math.round(zoom) + zoomDir * (e.shiftKey ? 2 : 1) : zoom,\n            bearing: map.getBearing() + bearingDir * _this.bearingStep,\n            pitch: map.getPitch() + pitchDir * _this.pitchStep,\n            offset: [-xDir * _this.panStep, -yDir * _this.panStep],\n            center: map.getCenter()\n          }, {\n            originalEvent: e\n          });\n        }\n      };\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.enabled = true;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.enabled = false;\n      this.reset();\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.enabled;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.active;\n    }\n  }]);\n\n  return KeyboardHandler;\n}();\n\nfunction easeOut(t) {\n  return t * (2 - t);\n}\n\nexport default KeyboardHandler;","map":null,"metadata":{},"sourceType":"module"}