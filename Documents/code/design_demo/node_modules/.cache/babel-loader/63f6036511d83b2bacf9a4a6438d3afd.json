{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _merge from \"lodash/merge\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { DOM } from '@antv/l7-utils';\nimport Camera from './camera';\n\nfunction loadStyles(css, doc) {\n  var isMiniAli = typeof my !== 'undefined' && !!my && typeof my.showToast === 'function' && my.isFRM !== true;\n  var isWeChatMiniProgram = typeof wx !== 'undefined' && wx !== null && (typeof wx.request !== 'undefined' || typeof wx.miniProgram !== 'undefined');\n\n  if (isMiniAli || isWeChatMiniProgram) {\n    return;\n  }\n\n  if (!doc) doc = document;\n\n  if (!doc) {\n    return;\n  }\n\n  var head = doc.head || doc.getElementsByTagName('head')[0];\n\n  if (!head) {\n    head = doc.createElement('head');\n    var body = doc.body || doc.getElementsByTagName('body')[0];\n\n    if (body) {\n      body.parentNode.insertBefore(head, body);\n    } else {\n      doc.documentElement.appendChild(head);\n    }\n  }\n\n  var style = doc.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(doc.createTextNode(css));\n  }\n\n  head.appendChild(style);\n  return style;\n}\n\nloadStyles(\".l7-map {\\n  font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;\\n  overflow: hidden;\\n  position: relative;\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n}\\n\\n.l7-canvas {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\\n\\n.l7-map:-webkit-full-screen {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.l7-canary {\\n  background-color: salmon;\\n}\\n\\n.l7-canvas-container.l7-interactive,\\n.l7-ctrl-group button.l7-ctrl-compass {\\n  cursor: -webkit-grab;\\n  cursor: grab;\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n\\n.l7-canvas-container.l7-interactive.l7-track-pointer {\\n  cursor: pointer;\\n}\\n\\n.l7-canvas-container.l7-interactive:active,\\n.l7-ctrl-group button.l7-ctrl-compass:active {\\n  cursor: -webkit-grabbing;\\n  cursor: grabbing;\\n}\\n\\n.l7-canvas-container.l7-touch-zoom-rotate,\\n.l7-canvas-container.l7-touch-zoom-rotate .l7-canvas {\\n  -ms-touch-action: pan-x pan-y;\\n      touch-action: pan-x pan-y;\\n}\\n\\n.l7-canvas-container.l7-touch-drag-pan,\\n.l7-canvas-container.l7-touch-drag-pan .l7-canvas {\\n  -ms-touch-action: pinch-zoom;\\n      touch-action: pinch-zoom;\\n}\\n\\n.l7-canvas-container.l7-touch-zoom-rotate.l7-touch-drag-pan,\\n.l7-canvas-container.l7-touch-zoom-rotate.l7-touch-drag-pan .l7-canvas {\\n  -ms-touch-action: none;\\n      touch-action: none;\\n}\\n\\n.l7-ctrl-top-left,\\n.l7-ctrl-top-right,\\n.l7-ctrl-bottom-left,\\n.l7-ctrl-bottom-right { position: absolute; pointer-events: none; z-index: 2; }\\n.l7-ctrl-top-left     { top: 0; left: 0; }\\n.l7-ctrl-top-right    { top: 0; right: 0; }\\n.l7-ctrl-bottom-left  { bottom: 0; left: 0; }\\n.l7-ctrl-bottom-right { right: 0; bottom: 0; }\\n\\n.l7-ctrl {\\n  clear: both;\\n  pointer-events: auto;\\n\\n  /* workaround for a Safari bug https://github.com/mapbox/mapbox-gl-js/issues/8185 */\\n  -webkit-transform: translate(0, 0);\\n          transform: translate(0, 0);\\n}\\n.l7-ctrl-top-left .l7-ctrl     { margin: 10px 0 0 10px; float: left; }\\n.l7-ctrl-top-right .l7-ctrl    { margin: 10px 10px 0 0; float: right; }\\n.l7-ctrl-bottom-left .l7-ctrl  { margin: 0 0 10px 10px; float: left; }\\n.l7-ctrl-bottom-right .l7-ctrl { margin: 0 10px 10px 0; float: right; }\\n\\n\\n.l7-crosshair,\\n.l7-crosshair .l7-interactive,\\n.l7-crosshair .l7-interactive:active {\\n    cursor: crosshair;\\n}\\n\\n.l7-boxzoom {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 0;\\n    height: 0;\\n    background: #fff;\\n    border: 2px dotted #202020;\\n    opacity: 0.5;\\n    z-index: 10;\\n}\\n\");\nimport LngLat from './geo/lng_lat';\nimport LngLatBounds from './geo/lng_lat_bounds';\nimport Point from './geo/point';\nimport HandlerManager from './handler/handler_manager';\nimport { renderframe } from './util';\nimport { PerformanceUtils } from './utils/performance';\nimport TaskQueue from './utils/task_queue';\nvar defaultMinZoom = -2;\nvar defaultMaxZoom = 22;\nvar defaultMinPitch = 0;\nvar defaultMaxPitch = 60;\nvar DefaultOptions = {\n  hash: false,\n  zoom: -1,\n  center: [112, 32],\n  pitch: 0,\n  bearing: 0,\n  interactive: true,\n  minZoom: defaultMinZoom,\n  maxZoom: defaultMaxZoom,\n  minPitch: defaultMinPitch,\n  maxPitch: defaultMaxPitch,\n  scrollZoom: true,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n  bearingSnap: 7,\n  clickTolerance: 3,\n  pitchWithRotate: true,\n  trackResize: true,\n  renderWorldCopies: true\n};\nexport var EarthMap = function (_Camera) {\n  _inherits(EarthMap, _Camera);\n\n  var _super = _createSuper(EarthMap);\n\n  function EarthMap(options) {\n    var _this;\n\n    _classCallCheck(this, EarthMap);\n\n    _this = _super.call(this, _merge({}, DefaultOptions, options));\n\n    _defineProperty(_assertThisInitialized(_this), \"doubleClickZoom\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"dragRotate\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"dragPan\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"touchZoomRotate\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollZoom\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"keyboard\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"touchPitch\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"boxZoom\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"handlers\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"canvas\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"canvasContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTaskQueue\", new TaskQueue());\n\n    _defineProperty(_assertThisInitialized(_this), \"frame\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"trackResize\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"onWindowOnline\", function () {\n      _this.update();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onWindowResize\", function (event) {\n      if (_this.trackResize) {\n        _this.resize({\n          originalEvent: event\n        }).update();\n      }\n    });\n\n    _this.initContainer();\n\n    _this.resize();\n\n    _this.handlers = new HandlerManager(_assertThisInitialized(_this), _this.options);\n\n    if (typeof window !== 'undefined') {\n      window.addEventListener('online', _this.onWindowOnline, false);\n      window.addEventListener('resize', _this.onWindowResize, false);\n      window.addEventListener('orientationchange', _this.onWindowResize, false);\n    }\n\n    return _this;\n  }\n\n  _createClass(EarthMap, [{\n    key: \"resize\",\n    value: function resize(eventData) {\n      var dimensions = this.containerDimensions();\n      var width = dimensions[0];\n      var height = dimensions[1];\n      this.transform.resize(width, height);\n      var fireMoving = !this.moving;\n\n      if (fireMoving) {\n        this.stop();\n        this.emit('movestart', new Event('movestart', eventData));\n        this.emit('move', new Event('move', eventData));\n      }\n\n      this.emit('resize', new Event('resize', eventData));\n\n      if (fireMoving) {\n        this.emit('moveend', new Event('moveend', eventData));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this.container;\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      return this.canvas;\n    }\n  }, {\n    key: \"getCanvasContainer\",\n    value: function getCanvasContainer() {\n      return this.canvasContainer;\n    }\n  }, {\n    key: \"project\",\n    value: function project(lngLat) {\n      return this.transform.locationPoint(LngLat.convert(lngLat));\n    }\n  }, {\n    key: \"unproject\",\n    value: function unproject(point) {\n      return this.transform.pointLocation(Point.convert(point));\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this.transform.getBounds();\n    }\n  }, {\n    key: \"getMaxBounds\",\n    value: function getMaxBounds() {\n      return this.transform.getMaxBounds();\n    }\n  }, {\n    key: \"setMaxBounds\",\n    value: function setMaxBounds(bounds) {\n      this.transform.setMaxBounds(LngLatBounds.convert(bounds));\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(style) {\n      return;\n    }\n  }, {\n    key: \"setMinZoom\",\n    value: function setMinZoom(minZoom) {\n      minZoom = minZoom === null || minZoom === undefined ? defaultMinZoom : minZoom;\n\n      if (minZoom >= defaultMinZoom && minZoom <= this.transform.maxZoom) {\n        this.transform.minZoom = minZoom;\n\n        if (this.getZoom() < minZoom) {\n          this.setZoom(minZoom);\n        }\n\n        return this;\n      } else {\n        throw new Error(\"minZoom must be between \".concat(defaultMinZoom, \" and the current maxZoom, inclusive\"));\n      }\n    }\n  }, {\n    key: \"getMinZoom\",\n    value: function getMinZoom() {\n      return this.transform.minZoom;\n    }\n  }, {\n    key: \"setMaxZoom\",\n    value: function setMaxZoom(maxZoom) {\n      maxZoom = maxZoom === null || maxZoom === undefined ? defaultMaxZoom : maxZoom;\n\n      if (maxZoom >= this.transform.minZoom) {\n        this.transform.maxZoom = maxZoom;\n\n        if (this.getZoom() > maxZoom) {\n          this.setZoom(maxZoom);\n        }\n\n        return this;\n      } else {\n        throw new Error('maxZoom must be greater than the current minZoom');\n      }\n    }\n  }, {\n    key: \"getMaxZoom\",\n    value: function getMaxZoom() {\n      return this.transform.maxZoom;\n    }\n  }, {\n    key: \"setMinPitch\",\n    value: function setMinPitch(minPitch) {\n      minPitch = minPitch === null || minPitch === undefined ? defaultMinPitch : minPitch;\n\n      if (minPitch < defaultMinPitch) {\n        throw new Error(\"minPitch must be greater than or equal to \".concat(defaultMinPitch));\n      }\n\n      if (minPitch >= defaultMinPitch && minPitch <= this.transform.maxPitch) {\n        this.transform.minPitch = minPitch;\n\n        if (this.getPitch() < minPitch) {\n          this.setPitch(minPitch);\n        }\n\n        return this;\n      } else {\n        throw new Error(\"minPitch must be between \".concat(defaultMinPitch, \" and the current maxPitch, inclusive\"));\n      }\n    }\n  }, {\n    key: \"getMinPitch\",\n    value: function getMinPitch() {\n      return this.transform.minPitch;\n    }\n  }, {\n    key: \"setMaxPitch\",\n    value: function setMaxPitch(maxPitch) {\n      maxPitch = maxPitch === null || maxPitch === undefined ? defaultMaxPitch : maxPitch;\n\n      if (maxPitch > defaultMaxPitch) {\n        throw new Error(\"maxPitch must be less than or equal to \".concat(defaultMaxPitch));\n      }\n\n      if (maxPitch >= this.transform.minPitch) {\n        this.transform.maxPitch = maxPitch;\n\n        if (this.getPitch() > maxPitch) {\n          this.setPitch(maxPitch);\n        }\n\n        return this;\n      } else {\n        throw new Error('maxPitch must be greater than the current minPitch');\n      }\n    }\n  }, {\n    key: \"getMaxPitch\",\n    value: function getMaxPitch() {\n      return this.transform.maxPitch;\n    }\n  }, {\n    key: \"getRenderWorldCopies\",\n    value: function getRenderWorldCopies() {\n      return this.transform.renderWorldCopies;\n    }\n  }, {\n    key: \"setRenderWorldCopies\",\n    value: function setRenderWorldCopies(renderWorldCopies) {\n      this.transform.renderWorldCopies = !!renderWorldCopies;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.frame) {\n        this.frame.cancel();\n        this.frame = null;\n      }\n\n      this.renderTaskQueue.clear();\n    }\n  }, {\n    key: \"requestRenderFrame\",\n    value: function requestRenderFrame(cb) {\n      this.update();\n      return this.renderTaskQueue.add(cb);\n    }\n  }, {\n    key: \"cancelRenderFrame\",\n    value: function cancelRenderFrame(id) {\n      return this.renderTaskQueue.remove(id);\n    }\n  }, {\n    key: \"triggerRepaint\",\n    value: function triggerRepaint() {\n      var _this2 = this;\n\n      if (!this.frame) {\n        this.frame = renderframe(function (paintStartTimeStamp) {\n          PerformanceUtils.frame(paintStartTimeStamp);\n          _this2.frame = null;\n\n          _this2.update(paintStartTimeStamp);\n        });\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(time) {\n      var _this3 = this;\n\n      if (!this.frame) {\n        this.frame = renderframe(function (paintStartTimeStamp) {\n          PerformanceUtils.frame(paintStartTimeStamp);\n          _this3.frame = null;\n\n          _this3.renderTaskQueue.run(time);\n        });\n      }\n    }\n  }, {\n    key: \"initContainer\",\n    value: function initContainer() {\n      if (typeof this.options.container === 'string') {\n        this.container = window.document.getElementById(this.options.container);\n\n        if (!this.container) {\n          throw new Error(\"Container '\".concat(this.options.container, \"' not found.\"));\n        }\n      } else if (this.options.container instanceof HTMLElement) {\n        this.container = this.options.container;\n      } else {\n        throw new Error(\"Invalid type: 'container' must be a String or HTMLElement.\");\n      }\n\n      var container = this.container;\n      container.classList.add('l7-map');\n      var canvasContainer = this.canvasContainer = DOM.create('div', 'l7-canvas-container', container);\n\n      if (this.options.interactive) {\n        canvasContainer.classList.add('l7-interactive');\n      }\n    }\n  }, {\n    key: \"containerDimensions\",\n    value: function containerDimensions() {\n      var width = 0;\n      var height = 0;\n\n      if (this.container) {\n        width = this.container.clientWidth || 400;\n        height = this.container.clientHeight || 300;\n      }\n\n      return [width, height];\n    }\n  }, {\n    key: \"resizeCanvas\",\n    value: function resizeCanvas(width, height) {\n      var pixelRatio = DOM.DPR || 1;\n      this.canvas.width = pixelRatio * width;\n      this.canvas.height = pixelRatio * height;\n      this.canvas.style.width = \"\".concat(width, \"px\");\n      this.canvas.style.height = \"\".concat(height, \"px\");\n    }\n  }]);\n\n  return EarthMap;\n}(Camera);","map":null,"metadata":{},"sourceType":"module"}