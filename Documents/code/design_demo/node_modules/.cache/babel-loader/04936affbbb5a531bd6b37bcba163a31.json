{"ast":null,"code":"var _jsxFileName = \"/home/trinh/Documents/code/design_demo/src/components/admin/Product.js\";\nimport { Table, Tag } from \"antd\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction Product() {\n  const [product, setProduct] = useState([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  const onSelectChange = selectedRowKeys => {\n    console.log(\"select: \", selectedRowKeys);\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [Table.SELECTION_ALL, Table.SELECTION_INVERT, Table.SELECTION_NONE, {\n      key: \"odd\",\n      text: \"Select Odd Row\",\n      onSelect: changaleRowKeys => {\n        let newSelectedRowKeys = [];\n        newSelectedRowKeys = changaleRowKeys.filter((id, index) => {\n          if (index % 2 !== 0) {\n            return false;\n          }\n\n          return true;\n        });\n        console.log(newSelectedRowKeys);\n        setSelectedRowKeys(newSelectedRowKeys);\n      }\n    }, {\n      key: \"even\",\n      text: \"Select Even Row\",\n      onSelect: changaleRowKeys => {\n        let newSelectedRowKeys = [];\n        newSelectedRowKeys = changaleRowKeys.filter((id, index) => {\n          if (index % 2 !== 0) {\n            return true;\n          }\n\n          return false;\n        });\n        selectedRowKeys(newSelectedRowKeys);\n      }\n    }]\n  };\n  useEffect(() => {\n    axios.get(\"/product?q=rose&limit=25&page=1\").then(response => {\n      if (response.status === 200) {\n        setProduct(response.data);\n      } else {\n        console.log(\"Connect fail\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n    return () => {};\n  }, []);\n  const conlumn = [{\n    key: \"name\",\n    title: \"Name\",\n    dataIndex: \"name\"\n  }, {\n    key: \"brand\",\n    title: \"Brand\",\n    dataIndex: \"brand\"\n  }, {\n    title: \"Ingredient list\",\n    key: \"tags\",\n    dataIndex: \"ingredient_list\",\n    render: tags => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      keyy: tags,\n      className: \"ingredient-list-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, tags.toString()))\n  }, {\n    title: \"Quality\",\n    key: \"quantity\",\n    dataIndex: \"ingredient_list\",\n    render: tags => /*#__PURE__*/React.createElement(React.Fragment, null, tags.length > 50 ? /*#__PURE__*/React.createElement(Tag, {\n      key: tags,\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"GOOD\") : /*#__PURE__*/React.createElement(Tag, {\n      key: tags,\n      color: \"geekblue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"NORMAL\"))\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    rowSelection: rowSelection,\n    columns: conlumn,\n    dataSource: product,\n    className: \"table-product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Product;","map":{"version":3,"sources":["/home/trinh/Documents/code/design_demo/src/components/admin/Product.js"],"names":["Table","Tag","axios","React","useEffect","useState","Product","product","setProduct","selectedRowKeys","setSelectedRowKeys","onSelectChange","console","log","rowSelection","onChange","selections","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","key","text","onSelect","changaleRowKeys","newSelectedRowKeys","filter","id","index","get","then","response","status","data","catch","error","conlumn","title","dataIndex","render","tags","toString","length"],"mappings":"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","sourcesContent":["import { Table, Tag } from \"antd\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction Product() {\n  const [product, setProduct] = useState([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  const onSelectChange = (selectedRowKeys) => {\n    console.log(\"select: \", selectedRowKeys);\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    selections: [\n      Table.SELECTION_ALL,\n      Table.SELECTION_INVERT,\n      Table.SELECTION_NONE,\n      {\n        key: \"odd\",\n        text: \"Select Odd Row\",\n        onSelect: (changaleRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changaleRowKeys.filter((id, index) => {\n            if (index % 2 !== 0) {\n              return false;\n            }\n            return true;\n          });\n          console.log(newSelectedRowKeys);\n          setSelectedRowKeys(newSelectedRowKeys);\n        },\n      },\n      {\n        key: \"even\",\n        text: \"Select Even Row\",\n        onSelect: (changaleRowKeys) => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changaleRowKeys.filter((id, index) => {\n            if (index % 2 !== 0) {\n              return true;\n            }\n            return false;\n          });\n          selectedRowKeys(newSelectedRowKeys);\n        },\n      },\n    ],\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"/product?q=rose&limit=25&page=1\")\n      .then((response) => {\n        if (response.status === 200) {\n          setProduct(response.data);\n        } else {\n          console.log(\"Connect fail\");\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    return () => {};\n  }, []);\n\n  const conlumn = [\n    {\n      key: \"name\",\n      title: \"Name\",\n      dataIndex: \"name\",\n    },\n    {\n      key: \"brand\",\n      title: \"Brand\",\n      dataIndex: \"brand\",\n    },\n    {\n      title: \"Ingredient list\",\n      key: \"tags\",\n      dataIndex: \"ingredient_list\",\n      render: (tags) => (\n        <>\n          <div keyy={tags} className=\"ingredient-list-table\">{tags.toString()}</div>\n        </>\n      ),\n    },\n    {\n      title: \"Quality\",\n      key: \"quantity\",\n      dataIndex: \"ingredient_list\",\n      render: (tags) => (\n        <>\n          {tags.length > 50 ? (\n            <Tag key={tags} color=\"green\">GOOD</Tag>\n          ) : (\n            <Tag key={tags} color=\"geekblue\">NORMAL</Tag>\n          )}\n        </>\n      ),\n    },\n  ];\n  return (\n    <div>\n      <Table\n        rowSelection={rowSelection}\n        columns={conlumn}\n        dataSource={product}\n        className=\"table-product\"\n      ></Table>\n    </div>\n  );\n}\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}