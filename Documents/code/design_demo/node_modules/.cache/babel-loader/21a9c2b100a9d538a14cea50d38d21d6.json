{"ast":null,"code":"var _jsxFileName = \"/home/trinh/Documents/code/design_demo/src/components/admin/Dashboard.js\";\nimport { Line, Area, Column, Bar } from \"@ant-design/charts\";\nimport { Button, Col, DatePicker, Row } from \"antd\";\nimport React, { useMemo, useState } from \"react\";\nimport moment from \"moment\";\n\nfunction Dashboard() {\n  const {\n    RangePicker\n  } = DatePicker;\n  const [date, setDate] = useState({\n    fromDate: \"01-01-1991\",\n    toDate: \"01-01-1995\"\n  });\n  const data = [{\n    year: \"1991\",\n    value: 3\n  }, {\n    year: \"1992\",\n    value: 5\n  }, {\n    year: \"1994\",\n    value: 2\n  }, {\n    year: \"1996\",\n    value: 1\n  }, {\n    year: \"1997\",\n    value: 4\n  }, {\n    year: \"1998\",\n    value: 6\n  }, {\n    year: \"1999\",\n    value: 7\n  }, {\n    year: \"1999\",\n    value: 8\n  }];\n  const config = {\n    data,\n    width: 300,\n    height: 150,\n    autoFit: false,\n    xField: \"year\",\n    yField: \"value\",\n    point: {\n      size: 5,\n      shape: \"diamond\"\n    },\n    label: {\n      style: {\n        fill: \"#aaa\"\n      }\n    }\n  };\n  const configMain = {\n    data,\n    with: 750,\n    height: 320,\n    autoFit: false,\n    xField: \"year\",\n    yField: \"value\",\n    point: {\n      size: 5,\n      shape: \"diamond\"\n    },\n    label: {\n      style: {\n        fill: \"#aaa\"\n      }\n    }\n  };\n\n  const onChangeRange = (dates, datestrings) => {\n    setDate({ ...date,\n      fromDate: dates,\n      toDate: datestrings\n    });\n  };\n\n  const onClickOne = e => {\n    setDate({ ...date,\n      fromDate: \"01/01/1991\",\n      toDate: \"01/01/1995\"\n    });\n  };\n\n  const onClickTwo = e => {\n    console.log(e);\n  };\n\n  const fromDatetoDate = useMemo(() => {\n    const fromDate = moment(date.toDate).format(\"DD-MM-YYYY\");\n    const toDate = moment(date.fromDate).format(\"DD-MM-YYYY\");\n    const fromDatetoDate = [];\n    fromDatetoDate.push(fromDate);\n    fromDatetoDate.push(toDate);\n    return fromDatetoDate;\n  }, [date]);\n  console.log(fromDatetoDate);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-picker-place\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    className: \"col-date-picker-place\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Line, Object.assign({}, config, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    className: \"col-date-picker-place\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Area, Object.assign({}, config, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    className: \"col-date-picker-place\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Column, Object.assign({}, config, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    className: \"col-date-picker-place\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Bar, Object.assign({}, config, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    className: \"chart-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 16,\n    className: \"main-chart-dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Dashboard-main\"), /*#__PURE__*/React.createElement(Column, Object.assign({}, configMain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    className: \"main-chart-dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    onClick: onClickOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"91-95\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    onClick: onClickTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"95-99\"), /*#__PURE__*/React.createElement(RangePicker, {\n    onChange: onChangeRange,\n    format: \"MM-DD-YYYY\",\n    value: [\"01-01-1997\", \"01-01-1997\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/trinh/Documents/code/design_demo/src/components/admin/Dashboard.js"],"names":["Line","Area","Column","Bar","Button","Col","DatePicker","Row","React","useMemo","useState","moment","Dashboard","RangePicker","date","setDate","fromDate","toDate","data","year","value","config","width","height","autoFit","xField","yField","point","size","shape","label","style","fill","configMain","with","onChangeRange","dates","datestrings","onClickOne","e","onClickTwo","console","log","fromDatetoDate","format","push"],"mappings":"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","sourcesContent":["import { Line, Area, Column, Bar } from \"@ant-design/charts\";\nimport { Button, Col, DatePicker, Row } from \"antd\";\nimport React, { useMemo, useState } from \"react\";\nimport moment from \"moment\";\nfunction Dashboard() {\n  const { RangePicker } = DatePicker;\n  const [date, setDate] = useState({\n    fromDate: \"01-01-1991\",\n    toDate: \"01-01-1995\",\n  });\n\n  const data = [\n    { year: \"1991\", value: 3 },\n    { year: \"1992\", value: 5 },\n    { year: \"1994\", value: 2 },\n    { year: \"1996\", value: 1 },\n    { year: \"1997\", value: 4 },\n    { year: \"1998\", value: 6 },\n    { year: \"1999\", value: 7 },\n    { year: \"1999\", value: 8 },\n  ];\n\n  const config = {\n    data,\n    width: 300,\n    height: 150,\n    autoFit: false,\n    xField: \"year\",\n    yField: \"value\",\n    point: {\n      size: 5,\n      shape: \"diamond\",\n    },\n    label: {\n      style: {\n        fill: \"#aaa\",\n      },\n    },\n  };\n\n  const configMain = {\n    data,\n    with: 750,\n    height: 320,\n    autoFit: false,\n    xField: \"year\",\n    yField: \"value\",\n    point: {\n      size: 5,\n      shape: \"diamond\",\n    },\n    label: {\n      style: {\n        fill: \"#aaa\",\n      },\n    },\n  };\n\n  const onChangeRange = (dates, datestrings) => {\n    setDate({ ...date, fromDate: dates, toDate: datestrings });\n  };\n\n  const onClickOne = (e) => {\n    setDate({ ...date, fromDate: \"01/01/1991\", toDate: \"01/01/1995\" });\n  };\n\n  const onClickTwo = (e) => {\n    console.log(e);\n  };\n\n  const fromDatetoDate = useMemo(() => {\n    const fromDate = moment(date.toDate).format(\"DD-MM-YYYY\");\n    const toDate = moment(date.fromDate).format(\"DD-MM-YYYY\");\n    const fromDatetoDate = [];\n    fromDatetoDate.push(fromDate);\n    fromDatetoDate.push(toDate);\n    return fromDatetoDate;\n  }, [date]);\n\n  console.log(fromDatetoDate);\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"date-picker-place\">\n        <Row>\n          <Col span={6} className=\"col-date-picker-place\">\n            <Line {...config} />\n          </Col>\n          <Col span={6} className=\"col-date-picker-place\">\n            <Area {...config} />\n          </Col>\n          <Col span={6} className=\"col-date-picker-place\">\n            <Column {...config} />\n          </Col>\n          <Col span={6} className=\"col-date-picker-place\">\n            <Bar {...config} />\n          </Col>\n        </Row>\n        <Row className=\"chart-main\">\n          <Col span={16} className=\"main-chart-dashboard\">\n            <h3>Dashboard-main</h3>\n            <Column {...configMain} />\n          </Col>\n          <Col span={8} className=\"main-chart-dashboard\">\n            <Button type=\"link\" onClick={onClickOne}>\n              91-95\n            </Button>\n            <Button type=\"link\" onClick={onClickTwo}>\n              95-99\n            </Button>\n            <RangePicker\n              onChange={onChangeRange}\n              format=\"MM-DD-YYYY\"\n              value={[\"01-01-1997\",\"01-01-1997\"]}\n            />\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}