{"ast":null,"code":"const ua = navigator.userAgent;\nexport var Platform;\n\n(function (Platform) {\n  Platform.IS_MAC = navigator.appVersion.indexOf('Mac') > 0;\n  Platform.IS_IOS = !!ua.match(/(iPad|iPhone|iPod)/g);\n  Platform.IS_WINDOWS = navigator.appVersion.indexOf('Win') > 0;\n  Platform.IS_IE = ua.indexOf('MSIE') >= 0;\n  Platform.IS_IE11 = !!ua.match(/Trident\\/7\\./);\n  Platform.IS_EDGE = !!ua.match(/Edge\\//);\n  /**\n   * A flag indicating whether the browser is Netscape (including Firefox).\n   */\n\n  Platform.IS_NETSCAPE = ua.indexOf('Mozilla/') >= 0 && ua.indexOf('MSIE') < 0 && ua.indexOf('Edge/') < 0;\n  /**\n   * A flag indicating whether the the this is running inside a Chrome App.\n   */\n\n  Platform.IS_CHROME_APP = window.chrome != null && window.chrome.app != null && window.chrome.app.runtime != null;\n  Platform.IS_CHROME = ua.indexOf('Chrome/') >= 0 && ua.indexOf('Edge/') < 0;\n  Platform.IS_OPERA = ua.indexOf('Opera/') >= 0 || ua.indexOf('OPR/') >= 0;\n  Platform.IS_FIREFOX = ua.indexOf('Firefox/') >= 0;\n  Platform.IS_SAFARI = ua.indexOf('AppleWebKit/') >= 0 && ua.indexOf('Chrome/') < 0 && ua.indexOf('Edge/') < 0;\n  /**\n   * A flag indicating whether this device supports touchstart/-move/-end\n   * events (Apple iOS, Android, Chromebook and Chrome Browser on touch-enabled\n   * devices).\n   */\n\n  Platform.SUPPORT_TOUCH = 'ontouchstart' in document.documentElement;\n  /**\n   * A flag indicating whether this device supports Microsoft pointer events.\n   */\n\n  Platform.SUPPORT_POINTER = window.PointerEvent != null && !Platform.IS_MAC;\n  Platform.SUPPORT_PASSIVE = false; // eslint-disable-line import/no-mutable-exports\n\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get() {\n        Platform.SUPPORT_PASSIVE = true;\n      }\n\n    });\n    const div = document.createElement('div');\n\n    if (div.addEventListener) {\n      div.addEventListener('click', () => {}, options);\n    }\n  } catch (err) {// pass\n  }\n  /**\n   * A flag indicating whether foreignObject support is not available. This\n   * is the case for Opera, older SVG-based browsers and all versions of IE.\n   */\n\n\n  Platform.NO_FOREIGNOBJECT = !document.createElementNS || `${document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject')}` !== '[object SVGForeignObjectElement]' || ua.indexOf('Opera/') >= 0;\n  Platform.SUPPORT_FOREIGNOBJECT = !Platform.NO_FOREIGNOBJECT;\n})(Platform || (Platform = {}));\n\n(function (Platform) {\n  function getHMRStatus() {\n    const mod = window.module;\n\n    if (mod != null && mod.hot != null && mod.hot.status != null) {\n      return mod.hot.status();\n    }\n\n    return 'unkonwn';\n  }\n\n  Platform.getHMRStatus = getHMRStatus;\n\n  function isApplyingHMR() {\n    return getHMRStatus() === 'apply';\n  }\n\n  Platform.isApplyingHMR = isApplyingHMR; // This function checks if the specified event is supported by the browser.\n  // Source: http://perfectionkills.com/detecting-event-support-without-browser-sniffing/\n\n  const TAGNAMES = {\n    select: 'input',\n    change: 'input',\n    submit: 'form',\n    reset: 'form',\n    error: 'img',\n    load: 'img',\n    abort: 'img'\n  };\n\n  function isEventSupported(event) {\n    const elem = document.createElement(TAGNAMES[event] || 'div');\n    const eventName = `on${event}`;\n    let isSupported = (eventName in elem);\n\n    if (!isSupported) {\n      elem.setAttribute(eventName, 'return;');\n      isSupported = typeof elem[eventName] === 'function';\n    }\n\n    return isSupported;\n  }\n\n  Platform.isEventSupported = isEventSupported;\n})(Platform || (Platform = {}));","map":null,"metadata":{},"sourceType":"module"}