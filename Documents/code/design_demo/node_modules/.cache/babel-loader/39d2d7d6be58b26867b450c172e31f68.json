{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Syringe } from 'mana-syringe';\nimport { IHookContribution } from '../hooks/interface';\nimport { disposableNoop } from '../common/utils';\nexport const CONFIG_TYPE = 'CommandConfig';\nexport const getDefaultContributions = () => {\n  return [];\n};\nexport class CommandConfig {\n  constructor() {\n    this.setCommandContributions = fn => {\n      this.getContributions = fn;\n    };\n\n    this.getCommandContributions = () => {\n      return this.getContributions();\n    };\n\n    this.registerHook = hooks => __awaiter(this, void 0, void 0, function* () {\n      if (this.registerHookFn) {\n        return this.registerHookFn(hooks);\n      }\n\n      return disposableNoop;\n    });\n\n    this.registerHookHub = registry => __awaiter(this, void 0, void 0, function* () {\n      if (this.registerHookHubFn) {\n        return this.registerHookHubFn(registry);\n      }\n\n      return disposableNoop;\n    });\n    /** 设置CONFIG类型 */\n\n\n    this.CONFIG_TYPE = CONFIG_TYPE;\n    /** set command hook fn */\n\n    this.setRegisterHookFn = fn => {\n      this.registerHookFn = fn;\n    };\n    /** 注册 command hook hub */\n\n\n    this.setRegisterHookHubFn = fn => {\n      this.registerHookHubFn = fn;\n    };\n    /** 获取config的所有配置*/\n\n\n    this.getConfig = () => __awaiter(this, void 0, void 0, function* () {\n      return {\n        registerHookFn: this.registerHookFn,\n        getContributions: this.getContributions,\n        CONFIG_TYPE: this.CONFIG_TYPE\n      };\n    });\n\n    this.getContributions = getDefaultContributions;\n  }\n\n}\n/** 提供一个工厂方法 */\n\nexport const createCommandConfig = () => {\n  return new CommandConfig();\n};\nexport const registerCommandConfig = (register, commandConfig) => {\n  register({\n    token: CommandConfig,\n    contrib: [IHookContribution],\n    lifecycle: Syringe.Lifecycle.singleton,\n    useDynamic: () => {\n      return commandConfig;\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"module"}