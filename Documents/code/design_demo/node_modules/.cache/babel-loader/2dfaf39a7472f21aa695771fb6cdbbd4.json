{"ast":null,"code":"import { __awaiter } from \"tslib\";\nexport const defaultFormSchemaService = args => __awaiter(void 0, void 0, void 0, function* () {\n  var _a;\n\n  const {\n    targetType\n  } = args;\n  const isGroup = (_a = args.targetData) === null || _a === void 0 ? void 0 : _a.isGroup;\n  const groupSchema = {\n    tabs: [{\n      name: '设置',\n      groups: [{\n        name: 'groupName',\n        controls: [{\n          label: '分组名',\n          name: 'group-service',\n          shape: 'group-service',\n          placeholder: '分组名称'\n        }]\n      }]\n    }]\n  };\n  const nodeSchema = {\n    tabs: [{\n      name: '设置',\n      groups: [{\n        name: 'groupName',\n        controls: [{\n          label: '节点名',\n          name: 'node-service',\n          shape: 'node-service',\n          placeholder: '节点名称'\n        }]\n      }]\n    }]\n  };\n  const edgeSchema = {\n    tabs: [{\n      name: '设置',\n      groups: [{\n        name: 'groupName',\n        controls: [{\n          label: '边',\n          name: 'edge-service',\n          shape: 'edge-service',\n          placeholder: '边名称'\n        }]\n      }]\n    }]\n  };\n\n  if (isGroup) {\n    return groupSchema;\n  }\n\n  if (targetType === 'node') {\n    return nodeSchema;\n  }\n\n  if (targetType === 'edge') {\n    return edgeSchema;\n  }\n\n  return {\n    tabs: [{\n      name: '设置',\n      groups: [{\n        name: 'groupName',\n        controls: [{\n          label: '',\n          name: 'canvas-service',\n          shape: 'canvas-service'\n        }]\n      }]\n    }]\n  };\n});","map":null,"metadata":{},"sourceType":"module"}