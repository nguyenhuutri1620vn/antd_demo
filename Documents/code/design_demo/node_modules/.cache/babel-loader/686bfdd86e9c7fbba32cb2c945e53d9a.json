{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MappingLayer = exports.getMappingFunction = void 0;\n\nvar util_1 = require(\"@antv/util\");\n/**\n * 获得映射函数\n * @param mappingFields\n * @param callback\n */\n\n\nfunction getMappingFunction(mappingFields, callback) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var params = {};\n    mappingFields.forEach(function (f, index) {\n      params[f] = args[index];\n    });\n    delete params['undefined'];\n    return callback(params);\n  };\n}\n\nexports.getMappingFunction = getMappingFunction;\n\nvar MappingLayer =\n/** @class */\nfunction () {\n  function MappingLayer() {}\n\n  MappingLayer.shape = function (layer, shape) {\n    /**\n     * shape 的几种情况\n     * layer.shape('cicle');\n     * layer.shape('shape', ['cicle', 'square']);\n     * layer.shape('x', (x) => 'cicle');\n     * layer.shape('x*y', (x, y) => 'cicle');\n     */\n    if ((0, util_1.isString)(shape)) {\n      layer.shape(shape);\n    } else if ((0, util_1.isFunction)(shape)) {\n      // TODO: shape mappingFields\n      var mappingFields = [];\n      layer.shape(mappingFields.join('*'), getMappingFunction(mappingFields, shape));\n    } else if ((0, util_1.isObject)(shape)) {\n      var field = shape.field ? shape.field : '';\n\n      if ((0, util_1.isFunction)(shape.value)) {\n        var mappingFields = (0, util_1.isArray)(field) ? field : field.split('*');\n        layer.shape(field, getMappingFunction(mappingFields, shape.value));\n      } else {\n        layer.shape(field, shape.value);\n      } // scale\n\n\n      if ((0, util_1.isString)(field) && shape.scale) {\n        MappingLayer.scale(layer, field, shape.scale);\n      }\n    }\n  };\n\n  MappingLayer.size = function (layer, size) {\n    /**\n     * size 的几种情况\n     * layer.size(10);\n     * layer.size('size', [10, 20]);\n     * layer.size('x', (x) => 10);\n     * layer.size('x*y', (x, y) => 10);\n     */\n    if ((0, util_1.isNumber)(size)) {\n      layer.size(size);\n    } else if ((0, util_1.isArray)(size)) {\n      layer.size(size);\n    } else if ((0, util_1.isFunction)(size)) {\n      // TODO: size mappingFields\n      var mappingFields = [];\n      layer.size(mappingFields.join('*'), getMappingFunction(mappingFields, size));\n    } else if ((0, util_1.isObject)(size)) {\n      var field = size.field ? size.field : '';\n\n      if ((0, util_1.isFunction)(size.value)) {\n        var mappingFields = (0, util_1.isArray)(field) ? field : field.split('*');\n        layer.size(field, getMappingFunction(mappingFields, size.value));\n      } else {\n        layer.size(field, size.value);\n      } // scale\n\n\n      if ((0, util_1.isString)(field) && size.scale) {\n        MappingLayer.scale(layer, field, size.scale);\n      }\n    }\n  };\n\n  MappingLayer.color = function (layer, color) {\n    /**\n     * color 的几种情况\n     * layer.color('red');\n     * layer.color('color', ['red', 'blue']);\n     * layer.color('x', (x) => 'red');\n     * layer.color('x*y', (x, y) => 'red');\n     */\n    if ((0, util_1.isString)(color)) {\n      layer.color(color);\n    } else if ((0, util_1.isFunction)(color)) {\n      // TODO: color mappingFields\n      var mappingFields = [];\n      layer.color(mappingFields.join('*'), getMappingFunction(mappingFields, color));\n    } else if ((0, util_1.isObject)(color)) {\n      var field = color.field ? color.field : '';\n\n      if ((0, util_1.isFunction)(color.value)) {\n        var mappingFields = (0, util_1.isArray)(field) ? field : field.split('*');\n        layer.color(field, getMappingFunction(mappingFields, color.value));\n      } else {\n        layer.color(field, color.value);\n      } // scale\n\n\n      if ((0, util_1.isString)(field) && color.scale) {\n        MappingLayer.scale(layer, field, color.scale);\n      }\n    }\n  };\n\n  MappingLayer.style = function (layer, style) {\n    style && layer.style(style);\n  };\n\n  MappingLayer.state = function (layer, state) {\n    var active = state.active,\n        select = state.select;\n    active && layer.active(active);\n    select && layer.select(select);\n  };\n\n  MappingLayer.rotate = function (layer, rotate) {\n    /**\n     * rotate 的几种情况\n     * layer.rotate(45);\n     * layer.rotate('rotate', [45, 90]);\n     * layer.rotate('x', (x) => 45);\n     * layer.rotate('x*y', (x, y) => 45);\n     */\n    if ((0, util_1.isString)(rotate)) {// TODO: L7 rotate\n      // layer.rotate(rotate);\n    } else if ((0, util_1.isFunction)(rotate)) {// TODO: rotate isFunction\n    } else if ((0, util_1.isObject)(rotate)) {// TODO: L7 rotate\n    }\n  };\n\n  MappingLayer.texture = function (layer, texture) {\n    /**\n     * texture 的几种情况\n     * layer.texture('plane');\n     */\n    if ((0, util_1.isString)(texture)) {\n      layer.texture(texture);\n    }\n  };\n\n  MappingLayer.animate = function (layer, animate) {\n    /**\n     * animate 的几种情况\n     * layer.animate(true);\n     * layer.animate({rings: 10});\n     */\n    if ((0, util_1.isBoolean)(animate) || (0, util_1.isObject)(animate)) {\n      layer.animate(animate);\n    }\n  };\n\n  MappingLayer.scale = function (layer, field, cfg) {\n    /**\n     * scale 的几种情况\n     * layer.scale('name', {type: 'cat'});\n     * layer.scale({name: {type: 'cat'}, value: {type: 'linear'}});\n     */\n    layer.scale(field, cfg);\n  };\n\n  MappingLayer.filter = function (layer, filter) {\n    /**\n     * scale 的几种情况\n     * layer.filter('name', ({ name }) => name === 'name');\n     */\n    var field = filter.field ? filter.field : '';\n    var mappingFields = (0, util_1.isArray)(field) ? field : field.split('*');\n    layer.filter(mappingFields.join('*'), getMappingFunction(mappingFields, filter.value));\n  };\n\n  return MappingLayer;\n}();\n\nexports.MappingLayer = MappingLayer;","map":null,"metadata":{},"sourceType":"script"}