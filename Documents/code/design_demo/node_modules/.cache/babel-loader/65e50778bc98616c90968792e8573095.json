{"ast":null,"code":"import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { InputNumber as AInputNumber } from 'antd';\n\nfunction transformValue(val) {\n  const result = Number(val);\n  return Number.isNaN(result) ? undefined : result;\n}\n\nexport const InputNumber = props => {\n  const {\n    disabled,\n    placeholder,\n    value,\n    onChange\n  } = props;\n  const [innerValue, setInnerValue] = useState(transformValue(value));\n  const mountedRef = useRef(false);\n  useEffect(() => {\n    if (!mountedRef.current) {\n      mountedRef.current = true;\n    }\n\n    setInnerValue(transformValue(value));\n  }, [value]);\n  const onValueChange = useCallback(nextValue => {\n    setInnerValue(nextValue);\n\n    if (typeof onChange === 'function') {\n      if (nextValue === undefined) {\n        onChange('');\n      } else if (typeof transformValue(nextValue) === 'number') {\n        onChange(transformValue(nextValue));\n      }\n    }\n  }, [onChange]);\n  return React.createElement(AInputNumber, {\n    style: {\n      width: '100%'\n    },\n    size: \"small\",\n    placeholder: placeholder,\n    value: innerValue,\n    onChange: onValueChange,\n    disabled: disabled\n  });\n};","map":null,"metadata":{},"sourceType":"module"}