{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport { $window, rgb2arr } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { TYPES } from '../../types';\nimport Clock from '../../utils/clock';\nvar LayerService = (_dec = injectable(), _dec2 = inject(TYPES.IRendererService), _dec3 = inject(TYPES.IMapService), _dec4 = inject(TYPES.IGlobalConfigService), _dec(_class = (_class2 = function () {\n  function LayerService() {\n    _classCallCheck(this, LayerService);\n\n    _defineProperty(this, \"clock\", new Clock());\n\n    _defineProperty(this, \"alreadyInRendering\", false);\n\n    _defineProperty(this, \"layers\", []);\n\n    _defineProperty(this, \"layerList\", []);\n\n    _defineProperty(this, \"layerRenderID\", void 0);\n\n    _defineProperty(this, \"sceneInited\", false);\n\n    _defineProperty(this, \"animateInstanceCount\", 0);\n\n    _defineProperty(this, \"shaderPicking\", true);\n\n    _defineProperty(this, \"enableRender\", true);\n\n    _initializerDefineProperty(this, \"renderService\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"mapService\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"configService\", _descriptor3, this);\n  }\n\n  _createClass(LayerService, [{\n    key: \"add\",\n    value: function add(layer) {\n      if (this.sceneInited) {\n        layer.init();\n      }\n\n      this.layers.push(layer);\n      this.updateLayerRenderList();\n    }\n  }, {\n    key: \"initLayers\",\n    value: function initLayers() {\n      this.sceneInited = true;\n      this.layers.forEach(function (layer) {\n        if (!layer.inited) {\n          layer.init();\n        }\n      });\n      this.updateLayerRenderList();\n    }\n  }, {\n    key: \"getRenderList\",\n    value: function getRenderList() {\n      return this.layerList;\n    }\n  }, {\n    key: \"getLayers\",\n    value: function getLayers() {\n      return this.layers;\n    }\n  }, {\n    key: \"getLayer\",\n    value: function getLayer(id) {\n      return this.layers.find(function (layer) {\n        return layer.id === id;\n      });\n    }\n  }, {\n    key: \"getLayerByName\",\n    value: function getLayerByName(name) {\n      return this.layers.find(function (layer) {\n        return layer.name === name;\n      });\n    }\n  }, {\n    key: \"cleanRemove\",\n    value: function cleanRemove(layer, parentLayer) {\n      if (parentLayer) {\n        var layerIndex = parentLayer.layerChildren.indexOf(layer);\n\n        if (layerIndex > -1) {\n          parentLayer.layerChildren.splice(layerIndex, 1);\n        }\n      } else {\n        var _layerIndex = this.layers.indexOf(layer);\n\n        if (_layerIndex > -1) {\n          this.layers.splice(_layerIndex, 1);\n        }\n      }\n\n      this.updateLayerRenderList();\n      this.renderLayers();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(layer, parentLayer) {\n      if (parentLayer) {\n        var layerIndex = parentLayer.layerChildren.indexOf(layer);\n\n        if (layerIndex > -1) {\n          parentLayer.layerChildren.splice(layerIndex, 1);\n        }\n      } else {\n        var _layerIndex2 = this.layers.indexOf(layer);\n\n        if (_layerIndex2 > -1) {\n          this.layers.splice(_layerIndex2, 1);\n        }\n      }\n\n      this.updateLayerRenderList();\n      layer.destroy();\n      this.renderLayers();\n    }\n  }, {\n    key: \"removeAllLayers\",\n    value: function removeAllLayers() {\n      this.destroy();\n    }\n  }, {\n    key: \"setEnableRender\",\n    value: function setEnableRender(flag) {\n      this.enableRender = flag;\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function () {\n      var _renderLayers = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n        var _iterator, _step, layer;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.alreadyInRendering || !this.enableRender)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                this.alreadyInRendering = true;\n                this.clear();\n                _iterator = _createForOfIteratorHelper(this.layerList);\n                _context.prev = 5;\n\n                _iterator.s();\n\n              case 7:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 20;\n                  break;\n                }\n\n                layer = _step.value;\n                layer.hooks.beforeRenderData.call();\n                layer.hooks.beforeRender.call();\n\n                if (!layer.getLayerConfig().enableMultiPassRenderer) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.next = 14;\n                return layer.renderMultiPass();\n\n              case 14:\n                _context.next = 17;\n                break;\n\n              case 16:\n                layer.render();\n\n              case 17:\n                layer.hooks.afterRender.call();\n\n              case 18:\n                _context.next = 7;\n                break;\n\n              case 20:\n                _context.next = 25;\n                break;\n\n              case 22:\n                _context.prev = 22;\n                _context.t0 = _context[\"catch\"](5);\n\n                _iterator.e(_context.t0);\n\n              case 25:\n                _context.prev = 25;\n\n                _iterator.f();\n\n                return _context.finish(25);\n\n              case 28:\n                this.alreadyInRendering = false;\n\n              case 29:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5, 22, 25, 28]]);\n      }));\n\n      function renderLayers() {\n        return _renderLayers.apply(this, arguments);\n      }\n\n      return renderLayers;\n    }()\n  }, {\n    key: \"updateLayerRenderList\",\n    value: function updateLayerRenderList() {\n      var _this = this;\n\n      this.layerList = [];\n      this.layers.filter(function (layer) {\n        return layer.inited;\n      }).filter(function (layer) {\n        return layer.isVisible();\n      }).forEach(function (layer) {\n        _this.layerList.push(layer);\n\n        layer.layerChildren.filter(function (childlayer) {\n          return childlayer.inited;\n        }).filter(function (childlayer) {\n          return childlayer.isVisible();\n        }).forEach(function (childlayer) {\n          _this.layerList.push(childlayer);\n        });\n      });\n      this.layerList.sort(function (pre, next) {\n        return pre.zIndex - next.zIndex;\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.layers.forEach(function (layer) {\n        if (layer.layerChildren) {\n          layer.layerChildren.forEach(function (child) {\n            return child.destroy();\n          });\n          layer.layerChildren = [];\n        }\n\n        layer.destroy();\n      });\n      this.layers = [];\n      this.layerList = [];\n      this.renderLayers();\n    }\n  }, {\n    key: \"startAnimate\",\n    value: function startAnimate() {\n      if (this.animateInstanceCount++ === 0) {\n        this.clock.start();\n        this.runRender();\n      }\n    }\n  }, {\n    key: \"stopAnimate\",\n    value: function stopAnimate() {\n      if (--this.animateInstanceCount === 0) {\n        this.stopRender();\n        this.clock.stop();\n      }\n    }\n  }, {\n    key: \"getOESTextureFloat\",\n    value: function getOESTextureFloat() {\n      return this.renderService.extensionObject.OES_texture_float;\n    }\n  }, {\n    key: \"enableShaderPick\",\n    value: function enableShaderPick() {\n      this.shaderPicking = true;\n    }\n  }, {\n    key: \"disableShaderPick\",\n    value: function disableShaderPick() {\n      this.shaderPicking = false;\n    }\n  }, {\n    key: \"getShaderPickStat\",\n    value: function getShaderPickStat() {\n      return this.shaderPicking;\n    }\n  }, {\n    key: \"runRender\",\n    value: function runRender() {\n      this.renderLayers();\n      this.layerRenderID = $window.requestAnimationFrame(this.runRender.bind(this));\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var color = rgb2arr(this.mapService.bgColor);\n      this.renderService.clear({\n        color: color,\n        depth: 1,\n        stencil: 0,\n        framebuffer: null\n      });\n    }\n  }, {\n    key: \"stopRender\",\n    value: function stopRender() {\n      $window.cancelAnimationFrame(this.layerRenderID);\n    }\n  }]);\n\n  return LayerService;\n}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"renderService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"mapService\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"configService\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexport { LayerService as default };","map":null,"metadata":{},"sourceType":"module"}