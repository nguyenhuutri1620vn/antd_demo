{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport EventTarget from './EventTarget';\n\nvar _requestHeader = new Map();\n\nvar _responseHeader = new Map();\n\nvar _requestTask = new Map();\n\nvar contentTypes = {\n  json: 'application/json',\n  text: 'application/text',\n  arraybuffer: 'application/octet-stream'\n};\n\nfunction _triggerEvent(type) {\n  var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    target: this\n  };\n\n  if (typeof this[\"on\".concat(type)] === 'function') {\n    this[\"on\".concat(type)].call(this, event);\n  }\n}\n\nfunction _changeReadyState(readyState) {\n  var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    readyState: readyState\n  };\n  this.readyState = readyState;\n\n  _triggerEvent.call(this, 'readystatechange', event);\n}\n\nexport var $XMLHttpRequest = function (_EventTarget) {\n  _inherits($XMLHttpRequest, _EventTarget);\n\n  var _super = _createSuper($XMLHttpRequest);\n\n  function $XMLHttpRequest() {\n    var _this;\n\n    _classCallCheck(this, $XMLHttpRequest);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"onabort\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onerror\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onload\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onloadstart\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onprogress\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"ontimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onloadend\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onreadystatechange\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"readyState\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"response\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"responseText\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_responseType\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"responseXML\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"status\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"statusText\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"upload\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"withCredentials\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"timeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_url\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_method\", void 0);\n\n    _this.onabort = null;\n    _this.onerror = null;\n    _this.onload = null;\n    _this.onloadstart = null;\n    _this.onprogress = null;\n    _this.ontimeout = null;\n    _this.onloadend = null;\n    _this.onreadystatechange = null;\n    _this.readyState = 0;\n    _this.response = null;\n    _this.responseText = null;\n    _this._responseType = 'text';\n    _this.responseXML = null;\n    _this.status = 0;\n    _this.statusText = '';\n    _this.upload = {};\n    _this.withCredentials = false;\n\n    _requestHeader.set('requestHeader', {\n      'content-type': 'application/x-www-form-urlencoded'\n    });\n\n    return _this;\n  }\n\n  _createClass($XMLHttpRequest, [{\n    key: \"responseType\",\n    set: function set(type) {\n      this._responseType = type;\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      var myRequestTask = _requestTask.get('requestTask');\n\n      if (myRequestTask) {\n        myRequestTask.abort();\n      }\n    }\n  }, {\n    key: \"getAllResponseHeaders\",\n    value: function getAllResponseHeaders() {\n      var responseHeader = _responseHeader.get('responseHeader');\n\n      return Object.keys(responseHeader).map(function (header) {\n        return \"\".concat(header, \": \").concat(responseHeader[header]);\n      }).join('\\n');\n    }\n  }, {\n    key: \"getResponseHeader\",\n    value: function getResponseHeader(header) {\n      return _responseHeader.get('responseHeader')[header];\n    }\n  }, {\n    key: \"open\",\n    value: function open(method, url, flag) {\n      this._method = method;\n      this._url = url;\n    }\n  }, {\n    key: \"overrideMimeType\",\n    value: function overrideMimeType() {}\n  }, {\n    key: \"send\",\n    value: function send() {\n      var $data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    }\n  }, {\n    key: \"setRequestHeader\",\n    value: function setRequestHeader(header, value) {\n      var myHeader = _requestHeader.get('requestHeader');\n\n      myHeader[header] = value;\n\n      _requestHeader.set('requestHeader', myHeader);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      var _this2 = this;\n\n      if (typeof listener !== 'function') {\n        return;\n      }\n\n      this['on' + type] = function () {\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        event.target = event.target || _this2;\n        listener.call(_this2, event);\n      };\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener) {\n      if (this['on' + type] === listener) {\n        this['on' + type] = null;\n      }\n    }\n  }]);\n\n  return $XMLHttpRequest;\n}(EventTarget);\n\n_defineProperty($XMLHttpRequest, \"UNSEND\", void 0);\n\n_defineProperty($XMLHttpRequest, \"OPENED\", void 0);\n\n_defineProperty($XMLHttpRequest, \"HEADERS_RECEIVED\", void 0);\n\n_defineProperty($XMLHttpRequest, \"LOADING\", void 0);\n\n_defineProperty($XMLHttpRequest, \"DONE\", void 0);\n\n$XMLHttpRequest.UNSEND = 0;\n$XMLHttpRequest.OPENED = 1;\n$XMLHttpRequest.HEADERS_RECEIVED = 2;\n$XMLHttpRequest.LOADING = 3;\n$XMLHttpRequest.DONE = 4;","map":null,"metadata":{},"sourceType":"module"}