{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getColorLegendItems = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar isLegendItemI = function (legendItems) {\n  return typeof legendItems[0].value === 'number';\n};\n\nvar getColorLegendItems = function (legendItems) {\n  var items = [];\n\n  if (isLegendItemI(legendItems)) {\n    if (legendItems.length === 1) {\n      var _a = legendItems[0],\n          color = _a.color,\n          value = _a.value;\n      var range = [value, value];\n      return [{\n        color: color,\n        value: range\n      }];\n    }\n\n    var cache = new Map();\n    var preCacheData = void 0;\n\n    for (var index = 0; index < legendItems.length; index++) {\n      var _b = legendItems[index],\n          color = _b.color,\n          value = _b.value;\n\n      if (cache.has(color)) {\n        var data = cache.get(color);\n\n        if (Array.isArray(data)) {\n          data.push(value);\n        }\n      } else {\n        var range = [value];\n        cache.set(color, range);\n\n        if (preCacheData) {\n          preCacheData.push(value);\n        }\n\n        preCacheData = range;\n      }\n    }\n\n    cache.forEach(function (value, color) {\n      var min = value[0];\n      var max = value[value.length - 1];\n      var range = [min, max];\n      items.push({\n        color: color,\n        value: range\n      });\n    });\n  } else {\n    items = legendItems.map(function (item) {\n      return (0, tslib_1.__assign)((0, tslib_1.__assign)({}, item), {\n        value: [Math.ceil(item.value[0]), Math.ceil(item.value[1])]\n      });\n    });\n  }\n\n  return items;\n};\n\nexports.getColorLegendItems = getColorLegendItems;","map":null,"metadata":{},"sourceType":"script"}