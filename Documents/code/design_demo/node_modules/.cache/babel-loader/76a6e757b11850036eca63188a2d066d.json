{"ast":null,"code":"var _jsxFileName = \"/home/trinh/Documents/code/design_demo/src/components/frontend/ListProduct.js\";\nimport { Card, Col, Pagination, Row, Select } from \"antd\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport product_image from \"../../asset/frontend/product-image.jpg\";\n\nfunction ListProduct() {\n  const [product, setProduct] = useState([]);\n  const {\n    Meta\n  } = Card;\n  const [current, setCurrent] = useState(1);\n  const numEachPage = 30;\n  const [brand, setBrand] = useState([]);\n  const [state, setState] = useState({\n    min: 0,\n    max: numEachPage\n  });\n  const options = [];\n\n  const getBrand = () => {\n    for (let i = 0; i < product.length; i++) {\n      options.push(product[i].brand);\n    }\n  };\n\n  getBrand();\n  const new_options = [...new Set(options)];\n\n  const handleChangeBrand = value => {\n    setBrand(value);\n  };\n\n  const filteredOptions = new_options.filter(o => !brand.includes(o));\n\n  const handleChange = (value, pageSize) => {\n    setState({\n      min: (value - 1) * numEachPage,\n      max: value * numEachPage\n    });\n\n    if (pageSize !== numEachPage) {\n      setState({\n        min: (value - 1) * pageSize,\n        max: value * pageSize\n      });\n      setCurrent(value);\n    }\n  };\n\n  useEffect(() => {\n    axios.get(\"/product?q=rose&limit=25&page=1\").then(response => {\n      if (response.status === 200) {\n        setProduct(response.data);\n      } else {\n        console.log(\"Connect fail\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    placeholder: \"Inserted brand\",\n    value: brand,\n    onChange: handleChangeBrand,\n    style: {\n      width: \"100%\",\n      marginBottom: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, filteredOptions.map(item => /*#__PURE__*/React.createElement(Select.Option, {\n    key: item,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, item))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, product && product.length > 0 && product.slice(state.min, state.max).filter(e => {\n    if (e.brand.includes(brand)) {\n      return e;\n    } else {\n      return e;\n    }\n  }).map(item => {\n    return /*#__PURE__*/React.createElement(Col, {\n      span: 4,\n      style: {\n        marginBottom: 30\n      },\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: item.name,\n      bordered: false,\n      children: true,\n      className: \"card-product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"product-image-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"\",\n      src: product_image,\n      className: \"product-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Meta, {\n      title: item.brand,\n      description: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description-product\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }, item.ingredient_list.toString()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    })));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"paginate-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    current: current,\n    pageSizeOptions: [10, 20, 30, 50, 100],\n    size: \"large\",\n    total: product.length,\n    showSizeChanger: true,\n    showQuickJumper: true,\n    defaultPageSize: numEachPage,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default ListProduct;","map":{"version":3,"sources":["/home/trinh/Documents/code/design_demo/src/components/frontend/ListProduct.js"],"names":["Card","Col","Pagination","Row","Select","axios","React","useEffect","useState","product_image","ListProduct","product","setProduct","Meta","current","setCurrent","numEachPage","brand","setBrand","state","setState","min","max","options","getBrand","i","length","push","new_options","Set","handleChangeBrand","value","filteredOptions","filter","o","includes","handleChange","pageSize","get","then","response","status","data","console","log","catch","error","width","marginBottom","map","item","slice","e","id","name","ingredient_list","toString"],"mappings":"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","sourcesContent":["import { Card, Col, Pagination, Row, Select } from \"antd\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport product_image from \"../../asset/frontend/product-image.jpg\";\nfunction ListProduct() {\n  const [product, setProduct] = useState([]);\n  const { Meta } = Card;\n  const [current, setCurrent] = useState(1);\n  const numEachPage = 30;\n  const [brand, setBrand] = useState([]);\n  const [state, setState] = useState({\n    min: 0,\n    max: numEachPage,\n  });\n\n  const options = [];\n  const getBrand = () => {\n    for (let i = 0; i < product.length; i++) {\n      options.push(product[i].brand);\n    }\n  };\n  getBrand();\n  const new_options = [...new Set(options)];\n  const handleChangeBrand = (value) => {\n    setBrand(value);\n  };\n  const filteredOptions = new_options.filter((o) => !brand.includes(o));\n\n  const handleChange = (value, pageSize) => {\n    setState({\n      min: (value - 1) * numEachPage,\n      max: value * numEachPage,\n    });\n    if (pageSize !== numEachPage) {\n      setState({\n        min: (value - 1) * pageSize,\n        max: value * pageSize,\n      });\n      setCurrent(value);\n    }\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"/product?q=rose&limit=25&page=1\")\n      .then((response) => {\n        if (response.status === 200) {\n          setProduct(response.data);\n        } else {\n          console.log(\"Connect fail\");\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  return (\n    <div className=\"site-card-wrapper\">\n      <Row>\n        <Col span={4}></Col>\n        <Col span={20}>\n          <Select\n            mode=\"multiple\"\n            placeholder=\"Inserted brand\"\n            value={brand}\n            onChange={handleChangeBrand}\n            style={{ width: \"100%\", marginBottom: 30 }}\n          >\n            {filteredOptions.map((item) => (\n              <Select.Option key={item} value={item}>\n                {item}\n              </Select.Option>\n            ))}\n          </Select>\n          <Row gutter={16}>\n            {product &&\n              product.length > 0 &&\n              product\n                .slice(state.min, state.max)\n                .filter((e)=>{\n                    if (e.brand.includes(brand)){\n                        return e\n                    }else{\n                        return e\n                    } \n                })\n                .map((item) => {\n                  return (\n                    <Col span={4} style={{ marginBottom: 30 }} key={item.id}>\n                      <Card\n                        title={item.name}\n                        bordered={false}\n                        children\n                        className=\"card-product\"\n                      >\n                        <div className=\"product-image-area\">\n                          <img\n                            alt=\"\"\n                            src={product_image}\n                            className=\"product-image\"\n                          />\n                        </div>\n                        <Meta\n                          title={item.brand}\n                          description={\n                            <div className=\"description-product\">\n                              {item.ingredient_list.toString()}\n                            </div>\n                          }\n                        />\n                      </Card>\n                    </Col>\n                  );\n                })}\n          </Row>\n          <div className=\"paginate-align\">\n            <Pagination\n              current={current}\n              pageSizeOptions={[10, 20, 30, 50, 100]}\n              size=\"large\"\n              total={product.length}\n              showSizeChanger\n              showQuickJumper\n              defaultPageSize={numEachPage}\n              onChange={handleChange}\n            />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\nexport default ListProduct;\n"]},"metadata":{},"sourceType":"module"}