{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { MapMouseEvent } from './events';\n\nvar BlockableMapEventHandler = function () {\n  function BlockableMapEventHandler(map) {\n    _classCallCheck(this, BlockableMapEventHandler);\n\n    _defineProperty(this, \"map\", void 0);\n\n    _defineProperty(this, \"delayContextMenu\", void 0);\n\n    _defineProperty(this, \"contextMenuEvent\", void 0);\n\n    this.map = map;\n  }\n\n  _createClass(BlockableMapEventHandler, [{\n    key: \"reset\",\n    value: function reset() {\n      this.delayContextMenu = false;\n      delete this.contextMenuEvent;\n    }\n  }, {\n    key: \"mousemove\",\n    value: function mousemove(e) {\n      this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"mousedown\",\n    value: function mousedown() {\n      this.delayContextMenu = true;\n    }\n  }, {\n    key: \"mouseup\",\n    value: function mouseup() {\n      this.delayContextMenu = false;\n\n      if (this.contextMenuEvent) {\n        this.map.emit('contextmenu', new MapMouseEvent('contextmenu', this.map, this.contextMenuEvent));\n        delete this.contextMenuEvent;\n      }\n    }\n  }, {\n    key: \"contextmenu\",\n    value: function contextmenu(e) {\n      if (this.delayContextMenu) {\n        this.contextMenuEvent = e;\n      } else {\n        this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n      }\n\n      if (this.map.listeners('contextmenu')) {\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return true;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return false;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      return true;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      return false;\n    }\n  }]);\n\n  return BlockableMapEventHandler;\n}();\n\nexport { BlockableMapEventHandler as default };","map":null,"metadata":{},"sourceType":"module"}