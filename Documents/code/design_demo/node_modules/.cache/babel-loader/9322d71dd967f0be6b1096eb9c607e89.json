{"ast":null,"code":"import { flow, deepAssign } from '../../../utils';\nimport { basicFunnel } from './basic';\n/**\n * 处理字段数据\n * @param params\n */\n\nfunction field(params) {\n  var _a;\n\n  var chart = params.chart,\n      options = params.options;\n  var _b = options.data,\n      data = _b === void 0 ? [] : _b,\n      yField = options.yField; // 绘制漏斗图\n\n  chart.data(data);\n  chart.scale((_a = {}, _a[yField] = {\n    sync: true\n  }, _a));\n  return params;\n}\n/**\n * geometry处理\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var seriesField = options.seriesField,\n      isTransposed = options.isTransposed;\n  chart.facet('rect', {\n    fields: [seriesField],\n    padding: [isTransposed ? 0 : 32, 10, 0, 10],\n    eachView: function (view, facet) {\n      basicFunnel(deepAssign({}, params, {\n        chart: view,\n        options: {\n          data: facet.data\n        }\n      }));\n    }\n  });\n  return params;\n}\n/**\n * 分面漏斗\n * @param chart\n * @param options\n */\n\n\nexport function facetFunnel(params) {\n  return flow(field, geometry)(params);\n}","map":null,"metadata":{},"sourceType":"module"}