{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport G6 from '@antv/g6';\nimport { defaultMargin, defaultLabelStyle } from '../../constants';\nimport { getStyle, getCssPadding, getSize, getArrowCfg, createMarker } from '../../utils';\n\nvar getPathInfo = function (cfg) {\n  var edgeCfg = cfg.edgeCfg;\n  var startPoint = cfg.startPoint;\n  var endPoint = cfg.endPoint;\n  var startX = startPoint.x,\n      startY = startPoint.y;\n  var endX = endPoint.x,\n      endY = endPoint.y;\n  var Ydiff = endY - startY;\n  var slope = Ydiff !== 0 ? Math.min(500 / Math.abs(Ydiff), 20) : 0;\n  var cpOffset = slope > 15 ? 0 : 16;\n  var offset = Ydiff < 0 ? cpOffset : -cpOffset;\n  var line1EndPoint = {\n    x: startX + slope,\n    y: endY + offset\n  };\n  var line2StartPoint = {\n    x: line1EndPoint.x + cpOffset,\n    y: endY\n  }; // 控制点坐标\n\n  var controlPoint = {\n    x: (line1EndPoint.x - startX) * (endY - startY) / (line1EndPoint.y - startY) + startX,\n    y: endY\n  };\n  var path = [['M', startX, startY], ['L', line1EndPoint.x, line1EndPoint.y], ['Q', controlPoint.x, controlPoint.y, line2StartPoint.x, line2StartPoint.y], ['L', endX, endY]];\n\n  if (Math.abs(Ydiff) <= 5) {\n    path = [['M', startX, startY], ['L', endX, endY]];\n  }\n\n  var _a = edgeCfg,\n      startArrowCfg = _a.startArrow,\n      endArrowCfg = _a.endArrow;\n  var startArrow = getArrowCfg(startArrowCfg, cfg);\n  var endArrow = getArrowCfg(endArrowCfg, cfg);\n  return {\n    startArrow: startArrow,\n    endArrow: endArrow,\n    path: path,\n    line2StartPoint: line2StartPoint,\n    endY: endY\n  };\n};\n\nvar getPathText = function (value) {\n  var text;\n  var subText;\n\n  if (value instanceof Object) {\n    text = value.text;\n    subText = value.subText;\n  } else {\n    text = value;\n  }\n\n  return {\n    text: text,\n    subText: subText\n  };\n}; // 资金流向图\n\n\nexport var registerFundFlowItems = function () {\n  // 注册节点\n  G6.registerNode('fund-card', {\n    // @ts-ignore\n    draw: function (cfg, group) {\n      var _a, _b;\n\n      if (cfg === void 0) {\n        cfg = {};\n      }\n\n      var _c = cfg.value,\n          value = _c === void 0 ? {} : _c,\n          nodeCfg = cfg.nodeCfg,\n          markerCfg = cfg.markerCfg;\n      var _d = nodeCfg,\n          _e = _d.label,\n          label = _e === void 0 ? {} : _e,\n          style = _d.style,\n          _f = _d.padding,\n          padding = _f === void 0 ? 0 : _f,\n          customContent = _d.customContent;\n      var labelStyle = label.style;\n      var paddingArray = getCssPadding(padding);\n      var size = getSize(cfg.size);\n      var height = 0; // 统计容器总高度，动态设置\n\n      var shapeWidth = size[0];\n      var contentWidth = shapeWidth - paddingArray[1] - paddingArray[3];\n      var contentHeight = size[1] - paddingArray[0] - paddingArray[2]; // card box\n\n      var cardStyle = getStyle(style, cfg, group);\n      var shape = group.addShape('rect', {\n        attrs: __assign({\n          x: 0,\n          y: 0,\n          width: size[0],\n          height: size[1],\n          radius: size[1] / 2,\n          fill: '#fff',\n          stroke: '#40a9ff'\n        }, cardStyle),\n        name: 'main-box',\n        draggable: true\n      });\n\n      if (value) {\n        height += paddingArray[0];\n\n        var createRowItems_1 = function (item, contentWidth, startX) {\n          var _a, _b;\n\n          var text = item.text,\n              icon = item.icon;\n          var textShape;\n          var iconShape;\n\n          if (icon) {\n            iconShape = group.addShape('image', {\n              attrs: __assign({\n                x: startX,\n                y: height,\n                img: icon,\n                width: contentHeight,\n                height: contentHeight\n              }, getStyle(labelStyle, cfg, group, 'icon')),\n              name: 'fund-icon'\n            });\n          }\n\n          textShape = group === null || group === void 0 ? void 0 : group.addShape('text', {\n            attrs: __assign(__assign({\n              textBaseline: 'middle',\n              textAlign: iconShape ? 'start' : 'center',\n              x: startX + (iconShape ? (iconShape === null || iconShape === void 0 ? void 0 : iconShape.getBBox().width) + defaultMargin : contentWidth / 2),\n              y: paddingArray[0] + contentHeight / 2,\n              text: text\n            }, defaultLabelStyle), getStyle(labelStyle, cfg, group, 'text')),\n            name: \"fund-text\"\n          });\n          return [(_a = textShape === null || textShape === void 0 ? void 0 : textShape.getBBox().height) !== null && _a !== void 0 ? _a : 0, (_b = iconShape === null || iconShape === void 0 ? void 0 : iconShape.getBBox().height) !== null && _b !== void 0 ? _b : 0];\n        };\n\n        var createItems = function (item) {\n          var _a;\n\n          var itemsHeight = [];\n\n          if (customContent) {\n            itemsHeight.push((_a = customContent(item, group, {\n              startX: paddingArray[3],\n              startY: height,\n              width: contentWidth\n            })) !== null && _a !== void 0 ? _a : 0);\n          } else {\n            itemsHeight.push.apply(itemsHeight, createRowItems_1(item, contentWidth, paddingArray[3]));\n          }\n\n          height += Math.max.apply(Math, itemsHeight);\n        };\n\n        createItems(value);\n      }\n\n      shape === null || shape === void 0 ? void 0 : shape.attr('height', Math.max(size[1], height + paddingArray[2])); // collapse marker\n\n      if (markerCfg) {\n        var stateCollapsed = ((_b = (_a = group === null || group === void 0 ? void 0 : group.get('item')) === null || _a === void 0 ? void 0 : _a.getModel()) !== null && _b !== void 0 ? _b : {}).collapsed;\n\n        var _g = shape.getBBox(),\n            shapeWidth_1 = _g.width,\n            shapeHeight = _g.height;\n\n        var _h = typeof markerCfg === 'function' ? markerCfg(cfg, group) : markerCfg,\n            show = _h.show,\n            _j = _h.position,\n            position = _j === void 0 ? 'right' : _j,\n            collapsed = _h.collapsed,\n            markerStyle = _h.style;\n\n        createMarker({\n          show: show,\n          position: position,\n          collapsed: stateCollapsed !== null && stateCollapsed !== void 0 ? stateCollapsed : collapsed,\n          style: markerStyle\n        }, group, [shapeWidth_1, shapeHeight]);\n        shape.attr('defaultCollapsed', collapsed);\n      }\n\n      return shape;\n    },\n\n    /**\n     * 更新节点，包含文本\n     * @override\n     * @param  {Object} cfg 节点的配置项\n     * @param  {Node} node 节点\n     */\n    update: undefined\n  }, 'single-node'); // 注册边\n\n  G6.registerEdge('fund-line', {\n    // @ts-ignore\n    draw: function draw(cfg, group) {\n      if (cfg === void 0) {\n        cfg = {};\n      }\n\n      var edgeCfg = cfg.edgeCfg,\n          value = cfg.value;\n\n      var _a = getPathText(value),\n          text = _a.text,\n          subText = _a.subText;\n\n      var _b = edgeCfg,\n          edgeStyle = _b.style,\n          labelCfg = _b.label;\n\n      var _c = getPathInfo(cfg),\n          startArrow = _c.startArrow,\n          endArrow = _c.endArrow,\n          path = _c.path,\n          line2StartPoint = _c.line2StartPoint,\n          endY = _c.endY;\n\n      var labelStyle = (labelCfg !== null && labelCfg !== void 0 ? labelCfg : {}).style;\n      var line = group.addShape('path', {\n        attrs: __assign({\n          path: path,\n          stroke: '#ccc',\n          startArrow: startArrow,\n          endArrow: endArrow\n        }, typeof edgeStyle === 'function' ? edgeStyle(cfg, group) : edgeStyle),\n        name: 'path-shape'\n      });\n\n      var createItem = function (itemText, key) {\n        group.addShape('text', {\n          attrs: __assign(__assign({\n            text: itemText,\n            x: line2StartPoint.x,\n            y: key === 'text' ? endY - 4 : endY + 16\n          }, defaultLabelStyle), getStyle(labelStyle, cfg, group, key)),\n          name: \"line-text-\".concat(key)\n        });\n      };\n\n      text && createItem(text, 'text');\n      subText && createItem(subText, 'subText');\n      return line;\n    },\n    // @ts-ignore\n    update: function (cfg, edge) {\n      var edgeCfg = cfg.edgeCfg,\n          value = cfg.value;\n\n      var _a = getPathText(value),\n          text = _a.text,\n          subText = _a.subText;\n\n      var group = edge.getContainer();\n\n      var getShape = function (shapeName) {\n        return group.get('children').find(function (item) {\n          return item.get('name') === shapeName;\n        });\n      }; // const { startArrow, endArrow } = getPathInfo(cfg);\n\n\n      var _b = getPathInfo(cfg),\n          startArrow = _b.startArrow,\n          endArrow = _b.endArrow,\n          path = _b.path,\n          line2StartPoint = _b.line2StartPoint,\n          endY = _b.endY;\n\n      var _c = edgeCfg,\n          edgeStyle = _c.style,\n          labelCfg = _c.label;\n      var labelStyle = (labelCfg !== null && labelCfg !== void 0 ? labelCfg : {}).style; // path\n\n      var pathShape = getShape('path-shape');\n      pathShape === null || pathShape === void 0 ? void 0 : pathShape.attr(__assign({\n        path: path,\n        stroke: '#ccc',\n        startArrow: startArrow,\n        endArrow: endArrow\n      }, typeof edgeStyle === 'function' ? edgeStyle(cfg, group) : edgeStyle)); // path text\n\n      var texts = ['text', 'subText'];\n      texts.forEach(function (key) {\n        var textShape = getShape(\"line-text-\".concat(key));\n        textShape === null || textShape === void 0 ? void 0 : textShape.attr(__assign(__assign({\n          x: line2StartPoint.x,\n          y: key === 'text' ? endY - 4 : endY + 16,\n          text: key === 'text' ? text : subText\n        }, defaultLabelStyle), getStyle(labelStyle, cfg, group, key)));\n      });\n    }\n  }, 'single-edge');\n};","map":null,"metadata":{},"sourceType":"module"}