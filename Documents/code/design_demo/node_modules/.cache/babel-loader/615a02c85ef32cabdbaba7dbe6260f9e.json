{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nexport function join(geoData, options) {\n  var sourceField = options.sourceField,\n      targetField = options.targetField,\n      data = options.data;\n  var dataObj = {};\n  data.forEach(function (element) {\n    dataObj[element[sourceField]] = element;\n  });\n  geoData.dataArray = geoData.dataArray.map(function (item) {\n    var joinName = item[targetField];\n    return _objectSpread(_objectSpread({}, item), dataObj[joinName]);\n  });\n  return geoData;\n}","map":null,"metadata":{},"sourceType":"module"}