{"ast":null,"code":"import { Config } from '../global/config';\nimport { StringExt, FunctionExt } from '../util';\nexport var LocalStorage;\n\n(function (LocalStorage) {\n  const prefix = `${Config.prefixCls}.storage`;\n\n  function insert(collection, doc, cb) {\n    const id = doc.id || StringExt.uniqueId('doc-');\n    const index = loadIndex(collection);\n    index.keys.push(id);\n    setItem(docKey(collection, id), doc);\n    setItem(indexKey(collection), index);\n    callback(cb, null, Object.assign(Object.assign({}, doc), {\n      id\n    }));\n  }\n\n  LocalStorage.insert = insert;\n\n  function find(collection, query, cb) {\n    const index = loadIndex(collection);\n    const docs = [];\n\n    if (query == null) {\n      index.keys.forEach(id => {\n        const doc = getItem(docKey(collection, id));\n\n        if (!doc) {\n          callback(cb, new Error(`No document found for an ID '${id}' from index.`));\n        } else {\n          docs.push(doc);\n        }\n      });\n      callback(cb, null, docs);\n    } else if (query.id) {\n      const doc = getItem(docKey(collection, query.id));\n      callback(cb, null, doc ? [doc] : []);\n    } else {\n      callback(cb, null, []);\n    }\n  }\n\n  LocalStorage.find = find;\n\n  function remove(collection, query, cb) {\n    const index = loadIndex(collection);\n\n    if (query == null) {\n      index.keys.forEach(id => {\n        localStorage.removeItem(docKey(collection, id));\n      });\n      localStorage.removeItem(indexKey(collection));\n      callback(cb, null);\n    } else if (query.id) {\n      const idx = index.keys.indexOf(query.id);\n\n      if (idx >= 0) {\n        index.keys.splice(idx, 1);\n      }\n\n      localStorage.removeItem(docKey(collection, query.id));\n      setItem(indexKey(collection), index);\n      callback(cb, null);\n    }\n  }\n\n  LocalStorage.remove = remove; // util\n  // ----\n\n  function callback(cb, err, ret) {\n    if (cb) {\n      FunctionExt.defer(() => {\n        cb(err, ret);\n      });\n    }\n  }\n\n  function setItem(key, item) {\n    localStorage.setItem(key, JSON.stringify(item));\n  }\n\n  function getItem(key) {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : null;\n  }\n\n  function loadIndex(collection) {\n    const index = getItem(indexKey(collection));\n\n    if (index) {\n      if (index.keys == null) {\n        index.keys = [];\n      }\n\n      return index;\n    }\n\n    return {\n      keys: []\n    };\n  }\n\n  function docKey(collection, id) {\n    return `${prefix}.${collection}.docs.${id}`;\n  }\n\n  function indexKey(collection) {\n    return `${prefix}.${collection}.index`;\n  }\n})(LocalStorage || (LocalStorage = {}));","map":null,"metadata":{},"sourceType":"module"}